{
  "$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
  "version": "1.78.1",
  "library": "sap.ui.unified",
  "symbols": [
    {
      "kind": "namespace",
      "name": "sap.ui.unified",
      "basename": "unified",
      "resource": "sap/ui/unified/library.js",
      "module": "sap/ui/unified/library",
      "export": "",
      "static": true,
      "visibility": "public",
      "description": "Unified controls intended for both, mobile and desktop scenarios"
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.Calendar",
      "basename": "Calendar",
      "resource": "sap/ui/unified/Calendar.js",
      "module": "sap/ui/unified/Calendar",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.22.0",
      "extends": "sap.ui.core.Control",
      "description": "Basic Calendar. This calendar is used for DatePickers",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "intervalSelection",
            "type": "boolean",
            "defaultValue": false,
            "group": "Behavior",
            "visibility": "public",
            "description": "If set, interval selection is allowed",
            "methods": ["getIntervalSelection", "setIntervalSelection"]
          },
          {
            "name": "singleSelection",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "If set, only a single date or interval, if intervalSelection is enabled, can be selected",
            "methods": ["getSingleSelection", "setSingleSelection"]
          },
          {
            "name": "months",
            "type": "int",
            "defaultValue": 1,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Determines the number of months displayed.\n\nAs of version 1.50, the duplicated dates are not displayed if there are multiple months.\n\n<b>Note:</b> On phones, only one month is displayed.",
            "methods": ["getMonths", "setMonths"]
          },
          {
            "name": "firstDayOfWeek",
            "type": "int",
            "defaultValue": -1,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.28.9",
            "description": "If set, the first day of the displayed week is this day. Valid values are 0 to 6. If not a valid value is set, the default of the used locale is used.",
            "methods": ["getFirstDayOfWeek", "setFirstDayOfWeek"]
          },
          {
            "name": "nonWorkingDays",
            "type": "int[]",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.28.9",
            "description": "If set, the provided weekdays are displayed as non-working days. Valid values inside the array are 0 to 6. If not set, the weekend defined in the locale settings is displayed as non-working days.\n\n<b>Note:</b> Keep in mind that this property sets only weekly-recurring days as non-working. If you need specific dates or dates ranges, such as national holidays, use the <code>specialDates</code> aggregation to set them. Both the non-working days (from property) and dates (from aggregation) are visualized the same.",
            "methods": ["getNonWorkingDays", "setNonWorkingDays"]
          },
          {
            "name": "primaryCalendarType",
            "type": "sap.ui.core.CalendarType",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.34.0",
            "description": "If set, the calendar type is used for display. If not set, the calendar type of the global configuration is used.",
            "methods": ["getPrimaryCalendarType", "setPrimaryCalendarType"]
          },
          {
            "name": "secondaryCalendarType",
            "type": "sap.ui.core.CalendarType",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.34.0",
            "description": "If set, the days are also displayed in this calendar type If not set, the dates are only displayed in the primary calendar type",
            "methods": ["getSecondaryCalendarType", "setSecondaryCalendarType"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Dimension",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Width of Calendar\n\n<b>Note:</b> There is a theme depending minimum width, so the calendar can not be set smaller.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "minDate",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Minimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> if the date is inside of a month the complete month is displayed, but dates outside the valid range can not be selected.\n\n<b>Note:</b> If the <code>minDate</code> is set to be after the <code>maxDate</code>, the <code>maxDate</code> is set to the end of the month of the <code>minDate</code>.",
            "methods": ["getMinDate", "setMinDate"]
          },
          {
            "name": "maxDate",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Maximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> if the date is inside of a month the complete month is displayed, but dates outside the valid range can not be selected.\n\n<b>Note:</b> If the <code>maxDate</code> is set to be before the <code>minDate</code>, the <code>minDate</code> is set to the begin of the month of the <code>maxDate</code>.",
            "methods": ["getMaxDate", "setMaxDate"]
          },
          {
            "name": "showWeekNumbers",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.48",
            "description": "Determines whether the week numbers in the months are displayed.\n\n<b>Note:</b> For Islamic calendars, the week numbers are not displayed regardless of what is set to this property.",
            "methods": ["getShowWeekNumbers", "setShowWeekNumbers"]
          }
        ],
        "aggregations": [
          {
            "name": "selectedDates",
            "singularName": "selectedDate",
            "type": "sap.ui.unified.DateRange",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Dates or date ranges for selected dates.\n\nTo set a single date (instead of a range), set only the <code>startDate</code> property of the {@link sap.ui.unified.DateRange} class.",
            "methods": [
              "getSelectedDates",
              "destroySelectedDates",
              "insertSelectedDate",
              "addSelectedDate",
              "removeSelectedDate",
              "indexOfSelectedDate",
              "removeAllSelectedDates"
            ]
          },
          {
            "name": "specialDates",
            "singularName": "specialDate",
            "type": "sap.ui.unified.DateTypeRange",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.24.0",
            "description": "Dates or date ranges with type, to visualize special days in the <code>Calendar</code>. If one day is assigned to more than one Type, only the first one will be used.\n\nTo set a single date (instead of a range), set only the <code>startDate</code> property of the {@link sap.ui.unified.DateRange} class.\n\n<b>Note:</b> Keep in mind that the <code>NonWorking</code> type is for marking specific dates or date ranges as non-working, where if you need a weekly-reccuring non-working days (weekend), you should use the <code>nonWorkingDays</code> property. Both the non-working days (from property) and dates (from aggregation) are visualized the same.",
            "methods": [
              "getSpecialDates",
              "destroySpecialDates",
              "insertSpecialDate",
              "addSpecialDate",
              "removeSpecialDate",
              "indexOfSpecialDate",
              "removeAllSpecialDates"
            ]
          },
          {
            "name": "disabledDates",
            "singularName": "disabledDate",
            "type": "sap.ui.unified.DateRange",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Dates or date ranges for disabled dates.\n\nTo set a single date (instead of a range), set only the <code>startDate</code> property of the {@link sap.ui.unified.DateRange} class.",
            "methods": [
              "getDisabledDates",
              "destroyDisabledDates",
              "insertDisabledDate",
              "addDisabledDate",
              "removeDisabledDate",
              "indexOfDisabledDate",
              "removeAllDisabledDates"
            ]
          },
          {
            "name": "header",
            "singularName": "header",
            "type": "sap.ui.unified.calendar.Header",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "Hidden, for internal use only.",
            "methods": ["getHeader", "destroyHeader", "setHeader"]
          },
          {
            "name": "secondMonthHeader",
            "singularName": "secondMonthHeader",
            "type": "sap.ui.unified.calendar.Header",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": [
              "getSecondMonthHeader",
              "destroySecondMonthHeader",
              "setSecondMonthHeader"
            ]
          },
          {
            "name": "month",
            "singularName": "month",
            "type": "sap.ui.unified.calendar.Month",
            "cardinality": "0..n",
            "visibility": "hidden",
            "methods": [
              "getMonth",
              "destroyMonth",
              "insertMonth",
              "addMonth",
              "removeMonth",
              "indexOfMonth",
              "removeAllMonth"
            ]
          },
          {
            "name": "monthPicker",
            "singularName": "monthPicker",
            "type": "sap.ui.unified.calendar.MonthPicker",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": [
              "getMonthPicker",
              "destroyMonthPicker",
              "setMonthPicker"
            ]
          },
          {
            "name": "yearPicker",
            "singularName": "yearPicker",
            "type": "sap.ui.unified.calendar.YearPicker",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": ["getYearPicker", "destroyYearPicker", "setYearPicker"]
          },
          {
            "name": "yearRangePicker",
            "singularName": "yearRangePicker",
            "type": "sap.ui.unified.calendar.YearPicker",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": [
              "getYearRangePicker",
              "destroyYearRangePicker",
              "setYearRangePicker"
            ]
          }
        ],
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.28.0",
            "description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          },
          {
            "name": "legend",
            "singularName": "legend",
            "type": "sap.ui.unified.CalendarLegend",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.38.5",
            "description": "Association to the <code>CalendarLegend</code> explaining the colors of the <code>specialDates</code>.\n\n<b>Note</b> The legend does not have to be rendered but must exist, and all required types must be assigned.",
            "methods": ["getLegend", "setLegend"]
          }
        ],
        "events": [
          {
            "name": "select",
            "visibility": "public",
            "description": "Date selection changed",
            "methods": ["attachSelect", "detachSelect", "fireSelect"]
          },
          {
            "name": "cancel",
            "visibility": "public",
            "description": "Date selection was cancelled",
            "methods": ["attachCancel", "detachCancel", "fireCancel"]
          },
          {
            "name": "startDateChange",
            "visibility": "public",
            "since": "1.34.0",
            "description": "<code>startDate</code> was changed while navigation in <code>Calendar</code>\n\nUse <code>getStartDate</code> function to determine the current start date",
            "methods": [
              "attachStartDateChange",
              "detachStartDateChange",
              "fireStartDateChange"
            ]
          },
          {
            "name": "weekNumberSelect",
            "visibility": "public",
            "since": "1.56",
            "description": "Week number selection changed. By default, clicking on the week number will select the corresponding week. If the week has already been selected, clicking the week number will deselect it.\n\nThe default behavior can be prevented using the <code>preventDefault</code> method.\n\n<b>Note</b> Works for Gregorian calendars only and when <code>intervalSelection</code> is set to 'true'.",
            "parameters": {
              "weekNumber": {
                "name": "weekNumber",
                "type": "int",
                "description": "The selected week number."
              },
              "weekDays": {
                "name": "weekDays",
                "type": "sap.ui.unified.DateRange",
                "description": "The days of the corresponding week that are selected or deselected."
              }
            },
            "methods": [
              "attachWeekNumberSelect",
              "detachWeekNumberSelect",
              "fireWeekNumberSelect"
            ]
          }
        ],
        "designtime": "sap/ui/unified/designtime/Calendar.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "Object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new Calendar.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "cancel",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Date selection was cancelled"
        },
        {
          "name": "select",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Date selection changed"
        },
        {
          "name": "startDateChange",
          "visibility": "public",
          "since": "1.34.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "<code>startDate</code> was changed while navigation in <code>Calendar</code>\n\nUse <code>getStartDate</code> function to determine the current start date"
        },
        {
          "name": "weekNumberSelect",
          "visibility": "public",
          "since": "1.56",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "weekNumber": {
                      "name": "weekNumber",
                      "type": "int",
                      "optional": false,
                      "description": "The selected week number."
                    },
                    "weekDays": {
                      "name": "weekDays",
                      "type": "sap.ui.unified.DateRange",
                      "optional": false,
                      "description": "The days of the corresponding week that are selected or deselected."
                    }
                  }
                }
              }
            }
          ],
          "description": "Week number selection changed. By default, clicking on the week number will select the corresponding week. If the week has already been selected, clicking the week number will deselect it.\n\nThe default behavior can be prevented using the <code>preventDefault</code> method.\n\n<b>Note</b> Works for Gregorian calendars only and when <code>intervalSelection</code> is set to 'true'."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addDisabledDate",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDisabledDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The disabledDate to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some disabledDate to the aggregation {@link #getDisabledDates disabledDates}."
        },
        {
          "name": "addSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some selectedDate to the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "addSpecialDate",
          "visibility": "public",
          "since": "1.24.0",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSpecialDate",
              "type": "sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some specialDate to the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "attachCancel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.Calendar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:cancel cancel} event of this <code>sap.ui.unified.Calendar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.Calendar</code> itself.\n\nDate selection was cancelled"
        },
        {
          "name": "attachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.Calendar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:select select} event of this <code>sap.ui.unified.Calendar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.Calendar</code> itself.\n\nDate selection changed"
        },
        {
          "name": "attachStartDateChange",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.Calendar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:startDateChange startDateChange} event of this <code>sap.ui.unified.Calendar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.Calendar</code> itself.\n\n<code>startDate</code> was changed while navigation in <code>Calendar</code>\n\nUse <code>getStartDate</code> function to determine the current start date"
        },
        {
          "name": "attachWeekNumberSelect",
          "visibility": "public",
          "since": "1.56",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.Calendar</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:weekNumberSelect weekNumberSelect} event of this <code>sap.ui.unified.Calendar</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.Calendar</code> itself.\n\nWeek number selection changed. By default, clicking on the week number will select the corresponding week. If the week has already been selected, clicking the week number will deselect it.\n\nThe default behavior can be prevented using the <code>preventDefault</code> method.\n\n<b>Note</b> Works for Gregorian calendars only and when <code>intervalSelection</code> is set to 'true'."
        },
        {
          "name": "destroyDisabledDates",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the disabledDates in the aggregation {@link #getDisabledDates disabledDates}."
        },
        {
          "name": "destroySelectedDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the selectedDates in the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "destroySpecialDates",
          "visibility": "public",
          "since": "1.24.0",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the specialDates in the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "detachCancel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:cancel cancel} event of this <code>sap.ui.unified.Calendar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:select select} event of this <code>sap.ui.unified.Calendar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachStartDateChange",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:startDateChange startDateChange} event of this <code>sap.ui.unified.Calendar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachWeekNumberSelect",
          "visibility": "public",
          "since": "1.56",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:weekNumberSelect weekNumberSelect} event of this <code>sap.ui.unified.Calendar</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "displayDate",
          "visibility": "public",
          "since": "1.28.0",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDate",
              "type": "Object",
              "optional": false,
              "description": "JavaScript date object for focused date."
            }
          ],
          "description": "Displays a date in the calendar but doesn't set the focus."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.Calendar with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireCancel",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:cancel cancel} to attached listeners."
        },
        {
          "name": "fireSelect",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:select select} to attached listeners."
        },
        {
          "name": "fireStartDateChange",
          "visibility": "protected",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:startDateChange startDateChange} to attached listeners."
        },
        {
          "name": "fireWeekNumberSelect",
          "visibility": "protected",
          "since": "1.56",
          "returnValue": {
            "type": "boolean",
            "description": "Whether or not to prevent the default action"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "weekNumber": {
                  "name": "weekNumber",
                  "type": "int",
                  "optional": true,
                  "description": "The selected week number."
                },
                "weekDays": {
                  "name": "weekDays",
                  "type": "sap.ui.unified.DateRange",
                  "optional": true,
                  "description": "The days of the corresponding week that are selected or deselected."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:weekNumberSelect weekNumberSelect} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault</code>-method on the event object."
        },
        {
          "name": "focusDate",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDate",
              "type": "Object",
              "optional": false,
              "description": "JavaScript date object for focused date."
            }
          ],
          "description": "Sets the focused date of the calendar."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getDisabledDates",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": { "type": "sap.ui.unified.DateRange[]" },
          "description": "Gets content of aggregation {@link #getDisabledDates disabledDates}.\n\nDates or date ranges for disabled dates.\n\nTo set a single date (instead of a range), set only the <code>startDate</code> property of the {@link sap.ui.unified.DateRange} class."
        },
        {
          "name": "getFirstDayOfWeek",
          "visibility": "public",
          "since": "1.28.9",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>firstDayOfWeek</code>"
          },
          "description": "Gets current value of property {@link #getFirstDayOfWeek firstDayOfWeek}.\n\nIf set, the first day of the displayed week is this day. Valid values are 0 to 6. If not a valid value is set, the default of the used locale is used.\n\nDefault value is <code>-1</code>."
        },
        {
          "name": "getIntervalSelection",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>intervalSelection</code>"
          },
          "description": "Gets current value of property {@link #getIntervalSelection intervalSelection}.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getLegend",
          "visibility": "public",
          "since": "1.38.5",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getLegend legend}, or <code>null</code>."
        },
        {
          "name": "getMaxDate",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>maxDate</code>"
          },
          "description": "Gets current value of property {@link #getMaxDate maxDate}.\n\nMaximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> if the date is inside of a month the complete month is displayed, but dates outside the valid range can not be selected.\n\n<b>Note:</b> If the <code>maxDate</code> is set to be before the <code>minDate</code>, the <code>minDate</code> is set to the begin of the month of the <code>maxDate</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.Calendar."
        },
        {
          "name": "getMinDate",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>minDate</code>"
          },
          "description": "Gets current value of property {@link #getMinDate minDate}.\n\nMinimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> if the date is inside of a month the complete month is displayed, but dates outside the valid range can not be selected.\n\n<b>Note:</b> If the <code>minDate</code> is set to be after the <code>maxDate</code>, the <code>maxDate</code> is set to the end of the month of the <code>minDate</code>."
        },
        {
          "name": "getMonths",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>months</code>"
          },
          "description": "Gets current value of property {@link #getMonths months}.\n\nDetermines the number of months displayed.\n\nAs of version 1.50, the duplicated dates are not displayed if there are multiple months.\n\n<b>Note:</b> On phones, only one month is displayed.\n\nDefault value is <code>1</code>."
        },
        {
          "name": "getNonWorkingDays",
          "visibility": "public",
          "since": "1.28.9",
          "returnValue": {
            "type": "int[]",
            "description": "Value of property <code>nonWorkingDays</code>"
          },
          "description": "Gets current value of property {@link #getNonWorkingDays nonWorkingDays}.\n\nIf set, the provided weekdays are displayed as non-working days. Valid values inside the array are 0 to 6. If not set, the weekend defined in the locale settings is displayed as non-working days.\n\n<b>Note:</b> Keep in mind that this property sets only weekly-recurring days as non-working. If you need specific dates or dates ranges, such as national holidays, use the <code>specialDates</code> aggregation to set them. Both the non-working days (from property) and dates (from aggregation) are visualized the same."
        },
        {
          "name": "getPrimaryCalendarType",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.core.CalendarType",
            "description": "Value of property <code>primaryCalendarType</code>"
          },
          "description": "Gets current value of property {@link #getPrimaryCalendarType primaryCalendarType}.\n\nIf set, the calendar type is used for display. If not set, the calendar type of the global configuration is used."
        },
        {
          "name": "getSecondaryCalendarType",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.core.CalendarType",
            "description": "Value of property <code>secondaryCalendarType</code>"
          },
          "description": "Gets current value of property {@link #getSecondaryCalendarType secondaryCalendarType}.\n\nIf set, the days are also displayed in this calendar type If not set, the dates are only displayed in the primary calendar type"
        },
        {
          "name": "getSelectedDates",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.DateRange[]" },
          "description": "Gets content of aggregation {@link #getSelectedDates selectedDates}.\n\nDates or date ranges for selected dates.\n\nTo set a single date (instead of a range), set only the <code>startDate</code> property of the {@link sap.ui.unified.DateRange} class."
        },
        {
          "name": "getShowWeekNumbers",
          "visibility": "public",
          "since": "1.48",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showWeekNumbers</code>"
          },
          "description": "Gets current value of property {@link #getShowWeekNumbers showWeekNumbers}.\n\nDetermines whether the week numbers in the months are displayed.\n\n<b>Note:</b> For Islamic calendars, the week numbers are not displayed regardless of what is set to this property.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSingleSelection",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>singleSelection</code>"
          },
          "description": "Gets current value of property {@link #getSingleSelection singleSelection}.\n\nIf set, only a single date or interval, if intervalSelection is enabled, can be selected\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSpecialDates",
          "visibility": "public",
          "since": "1.24.0",
          "returnValue": { "type": "sap.ui.unified.DateTypeRange[]" },
          "description": "Gets content of aggregation {@link #getSpecialDates specialDates}.\n\nDates or date ranges with type, to visualize special days in the <code>Calendar</code>. If one day is assigned to more than one Type, only the first one will be used.\n\nTo set a single date (instead of a range), set only the <code>startDate</code> property of the {@link sap.ui.unified.DateRange} class.\n\n<b>Note:</b> Keep in mind that the <code>NonWorking</code> type is for marking specific dates or date ranges as non-working, where if you need a weekly-reccuring non-working days (weekend), you should use the <code>nonWorkingDays</code> property. Both the non-working days (from property) and dates (from aggregation) are visualized the same."
        },
        {
          "name": "getStartDate",
          "visibility": "public",
          "since": "1.34.1",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "Object",
            "description": "JavaScript date object for start date."
          },
          "description": "Returns the first day of the displayed month.\n\nThere might be some days of the previous month shown, but they can not be focused."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nWidth of Calendar\n\n<b>Note:</b> There is a theme depending minimum width, so the calendar can not be set smaller."
        },
        {
          "name": "indexOfDisabledDate",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oDisabledDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The disabledDate whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.DateRange</code> in the aggregation {@link #getDisabledDates disabledDates}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.DateRange</code> in the aggregation {@link #getSelectedDates selectedDates}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfSpecialDate",
          "visibility": "public",
          "since": "1.24.0",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSpecialDate",
              "type": "sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.DateTypeRange</code> in the aggregation {@link #getSpecialDates specialDates}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertDisabledDate",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDisabledDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The disabledDate to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the disabledDate should be inserted at; for a negative value of <code>iIndex</code>, the disabledDate is inserted at position 0; for a value greater than the current size of the aggregation, the disabledDate is inserted at the last position"
            }
          ],
          "description": "Inserts a disabledDate into the aggregation {@link #getDisabledDates disabledDates}."
        },
        {
          "name": "insertSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the selectedDate should be inserted at; for a negative value of <code>iIndex</code>, the selectedDate is inserted at position 0; for a value greater than the current size of the aggregation, the selectedDate is inserted at the last position"
            }
          ],
          "description": "Inserts a selectedDate into the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "insertSpecialDate",
          "visibility": "public",
          "since": "1.24.0",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSpecialDate",
              "type": "sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the specialDate should be inserted at; for a negative value of <code>iIndex</code>, the specialDate is inserted at position 0; for a value greater than the current size of the aggregation, the specialDate is inserted at the last position"
            }
          ],
          "description": "Inserts a specialDate into the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllDisabledDates",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.DateRange[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getDisabledDates disabledDates}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllSelectedDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateRange[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSelectedDates selectedDates}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllSpecialDates",
          "visibility": "public",
          "since": "1.24.0",
          "returnValue": {
            "type": "sap.ui.unified.DateTypeRange[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSpecialDates specialDates}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeDisabledDate",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.DateRange",
            "description": "The removed disabledDate or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vDisabledDate",
              "type": "int|string|sap.ui.unified.DateRange",
              "optional": false,
              "description": "The disabledDate to remove or its index or id"
            }
          ],
          "description": "Removes a disabledDate from the aggregation {@link #getDisabledDates disabledDates}."
        },
        {
          "name": "removeSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateRange",
            "description": "The removed selectedDate or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSelectedDate",
              "type": "int|string|sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to remove or its index or id"
            }
          ],
          "description": "Removes a selectedDate from the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "removeSpecialDate",
          "visibility": "public",
          "since": "1.24.0",
          "returnValue": {
            "type": "sap.ui.unified.DateTypeRange",
            "description": "The removed specialDate or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSpecialDate",
              "type": "int|string|sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate to remove or its index or id"
            }
          ],
          "description": "Removes a specialDate from the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "setFirstDayOfWeek",
          "visibility": "public",
          "since": "1.28.9",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iFirstDayOfWeek",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>firstDayOfWeek</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFirstDayOfWeek firstDayOfWeek}.\n\nIf set, the first day of the displayed week is this day. Valid values are 0 to 6. If not a valid value is set, the default of the used locale is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>-1</code>."
        },
        {
          "name": "setIntervalSelection",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIntervalSelection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>intervalSelection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIntervalSelection intervalSelection}.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setLegend",
          "visibility": "public",
          "since": "1.38.5",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLegend",
              "type": "sap.ui.core.ID|sap.ui.unified.CalendarLegend",
              "optional": false,
              "description": "ID of an element which becomes the new target of this legend association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getLegend legend}."
        },
        {
          "name": "setMaxDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "<code>this</code> for method chaining"
          },
          "parameters": [
            {
              "name": "oDate",
              "type": "Date",
              "optional": false,
              "description": "a JavaScript date"
            }
          ],
          "description": "Sets a maximum date for the calendar."
        },
        {
          "name": "setMinDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "<code>this</code> for method chaining"
          },
          "parameters": [
            {
              "name": "oDate",
              "type": "Date",
              "optional": false,
              "description": "a JavaScript date"
            }
          ],
          "description": "Sets a minimum date for the calendar."
        },
        {
          "name": "setMonths",
          "visibility": "public",
          "since": "1.28.0",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iMonths",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>months</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMonths months}.\n\nDetermines the number of months displayed.\n\nAs of version 1.50, the duplicated dates are not displayed if there are multiple months.\n\n<b>Note:</b> On phones, only one month is displayed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>1</code>."
        },
        {
          "name": "setNonWorkingDays",
          "visibility": "public",
          "since": "1.28.9",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sNonWorkingDays",
              "type": "int[]",
              "optional": false,
              "description": "New value for property <code>nonWorkingDays</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getNonWorkingDays nonWorkingDays}.\n\nIf set, the provided weekdays are displayed as non-working days. Valid values inside the array are 0 to 6. If not set, the weekend defined in the locale settings is displayed as non-working days.\n\n<b>Note:</b> Keep in mind that this property sets only weekly-recurring days as non-working. If you need specific dates or dates ranges, such as national holidays, use the <code>specialDates</code> aggregation to set them. Both the non-working days (from property) and dates (from aggregation) are visualized the same.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setPrimaryCalendarType",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sPrimaryCalendarType",
              "type": "sap.ui.core.CalendarType",
              "optional": false,
              "description": "New value for property <code>primaryCalendarType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPrimaryCalendarType primaryCalendarType}.\n\nIf set, the calendar type is used for display. If not set, the calendar type of the global configuration is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSecondaryCalendarType",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSecondaryCalendarType",
              "type": "sap.ui.core.CalendarType",
              "optional": false,
              "description": "New value for property <code>secondaryCalendarType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSecondaryCalendarType secondaryCalendarType}.\n\nIf set, the days are also displayed in this calendar type If not set, the dates are only displayed in the primary calendar type\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setShowWeekNumbers",
          "visibility": "public",
          "since": "1.48",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowWeekNumbers",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showWeekNumbers</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowWeekNumbers showWeekNumbers}.\n\nDetermines whether the week numbers in the months are displayed.\n\n<b>Note:</b> For Islamic calendars, the week numbers are not displayed regardless of what is set to this property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSingleSelection",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSingleSelection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>singleSelection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSingleSelection singleSelection}.\n\nIf set, only a single date or interval, if intervalSelection is enabled, can be selected\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nWidth of Calendar\n\n<b>Note:</b> There is a theme depending minimum width, so the calendar can not be set smaller.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "namespace",
      "name": "sap.ui.unified.calendar",
      "basename": "calendar",
      "resource": "sap/ui/unified/calendar/CalendarUtils.js",
      "module": "sap/ui/unified/calendar/CalendarUtils",
      "static": true,
      "visibility": "public",
      "description": "Controls and helper classes around the calendar control."
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.calendar.DatesRow",
      "basename": "DatesRow",
      "resource": "sap/ui/unified/calendar/DatesRow.js",
      "module": "sap/ui/unified/calendar/DatesRow",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.30.0",
      "extends": "sap.ui.unified.calendar.Month",
      "description": "renders a row of days with ItemNavigation This is used inside the calendar. Not for stand alone usage If used inside the calendar the properties and aggregation are directly taken from the parent (To not duplicate and sync DateRanges and so on...)",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "startDate",
            "type": "object",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "Start date of the row If in rendering phase the date property is not in the range startDate + days, it is set to the start date So after setting the start date the date should be set to be in the range of the start date",
            "methods": ["getStartDate", "setStartDate"]
          },
          {
            "name": "days",
            "type": "int",
            "defaultValue": 7,
            "group": "Appearance",
            "visibility": "public",
            "description": "number of days displayed",
            "methods": ["getDays", "setDays"]
          },
          {
            "name": "showDayNamesLine",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.34.0",
            "description": "If set the day names are shown in a separate line. If not set the day names are shown inside the single days.",
            "methods": ["getShowDayNamesLine", "setShowDayNamesLine"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new calendar/DatesRow.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "displayDate",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "sap.ui.unified.calendar.DatesRow",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDate",
              "type": "object",
              "optional": false,
              "description": "JavaScript date object for focused date."
            }
          ],
          "description": "displays the a given date without setting the focus\n\nProperty <code>date</code> date to be focused or displayed. It must be in the displayed date range beginning with <code>startDate</code> and <code>days</code> days So set this properties before setting the date."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.calendar.DatesRow with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.unified.calendar.Month.extend}."
        },
        {
          "name": "getDays",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>days</code>"
          },
          "description": "Gets current value of property {@link #getDays days}.\n\nnumber of days displayed\n\nDefault value is <code>7</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.calendar.DatesRow."
        },
        {
          "name": "getShowDayNamesLine",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showDayNamesLine</code>"
          },
          "description": "Gets current value of property {@link #getShowDayNamesLine showDayNamesLine}.\n\nIf set the day names are shown in a separate line. If not set the day names are shown inside the single days.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getStartDate",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>startDate</code>"
          },
          "description": "Gets current value of property {@link #getStartDate startDate}.\n\nStart date of the row If in rendering phase the date property is not in the range startDate + days, it is set to the start date So after setting the start date the date should be set to be in the range of the start date"
        },
        {
          "name": "setDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.DatesRow",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDate",
              "type": "object",
              "optional": false,
              "description": "JavaScript date object for start date."
            }
          ],
          "description": "Setter for property <code>date</code>.\n\nProperty <code>date</code> date to be focused or displayed. It must be in the displayed date range beginning with <code>startDate</code> and <code>days</code> days So set this properties before setting the date."
        },
        {
          "name": "setDays",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.DatesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iDays",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>days</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDays days}.\n\nnumber of days displayed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>7</code>."
        },
        {
          "name": "setFirstDayOfWeek",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.calendar.DatesRow",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "iFirstDayOfWeek",
              "type": "int",
              "optional": false,
              "description": "The first day of the week"
            }
          ],
          "description": "Setter for property <code>firstDayOfWeek</code>.\n\nProperty <code>firstDayOfWeek</code> is not supported in <code>sap.ui.unified.calendar.DatesRow</code> control."
        },
        {
          "name": "setShowDayNamesLine",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.DatesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowDayNamesLine",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showDayNamesLine</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowDayNamesLine showDayNamesLine}.\n\nIf set the day names are shown in a separate line. If not set the day names are shown inside the single days.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setStartDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.DatesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oStartDate",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>startDate</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStartDate startDate}.\n\nStart date of the row If in rendering phase the date property is not in the range startDate + days, it is set to the start date So after setting the start date the date should be set to be in the range of the start date\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.calendar.Header",
      "basename": "Header",
      "resource": "sap/ui/unified/calendar/Header.js",
      "module": "sap/ui/unified/calendar/Header",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.28.0",
      "extends": "sap.ui.core.Control",
      "description": "renders a calendar header\n\nThe calendar header consists of 3 buttons where the text can be set and a previous and a next button. In the normal calendar the first button contains the displayed day, the second button the displayed month and the third button the displayed year.\n\n<b>Note:</b> This is used inside the calendar. Not for standalone usage",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "textButton0",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.32.0",
            "description": "Text of the first button (normally day)",
            "methods": ["getTextButton0", "setTextButton0"]
          },
          {
            "name": "additionalTextButton0",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.34.0",
            "description": "Additional text of the first button (normally day)",
            "methods": ["getAdditionalTextButton0", "setAdditionalTextButton0"]
          },
          {
            "name": "ariaLabelButton0",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.32.0",
            "description": "aria-label of the first button (normally day)",
            "methods": ["getAriaLabelButton0", "setAriaLabelButton0"]
          },
          {
            "name": "visibleButton0",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.32.0",
            "description": "If set, the first button will be displayed\n\n<b>Note:</b> The default is set to false to be compatible to older versions",
            "methods": ["getVisibleButton0", "setVisibleButton0"]
          },
          {
            "name": "textButton1",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Text of the second button (normally month)",
            "methods": ["getTextButton1", "setTextButton1"]
          },
          {
            "name": "additionalTextButton1",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.34.0",
            "description": "Additional text of the second button (normally month)",
            "methods": ["getAdditionalTextButton1", "setAdditionalTextButton1"]
          },
          {
            "name": "ariaLabelButton1",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "aria-label of the second button (normally month)",
            "methods": ["getAriaLabelButton1", "setAriaLabelButton1"]
          },
          {
            "name": "visibleButton1",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.32.0",
            "description": "If set, the second button will be displayed",
            "methods": ["getVisibleButton1", "setVisibleButton1"]
          },
          {
            "name": "textButton2",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Text of the third button (normally year)",
            "methods": ["getTextButton2", "setTextButton2"]
          },
          {
            "name": "additionalTextButton2",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.34.0",
            "description": "Additional text of the third button (normally year)",
            "methods": ["getAdditionalTextButton2", "setAdditionalTextButton2"]
          },
          {
            "name": "ariaLabelButton2",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "aria-label of the third button (normally year)",
            "methods": ["getAriaLabelButton2", "setAriaLabelButton2"]
          },
          {
            "name": "visibleButton2",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.32.0",
            "description": "If set, the third button will be displayed",
            "methods": ["getVisibleButton2", "setVisibleButton2"]
          },
          {
            "name": "enabledPrevious",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "Enables the previous button",
            "methods": ["getEnabledPrevious", "setEnabledPrevious"]
          },
          {
            "name": "enabledNext",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "Enables the Next button",
            "methods": ["getEnabledNext", "setEnabledNext"]
          }
        ],
        "events": [
          {
            "name": "pressPrevious",
            "visibility": "public",
            "description": "Previous button pressed",
            "methods": [
              "attachPressPrevious",
              "detachPressPrevious",
              "firePressPrevious"
            ]
          },
          {
            "name": "pressNext",
            "visibility": "public",
            "description": "Next button pressed",
            "methods": ["attachPressNext", "detachPressNext", "firePressNext"]
          },
          {
            "name": "pressButton0",
            "visibility": "public",
            "since": "1.32.0",
            "description": "First button pressed (normally day)",
            "methods": [
              "attachPressButton0",
              "detachPressButton0",
              "firePressButton0"
            ]
          },
          {
            "name": "pressButton1",
            "visibility": "public",
            "description": "Second button pressed (normally month)",
            "methods": [
              "attachPressButton1",
              "detachPressButton1",
              "firePressButton1"
            ]
          },
          {
            "name": "pressButton2",
            "visibility": "public",
            "description": "Third button pressed (normally year)",
            "methods": [
              "attachPressButton2",
              "detachPressButton2",
              "firePressButton2"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new Header.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "pressButton0",
          "visibility": "public",
          "since": "1.32.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "First button pressed (normally day)"
        },
        {
          "name": "pressButton1",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Second button pressed (normally month)"
        },
        {
          "name": "pressButton2",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Third button pressed (normally year)"
        },
        {
          "name": "pressNext",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Next button pressed"
        },
        {
          "name": "pressPrevious",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Previous button pressed"
        }
      ],
      "methods": [
        {
          "name": "attachPressButton0",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Header</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:pressButton0 pressButton0} event of this <code>sap.ui.unified.calendar.Header</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.calendar.Header</code> itself.\n\nFirst button pressed (normally day)"
        },
        {
          "name": "attachPressButton1",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Header</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:pressButton1 pressButton1} event of this <code>sap.ui.unified.calendar.Header</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.calendar.Header</code> itself.\n\nSecond button pressed (normally month)"
        },
        {
          "name": "attachPressButton2",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Header</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:pressButton2 pressButton2} event of this <code>sap.ui.unified.calendar.Header</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.calendar.Header</code> itself.\n\nThird button pressed (normally year)"
        },
        {
          "name": "attachPressNext",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Header</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:pressNext pressNext} event of this <code>sap.ui.unified.calendar.Header</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.calendar.Header</code> itself.\n\nNext button pressed"
        },
        {
          "name": "attachPressPrevious",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Header</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:pressPrevious pressPrevious} event of this <code>sap.ui.unified.calendar.Header</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.calendar.Header</code> itself.\n\nPrevious button pressed"
        },
        {
          "name": "detachPressButton0",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:pressButton0 pressButton0} event of this <code>sap.ui.unified.calendar.Header</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachPressButton1",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:pressButton1 pressButton1} event of this <code>sap.ui.unified.calendar.Header</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachPressButton2",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:pressButton2 pressButton2} event of this <code>sap.ui.unified.calendar.Header</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachPressNext",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:pressNext pressNext} event of this <code>sap.ui.unified.calendar.Header</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachPressPrevious",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:pressPrevious pressPrevious} event of this <code>sap.ui.unified.calendar.Header</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.calendar.Header with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePressButton0",
          "visibility": "protected",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:pressButton0 pressButton0} to attached listeners."
        },
        {
          "name": "firePressButton1",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:pressButton1 pressButton1} to attached listeners."
        },
        {
          "name": "firePressButton2",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:pressButton2 pressButton2} to attached listeners."
        },
        {
          "name": "firePressNext",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:pressNext pressNext} to attached listeners."
        },
        {
          "name": "firePressPrevious",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:pressPrevious pressPrevious} to attached listeners."
        },
        {
          "name": "getAdditionalTextButton0",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>additionalTextButton0</code>"
          },
          "description": "Gets current value of property {@link #getAdditionalTextButton0 additionalTextButton0}.\n\nAdditional text of the first button (normally day)"
        },
        {
          "name": "getAdditionalTextButton1",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>additionalTextButton1</code>"
          },
          "description": "Gets current value of property {@link #getAdditionalTextButton1 additionalTextButton1}.\n\nAdditional text of the second button (normally month)"
        },
        {
          "name": "getAdditionalTextButton2",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>additionalTextButton2</code>"
          },
          "description": "Gets current value of property {@link #getAdditionalTextButton2 additionalTextButton2}.\n\nAdditional text of the third button (normally year)"
        },
        {
          "name": "getAriaLabelButton0",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>ariaLabelButton0</code>"
          },
          "description": "Gets current value of property {@link #getAriaLabelButton0 ariaLabelButton0}.\n\naria-label of the first button (normally day)"
        },
        {
          "name": "getAriaLabelButton1",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>ariaLabelButton1</code>"
          },
          "description": "Gets current value of property {@link #getAriaLabelButton1 ariaLabelButton1}.\n\naria-label of the second button (normally month)"
        },
        {
          "name": "getAriaLabelButton2",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>ariaLabelButton2</code>"
          },
          "description": "Gets current value of property {@link #getAriaLabelButton2 ariaLabelButton2}.\n\naria-label of the third button (normally year)"
        },
        {
          "name": "getEnabledNext",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enabledNext</code>"
          },
          "description": "Gets current value of property {@link #getEnabledNext enabledNext}.\n\nEnables the Next button\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getEnabledPrevious",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enabledPrevious</code>"
          },
          "description": "Gets current value of property {@link #getEnabledPrevious enabledPrevious}.\n\nEnables the previous button\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.calendar.Header."
        },
        {
          "name": "getTextButton0",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>textButton0</code>"
          },
          "description": "Gets current value of property {@link #getTextButton0 textButton0}.\n\nText of the first button (normally day)"
        },
        {
          "name": "getTextButton1",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>textButton1</code>"
          },
          "description": "Gets current value of property {@link #getTextButton1 textButton1}.\n\nText of the second button (normally month)"
        },
        {
          "name": "getTextButton2",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>textButton2</code>"
          },
          "description": "Gets current value of property {@link #getTextButton2 textButton2}.\n\nText of the third button (normally year)"
        },
        {
          "name": "getVisibleButton0",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>visibleButton0</code>"
          },
          "description": "Gets current value of property {@link #getVisibleButton0 visibleButton0}.\n\nIf set, the first button will be displayed\n\n<b>Note:</b> The default is set to false to be compatible to older versions\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getVisibleButton1",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>visibleButton1</code>"
          },
          "description": "Gets current value of property {@link #getVisibleButton1 visibleButton1}.\n\nIf set, the second button will be displayed\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getVisibleButton2",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>visibleButton2</code>"
          },
          "description": "Gets current value of property {@link #getVisibleButton2 visibleButton2}.\n\nIf set, the third button will be displayed\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setAdditionalTextButton0",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAdditionalTextButton0",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>additionalTextButton0</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAdditionalTextButton0 additionalTextButton0}.\n\nAdditional text of the first button (normally day)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setAdditionalTextButton1",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAdditionalTextButton1",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>additionalTextButton1</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAdditionalTextButton1 additionalTextButton1}.\n\nAdditional text of the second button (normally month)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setAdditionalTextButton2",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAdditionalTextButton2",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>additionalTextButton2</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAdditionalTextButton2 additionalTextButton2}.\n\nAdditional text of the third button (normally year)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setAriaLabelButton0",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAriaLabelButton0",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>ariaLabelButton0</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAriaLabelButton0 ariaLabelButton0}.\n\naria-label of the first button (normally day)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setAriaLabelButton1",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAriaLabelButton1",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>ariaLabelButton1</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAriaLabelButton1 ariaLabelButton1}.\n\naria-label of the second button (normally month)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setAriaLabelButton2",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAriaLabelButton2",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>ariaLabelButton2</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAriaLabelButton2 ariaLabelButton2}.\n\naria-label of the third button (normally year)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setEnabledNext",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnabledNext",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enabledNext</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnabledNext enabledNext}.\n\nEnables the Next button\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setEnabledPrevious",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnabledPrevious",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enabledPrevious</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnabledPrevious enabledPrevious}.\n\nEnables the previous button\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setTextButton0",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTextButton0",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>textButton0</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTextButton0 textButton0}.\n\nText of the first button (normally day)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTextButton1",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTextButton1",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>textButton1</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTextButton1 textButton1}.\n\nText of the second button (normally month)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTextButton2",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTextButton2",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>textButton2</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTextButton2 textButton2}.\n\nText of the third button (normally year)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setVisibleButton0",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bVisibleButton0",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>visibleButton0</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getVisibleButton0 visibleButton0}.\n\nIf set, the first button will be displayed\n\n<b>Note:</b> The default is set to false to be compatible to older versions\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setVisibleButton1",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bVisibleButton1",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>visibleButton1</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getVisibleButton1 visibleButton1}.\n\nIf set, the second button will be displayed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setVisibleButton2",
          "visibility": "public",
          "since": "1.32.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Header",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bVisibleButton2",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>visibleButton2</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getVisibleButton2 visibleButton2}.\n\nIf set, the third button will be displayed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.calendar.Month",
      "basename": "Month",
      "resource": "sap/ui/unified/calendar/Month.js",
      "module": "sap/ui/unified/calendar/Month",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.28.0",
      "extends": "sap.ui.core.Control",
      "description": "renders a month with ItemNavigation This is used inside the calendar. Not for stand alone usage If used inside the calendar the properties and aggregation are directly taken from the parent (To not duplicate and sync DateRanges and so on...)",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "date",
            "type": "object",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "A date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set).",
            "methods": ["getDate", "setDate"]
          },
          {
            "name": "intervalSelection",
            "type": "boolean",
            "defaultValue": false,
            "group": "Behavior",
            "visibility": "public",
            "description": "If set, interval selection is allowed",
            "methods": ["getIntervalSelection", "setIntervalSelection"]
          },
          {
            "name": "singleSelection",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "If set, only a single date or interval, if intervalSelection is enabled, can be selected",
            "methods": ["getSingleSelection", "setSingleSelection"]
          },
          {
            "name": "showHeader",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "If set, a header with the month name is shown",
            "methods": ["getShowHeader", "setShowHeader"]
          },
          {
            "name": "firstDayOfWeek",
            "type": "int",
            "defaultValue": -1,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.28.9",
            "description": "If set, the first day of the displayed week is this day. Valid values are 0 to 6. If not a valid value is set, the default of the used locale is used.",
            "methods": ["getFirstDayOfWeek", "setFirstDayOfWeek"]
          },
          {
            "name": "nonWorkingDays",
            "type": "int[]",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.28.9",
            "description": "If set, the provided weekdays are displayed as non-working days. Valid values inside the array are 0 to 6. If not set, the weekend defined in the locale settings is displayed as non-working days.",
            "methods": ["getNonWorkingDays", "setNonWorkingDays"]
          },
          {
            "name": "primaryCalendarType",
            "type": "sap.ui.core.CalendarType",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.34.0",
            "description": "If set, the calendar type is used for display. If not set, the calendar type of the global configuration is used.",
            "methods": ["getPrimaryCalendarType", "setPrimaryCalendarType"]
          },
          {
            "name": "secondaryCalendarType",
            "type": "sap.ui.core.CalendarType",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.34.0",
            "description": "If set, the days are also displayed in this calendar type If not set, the dates are only displayed in the primary calendar type",
            "methods": ["getSecondaryCalendarType", "setSecondaryCalendarType"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Dimension",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Width of Month",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "showWeekNumbers",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.48",
            "description": "Determines whether the week numbers in the months are displayed.\n\n<b>Note:</b> For Islamic calendars, the week numbers are not displayed regardless of what is set to this property.",
            "methods": ["getShowWeekNumbers", "setShowWeekNumbers"]
          }
        ],
        "aggregations": [
          {
            "name": "selectedDates",
            "singularName": "selectedDate",
            "type": "sap.ui.unified.DateRange",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Date Ranges for selected dates of the DatePicker",
            "methods": [
              "getSelectedDates",
              "destroySelectedDates",
              "insertSelectedDate",
              "addSelectedDate",
              "removeSelectedDate",
              "indexOfSelectedDate",
              "removeAllSelectedDates"
            ]
          },
          {
            "name": "specialDates",
            "singularName": "specialDate",
            "type": "sap.ui.unified.DateTypeRange",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "<code>DateRange</code> with type to visualize special days in the Calendar.\n\n<b>Note:</b> If one day is assigned to more than one DateTypeRange, only the first one will be used. The only exception is when one of the types is <code>NonWorking</code>, then you can have both <code>NonWorking</code> and the other type. For example, you can have <code>NonWorking</code> + <code>Type01</code> but you can't have <code>Type01</code> + <code>Type02</code>.",
            "methods": [
              "getSpecialDates",
              "destroySpecialDates",
              "insertSpecialDate",
              "addSpecialDate",
              "removeSpecialDate",
              "indexOfSpecialDate",
              "removeAllSpecialDates"
            ]
          },
          {
            "name": "disabledDates",
            "singularName": "disabledDate",
            "type": "sap.ui.unified.DateRange",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Date Ranges for disabled dates",
            "methods": [
              "getDisabledDates",
              "destroyDisabledDates",
              "insertDisabledDate",
              "addDisabledDate",
              "removeDisabledDate",
              "indexOfDisabledDate",
              "removeAllDisabledDates"
            ]
          }
        ],
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          },
          {
            "name": "legend",
            "singularName": "legend",
            "type": "sap.ui.unified.CalendarLegend",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.38.5",
            "description": "Association to the <code>CalendarLegend</code> explaining the colors of the <code>specialDates</code>.\n\n<b>Note</b> The legend does not have to be rendered but must exist, and all required types must be assigned.",
            "methods": ["getLegend", "setLegend"]
          }
        ],
        "events": [
          {
            "name": "select",
            "visibility": "public",
            "description": "Date selection changed",
            "methods": ["attachSelect", "detachSelect", "fireSelect"]
          },
          {
            "name": "focus",
            "visibility": "public",
            "description": "Date focus changed",
            "parameters": {
              "date": {
                "name": "date",
                "type": "object",
                "description": "focused date"
              },
              "otherMonth": {
                "name": "otherMonth",
                "type": "boolean",
                "description": "focused date is in an other month that the displayed one"
              },
              "restoreOldDate": {
                "name": "restoreOldDate",
                "type": "boolean",
                "description": "focused date is set to the same as before (date in other month clicked)"
              }
            },
            "methods": ["attachFocus", "detachFocus", "fireFocus"]
          },
          {
            "name": "weekNumberSelect",
            "visibility": "public",
            "since": "1.60",
            "description": "Fired when a week number selection is changed. By default, choosing the week number will select the corresponding week. If the week has already been selected, choosing the week number will deselect it.\n\nThe default behavior can be prevented using the <code>preventDefault</code> method.\n\n<b>Note:</b> Works for Gregorian calendars only and when <code>intervalSelection</code> is set to <code>true</code>.",
            "parameters": {
              "weekNumber": {
                "name": "weekNumber",
                "type": "int",
                "description": "The selected week number."
              },
              "weekDays": {
                "name": "weekDays",
                "type": "sap.ui.unified.DateRange",
                "description": "The days of the corresponding week that are selected or deselected.\n\n<b>Note:</b> Will be set to <code>null</code> if that week is being deselected."
              }
            },
            "methods": [
              "attachWeekNumberSelect",
              "detachWeekNumberSelect",
              "fireWeekNumberSelect"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new calendar/Month.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "focus",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "date": {
                      "name": "date",
                      "type": "object",
                      "optional": false,
                      "description": "focused date"
                    },
                    "otherMonth": {
                      "name": "otherMonth",
                      "type": "boolean",
                      "optional": false,
                      "description": "focused date is in an other month that the displayed one"
                    },
                    "restoreOldDate": {
                      "name": "restoreOldDate",
                      "type": "boolean",
                      "optional": false,
                      "description": "focused date is set to the same as before (date in other month clicked)"
                    }
                  }
                }
              }
            }
          ],
          "description": "Date focus changed"
        },
        {
          "name": "select",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Date selection changed"
        },
        {
          "name": "weekNumberSelect",
          "visibility": "public",
          "since": "1.60",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "weekNumber": {
                      "name": "weekNumber",
                      "type": "int",
                      "optional": false,
                      "description": "The selected week number."
                    },
                    "weekDays": {
                      "name": "weekDays",
                      "type": "sap.ui.unified.DateRange",
                      "optional": false,
                      "description": "The days of the corresponding week that are selected or deselected.\n\n<b>Note:</b> Will be set to <code>null</code> if that week is being deselected."
                    }
                  }
                }
              }
            }
          ],
          "description": "Fired when a week number selection is changed. By default, choosing the week number will select the corresponding week. If the week has already been selected, choosing the week number will deselect it.\n\nThe default behavior can be prevented using the <code>preventDefault</code> method.\n\n<b>Note:</b> Works for Gregorian calendars only and when <code>intervalSelection</code> is set to <code>true</code>."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addDisabledDate",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDisabledDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The disabledDate to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some disabledDate to the aggregation {@link #getDisabledDates disabledDates}."
        },
        {
          "name": "addSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some selectedDate to the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "addSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSpecialDate",
              "type": "sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some specialDate to the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "attachFocus",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Month</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:focus focus} event of this <code>sap.ui.unified.calendar.Month</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.calendar.Month</code> itself.\n\nDate focus changed"
        },
        {
          "name": "attachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Month</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:select select} event of this <code>sap.ui.unified.calendar.Month</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.calendar.Month</code> itself.\n\nDate selection changed"
        },
        {
          "name": "attachWeekNumberSelect",
          "visibility": "public",
          "since": "1.60",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.Month</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:weekNumberSelect weekNumberSelect} event of this <code>sap.ui.unified.calendar.Month</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.calendar.Month</code> itself.\n\nFired when a week number selection is changed. By default, choosing the week number will select the corresponding week. If the week has already been selected, choosing the week number will deselect it.\n\nThe default behavior can be prevented using the <code>preventDefault</code> method.\n\n<b>Note:</b> Works for Gregorian calendars only and when <code>intervalSelection</code> is set to <code>true</code>."
        },
        {
          "name": "checkDateFocusable",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "boolean",
            "description": "flag if focusable"
          },
          "parameters": [
            {
              "name": "oDate",
              "type": "object",
              "optional": false,
              "description": "JavaScript date object for focused date."
            }
          ],
          "description": "checks if a date is focusable in the current rendered output. So if not rendered or in other month it is not focusable."
        },
        {
          "name": "destroyDisabledDates",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the disabledDates in the aggregation {@link #getDisabledDates disabledDates}."
        },
        {
          "name": "destroySelectedDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the selectedDates in the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "destroySpecialDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the specialDates in the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "detachFocus",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:focus focus} event of this <code>sap.ui.unified.calendar.Month</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:select select} event of this <code>sap.ui.unified.calendar.Month</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachWeekNumberSelect",
          "visibility": "public",
          "since": "1.60",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:weekNumberSelect weekNumberSelect} event of this <code>sap.ui.unified.calendar.Month</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "displayDate",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDate",
              "type": "object",
              "optional": false,
              "description": "JavaScript date object for focused date."
            }
          ],
          "description": "displays the month of a given date without setting the focus"
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.calendar.Month with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireFocus",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "date": {
                  "name": "date",
                  "type": "object",
                  "optional": true,
                  "description": "focused date"
                },
                "otherMonth": {
                  "name": "otherMonth",
                  "type": "boolean",
                  "optional": true,
                  "description": "focused date is in an other month that the displayed one"
                },
                "restoreOldDate": {
                  "name": "restoreOldDate",
                  "type": "boolean",
                  "optional": true,
                  "description": "focused date is set to the same as before (date in other month clicked)"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:focus focus} to attached listeners."
        },
        {
          "name": "fireSelect",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:select select} to attached listeners."
        },
        {
          "name": "fireWeekNumberSelect",
          "visibility": "protected",
          "since": "1.60",
          "returnValue": {
            "type": "boolean",
            "description": "Whether or not to prevent the default action"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "weekNumber": {
                  "name": "weekNumber",
                  "type": "int",
                  "optional": true,
                  "description": "The selected week number."
                },
                "weekDays": {
                  "name": "weekDays",
                  "type": "sap.ui.unified.DateRange",
                  "optional": true,
                  "description": "The days of the corresponding week that are selected or deselected.\n\n<b>Note:</b> Will be set to <code>null</code> if that week is being deselected."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:weekNumberSelect weekNumberSelect} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault</code>-method on the event object."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getDate",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>date</code>"
          },
          "description": "Gets current value of property {@link #getDate date}.\n\nA date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set)."
        },
        {
          "name": "getDisabledDates",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": { "type": "sap.ui.unified.DateRange[]" },
          "description": "Gets content of aggregation {@link #getDisabledDates disabledDates}.\n\nDate Ranges for disabled dates"
        },
        {
          "name": "getFirstDayOfWeek",
          "visibility": "public",
          "since": "1.28.9",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>firstDayOfWeek</code>"
          },
          "description": "Gets current value of property {@link #getFirstDayOfWeek firstDayOfWeek}.\n\nIf set, the first day of the displayed week is this day. Valid values are 0 to 6. If not a valid value is set, the default of the used locale is used.\n\nDefault value is <code>-1</code>."
        },
        {
          "name": "getIntervalSelection",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>intervalSelection</code>"
          },
          "description": "Gets current value of property {@link #getIntervalSelection intervalSelection}.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getLegend",
          "visibility": "public",
          "since": "1.38.5",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getLegend legend}, or <code>null</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.calendar.Month."
        },
        {
          "name": "getNonWorkingDays",
          "visibility": "public",
          "since": "1.28.9",
          "returnValue": {
            "type": "int[]",
            "description": "Value of property <code>nonWorkingDays</code>"
          },
          "description": "Gets current value of property {@link #getNonWorkingDays nonWorkingDays}.\n\nIf set, the provided weekdays are displayed as non-working days. Valid values inside the array are 0 to 6. If not set, the weekend defined in the locale settings is displayed as non-working days."
        },
        {
          "name": "getPrimaryCalendarType",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.core.CalendarType",
            "description": "Value of property <code>primaryCalendarType</code>"
          },
          "description": "Gets current value of property {@link #getPrimaryCalendarType primaryCalendarType}.\n\nIf set, the calendar type is used for display. If not set, the calendar type of the global configuration is used."
        },
        {
          "name": "getSecondaryCalendarType",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.core.CalendarType",
            "description": "Value of property <code>secondaryCalendarType</code>"
          },
          "description": "Gets current value of property {@link #getSecondaryCalendarType secondaryCalendarType}.\n\nIf set, the days are also displayed in this calendar type If not set, the dates are only displayed in the primary calendar type"
        },
        {
          "name": "getSelectedDates",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.DateRange[]" },
          "description": "Gets content of aggregation {@link #getSelectedDates selectedDates}.\n\nDate Ranges for selected dates of the DatePicker"
        },
        {
          "name": "getShowHeader",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showHeader</code>"
          },
          "description": "Gets current value of property {@link #getShowHeader showHeader}.\n\nIf set, a header with the month name is shown\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowWeekNumbers",
          "visibility": "public",
          "since": "1.48",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showWeekNumbers</code>"
          },
          "description": "Gets current value of property {@link #getShowWeekNumbers showWeekNumbers}.\n\nDetermines whether the week numbers in the months are displayed.\n\n<b>Note:</b> For Islamic calendars, the week numbers are not displayed regardless of what is set to this property.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSingleSelection",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>singleSelection</code>"
          },
          "description": "Gets current value of property {@link #getSingleSelection singleSelection}.\n\nIf set, only a single date or interval, if intervalSelection is enabled, can be selected\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSpecialDates",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.DateTypeRange[]" },
          "description": "Gets content of aggregation {@link #getSpecialDates specialDates}.\n\n<code>DateRange</code> with type to visualize special days in the Calendar.\n\n<b>Note:</b> If one day is assigned to more than one DateTypeRange, only the first one will be used. The only exception is when one of the types is <code>NonWorking</code>, then you can have both <code>NonWorking</code> and the other type. For example, you can have <code>NonWorking</code> + <code>Type01</code> but you can't have <code>Type01</code> + <code>Type02</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nWidth of Month"
        },
        {
          "name": "indexOfDisabledDate",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oDisabledDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The disabledDate whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.DateRange</code> in the aggregation {@link #getDisabledDates disabledDates}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.DateRange</code> in the aggregation {@link #getSelectedDates selectedDates}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSpecialDate",
              "type": "sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.DateTypeRange</code> in the aggregation {@link #getSpecialDates specialDates}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertDisabledDate",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDisabledDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The disabledDate to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the disabledDate should be inserted at; for a negative value of <code>iIndex</code>, the disabledDate is inserted at position 0; for a value greater than the current size of the aggregation, the disabledDate is inserted at the last position"
            }
          ],
          "description": "Inserts a disabledDate into the aggregation {@link #getDisabledDates disabledDates}."
        },
        {
          "name": "insertSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the selectedDate should be inserted at; for a negative value of <code>iIndex</code>, the selectedDate is inserted at position 0; for a value greater than the current size of the aggregation, the selectedDate is inserted at the last position"
            }
          ],
          "description": "Inserts a selectedDate into the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "insertSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSpecialDate",
              "type": "sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the specialDate should be inserted at; for a negative value of <code>iIndex</code>, the specialDate is inserted at position 0; for a value greater than the current size of the aggregation, the specialDate is inserted at the last position"
            }
          ],
          "description": "Inserts a specialDate into the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllDisabledDates",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.DateRange[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getDisabledDates disabledDates}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllSelectedDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateRange[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSelectedDates selectedDates}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllSpecialDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateTypeRange[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSpecialDates specialDates}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeDisabledDate",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.DateRange",
            "description": "The removed disabledDate or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vDisabledDate",
              "type": "int|string|sap.ui.unified.DateRange",
              "optional": false,
              "description": "The disabledDate to remove or its index or id"
            }
          ],
          "description": "Removes a disabledDate from the aggregation {@link #getDisabledDates disabledDates}."
        },
        {
          "name": "removeSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateRange",
            "description": "The removed selectedDate or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSelectedDate",
              "type": "int|string|sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to remove or its index or id"
            }
          ],
          "description": "Removes a selectedDate from the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "removeSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateTypeRange",
            "description": "The removed specialDate or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSpecialDate",
              "type": "int|string|sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate to remove or its index or id"
            }
          ],
          "description": "Removes a specialDate from the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "setDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDate",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>date</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDate date}.\n\nA date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setFirstDayOfWeek",
          "visibility": "public",
          "since": "1.28.9",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iFirstDayOfWeek",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>firstDayOfWeek</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFirstDayOfWeek firstDayOfWeek}.\n\nIf set, the first day of the displayed week is this day. Valid values are 0 to 6. If not a valid value is set, the default of the used locale is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>-1</code>."
        },
        {
          "name": "setIntervalSelection",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIntervalSelection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>intervalSelection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIntervalSelection intervalSelection}.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setLegend",
          "visibility": "public",
          "since": "1.38.5",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLegend",
              "type": "sap.ui.core.ID|sap.ui.unified.CalendarLegend",
              "optional": false,
              "description": "ID of an element which becomes the new target of this legend association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getLegend legend}."
        },
        {
          "name": "setNonWorkingDays",
          "visibility": "public",
          "since": "1.28.9",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sNonWorkingDays",
              "type": "int[]",
              "optional": false,
              "description": "New value for property <code>nonWorkingDays</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getNonWorkingDays nonWorkingDays}.\n\nIf set, the provided weekdays are displayed as non-working days. Valid values inside the array are 0 to 6. If not set, the weekend defined in the locale settings is displayed as non-working days.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setPrimaryCalendarType",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sPrimaryCalendarType",
              "type": "sap.ui.core.CalendarType",
              "optional": false,
              "description": "New value for property <code>primaryCalendarType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPrimaryCalendarType primaryCalendarType}.\n\nIf set, the calendar type is used for display. If not set, the calendar type of the global configuration is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSecondaryCalendarType",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSecondaryCalendarType",
              "type": "sap.ui.core.CalendarType",
              "optional": false,
              "description": "New value for property <code>secondaryCalendarType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSecondaryCalendarType secondaryCalendarType}.\n\nIf set, the days are also displayed in this calendar type If not set, the dates are only displayed in the primary calendar type\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setShowHeader",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowHeader",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showHeader</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowHeader showHeader}.\n\nIf set, a header with the month name is shown\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowWeekNumbers",
          "visibility": "public",
          "since": "1.48",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowWeekNumbers",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showWeekNumbers</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowWeekNumbers showWeekNumbers}.\n\nDetermines whether the week numbers in the months are displayed.\n\n<b>Note:</b> For Islamic calendars, the week numbers are not displayed regardless of what is set to this property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setSingleSelection",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSingleSelection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>singleSelection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSingleSelection singleSelection}.\n\nIf set, only a single date or interval, if intervalSelection is enabled, can be selected\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.Month",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nWidth of Month\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.calendar.MonthPicker",
      "basename": "MonthPicker",
      "resource": "sap/ui/unified/calendar/MonthPicker.js",
      "module": "sap/ui/unified/calendar/MonthPicker",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.28.0",
      "extends": "sap.ui.core.Control",
      "description": "renders a MonthPicker with ItemNavigation This is used inside the calendar. Not for stand alone usage",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "month",
            "type": "int",
            "defaultValue": 0,
            "group": "Data",
            "visibility": "public",
            "description": "The month is initial focused and selected The value must be between 0 and 11",
            "methods": ["getMonth", "setMonth"]
          },
          {
            "name": "months",
            "type": "int",
            "defaultValue": 12,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.30.0",
            "description": "number of displayed months The value must be between 1 and 12",
            "methods": ["getMonths", "setMonths"]
          },
          {
            "name": "intervalSelection",
            "type": "boolean",
            "defaultValue": false,
            "group": "Behavior",
            "visibility": "public",
            "since": "1.74",
            "description": "If set, interval selection is allowed",
            "methods": ["getIntervalSelection", "setIntervalSelection"]
          },
          {
            "name": "columns",
            "type": "int",
            "defaultValue": 3,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.30.0",
            "description": "number of months in each row The value must be between 0 and 12 (0 means just to have all months in one row, independent of the number)",
            "methods": ["getColumns", "setColumns"]
          },
          {
            "name": "primaryCalendarType",
            "type": "sap.ui.core.CalendarType",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.34.0",
            "description": "If set, the calendar type is used for display. If not set, the calendar type of the global configuration is used.",
            "methods": ["getPrimaryCalendarType", "setPrimaryCalendarType"]
          }
        ],
        "aggregations": [
          {
            "name": "selectedDates",
            "singularName": "selectedDate",
            "type": "sap.ui.unified.DateRange",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.74",
            "description": "Date Ranges for selected dates of the MonthPicker",
            "methods": [
              "getSelectedDates",
              "destroySelectedDates",
              "insertSelectedDate",
              "addSelectedDate",
              "removeSelectedDate",
              "indexOfSelectedDate",
              "removeAllSelectedDates"
            ]
          }
        ],
        "events": [
          {
            "name": "select",
            "visibility": "public",
            "description": "Month selection changed",
            "methods": ["attachSelect", "detachSelect", "fireSelect"]
          },
          {
            "name": "pageChange",
            "visibility": "public",
            "since": "1.38.0",
            "description": "If less than 12 months are displayed the <code>pageChange</code> event is fired if the displayed months are changed by user navigation.",
            "methods": [
              "attachPageChange",
              "detachPageChange",
              "firePageChange"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new MonthPicker.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "pageChange",
          "visibility": "public",
          "since": "1.38.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "If less than 12 months are displayed the <code>pageChange</code> event is fired if the displayed months are changed by user navigation."
        },
        {
          "name": "select",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Month selection changed"
        }
      ],
      "methods": [
        {
          "name": "addSelectedDate",
          "visibility": "public",
          "since": "1.74",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some selectedDate to the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "attachPageChange",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.MonthPicker</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:pageChange pageChange} event of this <code>sap.ui.unified.calendar.MonthPicker</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.calendar.MonthPicker</code> itself.\n\nIf less than 12 months are displayed the <code>pageChange</code> event is fired if the displayed months are changed by user navigation."
        },
        {
          "name": "attachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.MonthPicker</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:select select} event of this <code>sap.ui.unified.calendar.MonthPicker</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.calendar.MonthPicker</code> itself.\n\nMonth selection changed"
        },
        {
          "name": "destroySelectedDates",
          "visibility": "public",
          "since": "1.74",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the selectedDates in the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "detachPageChange",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:pageChange pageChange} event of this <code>sap.ui.unified.calendar.MonthPicker</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:select select} event of this <code>sap.ui.unified.calendar.MonthPicker</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.calendar.MonthPicker with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePageChange",
          "visibility": "protected",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:pageChange pageChange} to attached listeners."
        },
        {
          "name": "fireSelect",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:select select} to attached listeners."
        },
        {
          "name": "getColumns",
          "visibility": "public",
          "since": "1.30.0",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>columns</code>"
          },
          "description": "Gets current value of property {@link #getColumns columns}.\n\nnumber of months in each row The value must be between 0 and 12 (0 means just to have all months in one row, independent of the number)\n\nDefault value is <code>3</code>."
        },
        {
          "name": "getIntervalSelection",
          "visibility": "public",
          "since": "1.74",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>intervalSelection</code>"
          },
          "description": "Gets current value of property {@link #getIntervalSelection intervalSelection}.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.calendar.MonthPicker."
        },
        {
          "name": "getMonth",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>month</code>"
          },
          "description": "Gets current value of property {@link #getMonth month}.\n\nThe month is initial focused and selected The value must be between 0 and 11\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getMonths",
          "visibility": "public",
          "since": "1.30.0",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>months</code>"
          },
          "description": "Gets current value of property {@link #getMonths months}.\n\nnumber of displayed months The value must be between 1 and 12\n\nDefault value is <code>12</code>."
        },
        {
          "name": "getPrimaryCalendarType",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.core.CalendarType",
            "description": "Value of property <code>primaryCalendarType</code>"
          },
          "description": "Gets current value of property {@link #getPrimaryCalendarType primaryCalendarType}.\n\nIf set, the calendar type is used for display. If not set, the calendar type of the global configuration is used."
        },
        {
          "name": "getSelectedDates",
          "visibility": "public",
          "since": "1.74",
          "returnValue": { "type": "sap.ui.unified.DateRange[]" },
          "description": "Gets content of aggregation {@link #getSelectedDates selectedDates}.\n\nDate Ranges for selected dates of the MonthPicker"
        },
        {
          "name": "indexOfSelectedDate",
          "visibility": "public",
          "since": "1.74",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.DateRange</code> in the aggregation {@link #getSelectedDates selectedDates}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertSelectedDate",
          "visibility": "public",
          "since": "1.74",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the selectedDate should be inserted at; for a negative value of <code>iIndex</code>, the selectedDate is inserted at position 0; for a value greater than the current size of the aggregation, the selectedDate is inserted at the last position"
            }
          ],
          "description": "Inserts a selectedDate into the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "nextPage",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthPicker",
            "description": "<code>this</code> to allow method chaining"
          },
          "description": "displays the next page"
        },
        {
          "name": "previousPage",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthPicker",
            "description": "<code>this</code> to allow method chaining"
          },
          "description": "displays the previous page"
        },
        {
          "name": "removeAllSelectedDates",
          "visibility": "public",
          "since": "1.74",
          "returnValue": {
            "type": "sap.ui.unified.DateRange[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSelectedDates selectedDates}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeSelectedDate",
          "visibility": "public",
          "since": "1.74",
          "returnValue": {
            "type": "sap.ui.unified.DateRange",
            "description": "The removed selectedDate or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSelectedDate",
              "type": "int|string|sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to remove or its index or id"
            }
          ],
          "description": "Removes a selectedDate from the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "setColumns",
          "visibility": "public",
          "since": "1.30.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iColumns",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>columns</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColumns columns}.\n\nnumber of months in each row The value must be between 0 and 12 (0 means just to have all months in one row, independent of the number)\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>3</code>."
        },
        {
          "name": "setIntervalSelection",
          "visibility": "public",
          "since": "1.74",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIntervalSelection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>intervalSelection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIntervalSelection intervalSelection}.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setMinMax",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthPicker",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "iMin",
              "type": "int",
              "optional": true,
              "description": "minimum month as integer (starting with 0)"
            },
            {
              "name": "iMax",
              "type": "int",
              "optional": true,
              "description": "maximum month as integer (starting with 0)"
            }
          ],
          "description": "sets a minimum and maximum month"
        },
        {
          "name": "setMonth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iMonth",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>month</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMonth month}.\n\nThe month is initial focused and selected The value must be between 0 and 11\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setMonths",
          "visibility": "public",
          "since": "1.30.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iMonths",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>months</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMonths months}.\n\nnumber of displayed months The value must be between 1 and 12\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>12</code>."
        },
        {
          "name": "setPrimaryCalendarType",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sPrimaryCalendarType",
              "type": "sap.ui.core.CalendarType",
              "optional": false,
              "description": "New value for property <code>primaryCalendarType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPrimaryCalendarType primaryCalendarType}.\n\nIf set, the calendar type is used for display. If not set, the calendar type of the global configuration is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.calendar.MonthsRow",
      "basename": "MonthsRow",
      "resource": "sap/ui/unified/calendar/MonthsRow.js",
      "module": "sap/ui/unified/calendar/MonthsRow",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.32.0",
      "extends": "sap.ui.core.Control",
      "description": "Renders a row of months using ItemNavigation. There is no paging or navigation outside the rendered area implemented. This is done inside the CalendarMonthInterval. If used inside the CalendarMonthInterval the properties and aggregation are directly taken from the parent (to not duplicate and synchronize DateRanges and so on...).\n\nThe MontsRow works with JavaScript Date objects, but only the month and the year are used to display and interact. As representation for a month, the 1st of the month will always be returned in the API.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "date",
            "type": "object",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "A date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set). If the date property is not in the range <code>startDate</code> + <code>months</code> in the rendering phase, it is set to the <code>startDate</code>. So after setting the <code>startDate</code> the date should be set to be in the visible range.",
            "methods": ["getDate", "setDate"]
          },
          {
            "name": "startDate",
            "type": "object",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "Start date, as JavaScript Date object, of the row. The month of this date is the first month of the displayed row.",
            "methods": ["getStartDate", "setStartDate"]
          },
          {
            "name": "months",
            "type": "int",
            "defaultValue": 12,
            "group": "Appearance",
            "visibility": "public",
            "description": "Number of months displayed",
            "methods": ["getMonths", "setMonths"]
          },
          {
            "name": "intervalSelection",
            "type": "boolean",
            "defaultValue": false,
            "group": "Behavior",
            "visibility": "public",
            "description": "If set, interval selection is allowed",
            "methods": ["getIntervalSelection", "setIntervalSelection"]
          },
          {
            "name": "singleSelection",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "If set, only a single month or interval, if intervalSelection is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.",
            "methods": ["getSingleSelection", "setSingleSelection"]
          },
          {
            "name": "showHeader",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "If set, a header with the years is shown to visualize what month belongs to what year.",
            "methods": ["getShowHeader", "setShowHeader"]
          }
        ],
        "aggregations": [
          {
            "name": "selectedDates",
            "singularName": "selectedDate",
            "type": "sap.ui.unified.DateRange",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Date ranges for selected dates. If <code>singleSelection</code> is set, only the first entry is used.\n\n<b>Note:</b> Even if only one day is selected, the whole corresponding month is selected.",
            "methods": [
              "getSelectedDates",
              "destroySelectedDates",
              "insertSelectedDate",
              "addSelectedDate",
              "removeSelectedDate",
              "indexOfSelectedDate",
              "removeAllSelectedDates"
            ]
          },
          {
            "name": "specialDates",
            "singularName": "specialDate",
            "type": "sap.ui.unified.DateTypeRange",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Date ranges with type to visualize special months in the row. If one day is assigned to more than one type, only the first one will be used.\n\n<b>Note:</b> Even if only one day is set as a special day, the whole corresponding month is displayed in this way.",
            "methods": [
              "getSpecialDates",
              "destroySpecialDates",
              "insertSpecialDate",
              "addSpecialDate",
              "removeSpecialDate",
              "indexOfSpecialDate",
              "removeAllSpecialDates"
            ]
          }
        ],
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          },
          {
            "name": "legend",
            "singularName": "legend",
            "type": "sap.ui.unified.CalendarLegend",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.38.5",
            "description": "Association to the <code>CalendarLegend</code> explaining the colors of the <code>specialDates</code>.\n\n<b>Note</b> The legend does not have to be rendered but must exist, and all required types must be assigned.",
            "methods": ["getLegend", "setLegend"]
          }
        ],
        "events": [
          {
            "name": "select",
            "visibility": "public",
            "description": "Month selection changed",
            "methods": ["attachSelect", "detachSelect", "fireSelect"]
          },
          {
            "name": "focus",
            "visibility": "public",
            "description": "Month focus changed",
            "parameters": {
              "date": {
                "name": "date",
                "type": "object",
                "description": "First date, as JavaScript Date object, of the month that is focused."
              },
              "notVisible": {
                "name": "notVisible",
                "type": "boolean",
                "description": "If set, the focused date is not rendered yet. (This happens by navigating out of the visible area.)"
              }
            },
            "methods": ["attachFocus", "detachFocus", "fireFocus"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new <code>MonthsRow</code>. It shows a calendar with month granularity\n\n<b>Note:</b> This is used inside the CalendarMonthInterval, not for standalone usage.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "focus",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "date": {
                      "name": "date",
                      "type": "object",
                      "optional": false,
                      "description": "First date, as JavaScript Date object, of the month that is focused."
                    },
                    "notVisible": {
                      "name": "notVisible",
                      "type": "boolean",
                      "optional": false,
                      "description": "If set, the focused date is not rendered yet. (This happens by navigating out of the visible area.)"
                    }
                  }
                }
              }
            }
          ],
          "description": "Month focus changed"
        },
        {
          "name": "select",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Month selection changed"
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some selectedDate to the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "addSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSpecialDate",
              "type": "sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some specialDate to the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "attachFocus",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.MonthsRow</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:focus focus} event of this <code>sap.ui.unified.calendar.MonthsRow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.calendar.MonthsRow</code> itself.\n\nMonth focus changed"
        },
        {
          "name": "attachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.MonthsRow</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:select select} event of this <code>sap.ui.unified.calendar.MonthsRow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.calendar.MonthsRow</code> itself.\n\nMonth selection changed"
        },
        {
          "name": "checkDateFocusable",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "boolean",
            "description": "flag if focusable"
          },
          "parameters": [
            {
              "name": "oDateTime",
              "type": "object",
              "optional": false,
              "description": "JavaScript Date object for focused date."
            }
          ],
          "description": "Checks if a date is focusable in the current rendered output. This means that if it is not rendered, it is not focusable."
        },
        {
          "name": "destroySelectedDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the selectedDates in the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "destroySpecialDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the specialDates in the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "detachFocus",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:focus focus} event of this <code>sap.ui.unified.calendar.MonthsRow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:select select} event of this <code>sap.ui.unified.calendar.MonthsRow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "displayDate",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDate",
              "type": "object",
              "optional": false,
              "description": "JavaScript Date object for focused date."
            }
          ],
          "description": "Displays the month of a given date without setting the focus"
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.calendar.MonthsRow with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireFocus",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "date": {
                  "name": "date",
                  "type": "object",
                  "optional": true,
                  "description": "First date, as JavaScript Date object, of the month that is focused."
                },
                "notVisible": {
                  "name": "notVisible",
                  "type": "boolean",
                  "optional": true,
                  "description": "If set, the focused date is not rendered yet. (This happens by navigating out of the visible area.)"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:focus focus} to attached listeners."
        },
        {
          "name": "fireSelect",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:select select} to attached listeners."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getDate",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>date</code>"
          },
          "description": "Gets current value of property {@link #getDate date}.\n\nA date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set). If the date property is not in the range <code>startDate</code> + <code>months</code> in the rendering phase, it is set to the <code>startDate</code>. So after setting the <code>startDate</code> the date should be set to be in the visible range."
        },
        {
          "name": "getIntervalSelection",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>intervalSelection</code>"
          },
          "description": "Gets current value of property {@link #getIntervalSelection intervalSelection}.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getLegend",
          "visibility": "public",
          "since": "1.38.5",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getLegend legend}, or <code>null</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.calendar.MonthsRow."
        },
        {
          "name": "getMonths",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>months</code>"
          },
          "description": "Gets current value of property {@link #getMonths months}.\n\nNumber of months displayed\n\nDefault value is <code>12</code>."
        },
        {
          "name": "getSelectedDates",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.DateRange[]" },
          "description": "Gets content of aggregation {@link #getSelectedDates selectedDates}.\n\nDate ranges for selected dates. If <code>singleSelection</code> is set, only the first entry is used.\n\n<b>Note:</b> Even if only one day is selected, the whole corresponding month is selected."
        },
        {
          "name": "getShowHeader",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showHeader</code>"
          },
          "description": "Gets current value of property {@link #getShowHeader showHeader}.\n\nIf set, a header with the years is shown to visualize what month belongs to what year.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getSingleSelection",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>singleSelection</code>"
          },
          "description": "Gets current value of property {@link #getSingleSelection singleSelection}.\n\nIf set, only a single month or interval, if intervalSelection is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSpecialDates",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.DateTypeRange[]" },
          "description": "Gets content of aggregation {@link #getSpecialDates specialDates}.\n\nDate ranges with type to visualize special months in the row. If one day is assigned to more than one type, only the first one will be used.\n\n<b>Note:</b> Even if only one day is set as a special day, the whole corresponding month is displayed in this way."
        },
        {
          "name": "getStartDate",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>startDate</code>"
          },
          "description": "Gets current value of property {@link #getStartDate startDate}.\n\nStart date, as JavaScript Date object, of the row. The month of this date is the first month of the displayed row."
        },
        {
          "name": "indexOfSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.DateRange</code> in the aggregation {@link #getSelectedDates selectedDates}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSpecialDate",
              "type": "sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.DateTypeRange</code> in the aggregation {@link #getSpecialDates specialDates}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the selectedDate should be inserted at; for a negative value of <code>iIndex</code>, the selectedDate is inserted at position 0; for a value greater than the current size of the aggregation, the selectedDate is inserted at the last position"
            }
          ],
          "description": "Inserts a selectedDate into the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "insertSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSpecialDate",
              "type": "sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the specialDate should be inserted at; for a negative value of <code>iIndex</code>, the specialDate is inserted at position 0; for a value greater than the current size of the aggregation, the specialDate is inserted at the last position"
            }
          ],
          "description": "Inserts a specialDate into the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllSelectedDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateRange[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSelectedDates selectedDates}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllSpecialDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateTypeRange[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSpecialDates specialDates}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateRange",
            "description": "The removed selectedDate or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSelectedDate",
              "type": "int|string|sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to remove or its index or id"
            }
          ],
          "description": "Removes a selectedDate from the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "removeSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateTypeRange",
            "description": "The removed specialDate or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSpecialDate",
              "type": "int|string|sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate to remove or its index or id"
            }
          ],
          "description": "Removes a specialDate from the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "setDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDate",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>date</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDate date}.\n\nA date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set). If the date property is not in the range <code>startDate</code> + <code>months</code> in the rendering phase, it is set to the <code>startDate</code>. So after setting the <code>startDate</code> the date should be set to be in the visible range.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIntervalSelection",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIntervalSelection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>intervalSelection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIntervalSelection intervalSelection}.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setLegend",
          "visibility": "public",
          "since": "1.38.5",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLegend",
              "type": "sap.ui.core.ID|sap.ui.unified.CalendarLegend",
              "optional": false,
              "description": "ID of an element which becomes the new target of this legend association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getLegend legend}."
        },
        {
          "name": "setMonths",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iMonths",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>months</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMonths months}.\n\nNumber of months displayed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>12</code>."
        },
        {
          "name": "setShowHeader",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowHeader",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showHeader</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowHeader showHeader}.\n\nIf set, a header with the years is shown to visualize what month belongs to what year.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setSingleSelection",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSingleSelection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>singleSelection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSingleSelection singleSelection}.\n\nIf set, only a single month or interval, if intervalSelection is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setStartDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.MonthsRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oStartDate",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>startDate</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStartDate startDate}.\n\nStart date, as JavaScript Date object, of the row. The month of this date is the first month of the displayed row.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.calendar.TimesRow",
      "basename": "TimesRow",
      "resource": "sap/ui/unified/calendar/TimesRow.js",
      "module": "sap/ui/unified/calendar/TimesRow",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.32.0",
      "extends": "sap.ui.core.Control",
      "description": "Renders a row of time items using ItemNavigation. There is no paging or navigation outside the rendered area implemented. This is done inside the CalendarTimeInterval. If used inside the CalendarTimeInterval the properties and aggregation are directly taken from the parent (to not duplicate and synchronize DateRanges and so on...).\n\nThe TimesRow works with JavaScript Date objects.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "date",
            "type": "object",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "A date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set). If the date property is not in the range <code>startDate</code> + <code>items</code> in the rendering phase, it is set to the <code>startDate</code>. So after setting the <code>startDate</code> the date should be set to be in the visible range.",
            "methods": ["getDate", "setDate"]
          },
          {
            "name": "startDate",
            "type": "object",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "Start date, as JavaScript Date object, of the row.",
            "methods": ["getStartDate", "setStartDate"]
          },
          {
            "name": "items",
            "type": "int",
            "defaultValue": 12,
            "group": "Appearance",
            "visibility": "public",
            "description": "Number of time items displayed",
            "methods": ["getItems", "setItems"]
          },
          {
            "name": "intervalMinutes",
            "type": "int",
            "defaultValue": 60,
            "group": "Appearance",
            "visibility": "public",
            "description": "Size of on time interval in minutes, default is 60 minutes.\n\n<b>Note:</b> the start of the interval calculation is always <code>startDat</code> at 00:00.\n\nAn interval longer than 720 minutes is not allowed. Please use the <code>DatesRow</code> instead.\n\nA day must be divisible by this interval size. One interval must not include more than one day.",
            "methods": ["getIntervalMinutes", "setIntervalMinutes"]
          },
          {
            "name": "intervalSelection",
            "type": "boolean",
            "defaultValue": false,
            "group": "Behavior",
            "visibility": "public",
            "description": "If set, interval selection is allowed",
            "methods": ["getIntervalSelection", "setIntervalSelection"]
          },
          {
            "name": "singleSelection",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "If set, only a single month or interval, if intervalSelection is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.",
            "methods": ["getSingleSelection", "setSingleSelection"]
          },
          {
            "name": "showHeader",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "If set, a header with the years is shown to visualize what month belongs to what year.",
            "methods": ["getShowHeader", "setShowHeader"]
          }
        ],
        "aggregations": [
          {
            "name": "selectedDates",
            "singularName": "selectedDate",
            "type": "sap.ui.unified.DateRange",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Date ranges for selected dates. If <code>singleSelection</code> is set, only the first entry is used.",
            "methods": [
              "getSelectedDates",
              "destroySelectedDates",
              "insertSelectedDate",
              "addSelectedDate",
              "removeSelectedDate",
              "indexOfSelectedDate",
              "removeAllSelectedDates"
            ]
          },
          {
            "name": "specialDates",
            "singularName": "specialDate",
            "type": "sap.ui.unified.DateTypeRange",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Date ranges with type to visualize special item in the row. If one day is assigned to more than one type, only the first one will be used.",
            "methods": [
              "getSpecialDates",
              "destroySpecialDates",
              "insertSpecialDate",
              "addSpecialDate",
              "removeSpecialDate",
              "indexOfSpecialDate",
              "removeAllSpecialDates"
            ]
          }
        ],
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          },
          {
            "name": "legend",
            "singularName": "legend",
            "type": "sap.ui.unified.CalendarLegend",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.38.5",
            "description": "Association to the <code>CalendarLegend</code> explaining the colors of the <code>specialDates</code>.\n\n<b>Note</b> The legend does not have to be rendered but must exist, and all required types must be assigned.",
            "methods": ["getLegend", "setLegend"]
          }
        ],
        "events": [
          {
            "name": "select",
            "visibility": "public",
            "description": "Time selection changed",
            "methods": ["attachSelect", "detachSelect", "fireSelect"]
          },
          {
            "name": "focus",
            "visibility": "public",
            "description": "Time focus changed",
            "parameters": {
              "date": {
                "name": "date",
                "type": "object",
                "description": "date, as JavaScript Date object, of the focused time."
              },
              "notVisible": {
                "name": "notVisible",
                "type": "boolean",
                "description": "If set, the focused date is not rendered yet. (This happens by navigating out of the visible area.)"
              }
            },
            "methods": ["attachFocus", "detachFocus", "fireFocus"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new <code>TimesRow</code>. It shows a calendar with time granularity (normally hours)\n\n<b>Note:</b> This is used inside the CalendarTimeInterval, not for standalone usage.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "focus",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "date": {
                      "name": "date",
                      "type": "object",
                      "optional": false,
                      "description": "date, as JavaScript Date object, of the focused time."
                    },
                    "notVisible": {
                      "name": "notVisible",
                      "type": "boolean",
                      "optional": false,
                      "description": "If set, the focused date is not rendered yet. (This happens by navigating out of the visible area.)"
                    }
                  }
                }
              }
            }
          ],
          "description": "Time focus changed"
        },
        {
          "name": "select",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Time selection changed"
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some selectedDate to the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "addSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSpecialDate",
              "type": "sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some specialDate to the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "attachFocus",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.TimesRow</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:focus focus} event of this <code>sap.ui.unified.calendar.TimesRow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.calendar.TimesRow</code> itself.\n\nTime focus changed"
        },
        {
          "name": "attachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.TimesRow</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:select select} event of this <code>sap.ui.unified.calendar.TimesRow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.calendar.TimesRow</code> itself.\n\nTime selection changed"
        },
        {
          "name": "checkDateFocusable",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "boolean",
            "description": "flag if focusable"
          },
          "parameters": [
            {
              "name": "oDate",
              "type": "object",
              "optional": false,
              "description": "JavaScript Date object for focused date."
            }
          ],
          "description": "Checks if a date is focusable in the current rendered output. This means that if it is not rendered, it is not focusable."
        },
        {
          "name": "destroySelectedDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the selectedDates in the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "destroySpecialDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the specialDates in the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "detachFocus",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:focus focus} event of this <code>sap.ui.unified.calendar.TimesRow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:select select} event of this <code>sap.ui.unified.calendar.TimesRow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "displayDate",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDate",
              "type": "object",
              "optional": false,
              "description": "JavaScript Date object for focused date."
            }
          ],
          "description": "Displays the given date without setting the focus"
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.calendar.TimesRow with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireFocus",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "date": {
                  "name": "date",
                  "type": "object",
                  "optional": true,
                  "description": "date, as JavaScript Date object, of the focused time."
                },
                "notVisible": {
                  "name": "notVisible",
                  "type": "boolean",
                  "optional": true,
                  "description": "If set, the focused date is not rendered yet. (This happens by navigating out of the visible area.)"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:focus focus} to attached listeners."
        },
        {
          "name": "fireSelect",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:select select} to attached listeners."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getDate",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>date</code>"
          },
          "description": "Gets current value of property {@link #getDate date}.\n\nA date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set). If the date property is not in the range <code>startDate</code> + <code>items</code> in the rendering phase, it is set to the <code>startDate</code>. So after setting the <code>startDate</code> the date should be set to be in the visible range."
        },
        {
          "name": "getIntervalMinutes",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>intervalMinutes</code>"
          },
          "description": "Gets current value of property {@link #getIntervalMinutes intervalMinutes}.\n\nSize of on time interval in minutes, default is 60 minutes.\n\n<b>Note:</b> the start of the interval calculation is always <code>startDat</code> at 00:00.\n\nAn interval longer than 720 minutes is not allowed. Please use the <code>DatesRow</code> instead.\n\nA day must be divisible by this interval size. One interval must not include more than one day.\n\nDefault value is <code>60</code>."
        },
        {
          "name": "getIntervalSelection",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>intervalSelection</code>"
          },
          "description": "Gets current value of property {@link #getIntervalSelection intervalSelection}.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getItems",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>items</code>"
          },
          "description": "Gets current value of property {@link #getItems items}.\n\nNumber of time items displayed\n\nDefault value is <code>12</code>."
        },
        {
          "name": "getLegend",
          "visibility": "public",
          "since": "1.38.5",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getLegend legend}, or <code>null</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.calendar.TimesRow."
        },
        {
          "name": "getSelectedDates",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.DateRange[]" },
          "description": "Gets content of aggregation {@link #getSelectedDates selectedDates}.\n\nDate ranges for selected dates. If <code>singleSelection</code> is set, only the first entry is used."
        },
        {
          "name": "getShowHeader",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showHeader</code>"
          },
          "description": "Gets current value of property {@link #getShowHeader showHeader}.\n\nIf set, a header with the years is shown to visualize what month belongs to what year.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getSingleSelection",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>singleSelection</code>"
          },
          "description": "Gets current value of property {@link #getSingleSelection singleSelection}.\n\nIf set, only a single month or interval, if intervalSelection is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSpecialDates",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.DateTypeRange[]" },
          "description": "Gets content of aggregation {@link #getSpecialDates specialDates}.\n\nDate ranges with type to visualize special item in the row. If one day is assigned to more than one type, only the first one will be used."
        },
        {
          "name": "getStartDate",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>startDate</code>"
          },
          "description": "Gets current value of property {@link #getStartDate startDate}.\n\nStart date, as JavaScript Date object, of the row."
        },
        {
          "name": "indexOfSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.DateRange</code> in the aggregation {@link #getSelectedDates selectedDates}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSpecialDate",
              "type": "sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.DateTypeRange</code> in the aggregation {@link #getSpecialDates specialDates}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the selectedDate should be inserted at; for a negative value of <code>iIndex</code>, the selectedDate is inserted at position 0; for a value greater than the current size of the aggregation, the selectedDate is inserted at the last position"
            }
          ],
          "description": "Inserts a selectedDate into the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "insertSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSpecialDate",
              "type": "sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the specialDate should be inserted at; for a negative value of <code>iIndex</code>, the specialDate is inserted at position 0; for a value greater than the current size of the aggregation, the specialDate is inserted at the last position"
            }
          ],
          "description": "Inserts a specialDate into the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllSelectedDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateRange[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSelectedDates selectedDates}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllSpecialDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateTypeRange[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSpecialDates specialDates}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateRange",
            "description": "The removed selectedDate or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSelectedDate",
              "type": "int|string|sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to remove or its index or id"
            }
          ],
          "description": "Removes a selectedDate from the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "removeSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateTypeRange",
            "description": "The removed specialDate or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSpecialDate",
              "type": "int|string|sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate to remove or its index or id"
            }
          ],
          "description": "Removes a specialDate from the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "setDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDate",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>date</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDate date}.\n\nA date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set). If the date property is not in the range <code>startDate</code> + <code>items</code> in the rendering phase, it is set to the <code>startDate</code>. So after setting the <code>startDate</code> the date should be set to be in the visible range.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIntervalMinutes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iIntervalMinutes",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>intervalMinutes</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIntervalMinutes intervalMinutes}.\n\nSize of on time interval in minutes, default is 60 minutes.\n\n<b>Note:</b> the start of the interval calculation is always <code>startDat</code> at 00:00.\n\nAn interval longer than 720 minutes is not allowed. Please use the <code>DatesRow</code> instead.\n\nA day must be divisible by this interval size. One interval must not include more than one day.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>60</code>."
        },
        {
          "name": "setIntervalSelection",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIntervalSelection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>intervalSelection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIntervalSelection intervalSelection}.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iItems",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>items</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getItems items}.\n\nNumber of time items displayed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>12</code>."
        },
        {
          "name": "setLegend",
          "visibility": "public",
          "since": "1.38.5",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLegend",
              "type": "sap.ui.core.ID|sap.ui.unified.CalendarLegend",
              "optional": false,
              "description": "ID of an element which becomes the new target of this legend association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getLegend legend}."
        },
        {
          "name": "setShowHeader",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowHeader",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showHeader</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowHeader showHeader}.\n\nIf set, a header with the years is shown to visualize what month belongs to what year.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setSingleSelection",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSingleSelection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>singleSelection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSingleSelection singleSelection}.\n\nIf set, only a single month or interval, if intervalSelection is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setStartDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.TimesRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oStartDate",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>startDate</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStartDate startDate}.\n\nStart date, as JavaScript Date object, of the row.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.calendar.YearPicker",
      "basename": "YearPicker",
      "resource": "sap/ui/unified/calendar/YearPicker.js",
      "module": "sap/ui/unified/calendar/YearPicker",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.28.0",
      "extends": "sap.ui.core.Control",
      "description": "renders a YearPicker with ItemNavigation This is used inside the calendar. Not for stand alone usage. As in all date-time controls, all pubic JS Date objects that are given (e.g. <code>setDate()</code>) or read (e.g. <code>getFirstRenderedDate</code>) with values which are considered as date objects in browser(local) timezone.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "year",
            "type": "int",
            "defaultValue": 2000,
            "group": "Data",
            "visibility": "public",
            "description": "The year is initial focused and selected The value must be between 0 and 9999",
            "deprecated": {
              "since": "1.34.0",
              "text": "replaced by <code>date</code> property"
            },
            "methods": ["getYear", "setYear"]
          },
          {
            "name": "years",
            "type": "int",
            "defaultValue": 20,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.30.0",
            "description": "number of displayed years",
            "methods": ["getYears", "setYears"]
          },
          {
            "name": "intervalSelection",
            "type": "boolean",
            "defaultValue": false,
            "group": "Behavior",
            "visibility": "public",
            "since": "1.74",
            "description": "If set, interval selection is allowed",
            "methods": ["getIntervalSelection", "setIntervalSelection"]
          },
          {
            "name": "columns",
            "type": "int",
            "defaultValue": 4,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.30.0",
            "description": "number of years in each row 0 means just to have all years in one row, independent of the number",
            "methods": ["getColumns", "setColumns"]
          },
          {
            "name": "date",
            "type": "object",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "since": "1.34.0",
            "description": "Date as JavaScript Date object. For this date a <code>YearPicker</code> is rendered. If a Year is selected the date is updated with the start date of the selected year (depending on the calendar type).",
            "methods": ["getDate", "setDate"]
          },
          {
            "name": "primaryCalendarType",
            "type": "sap.ui.core.CalendarType",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.34.0",
            "description": "If set, the calendar type is used for display. If not set, the calendar type of the global configuration is used.",
            "methods": ["getPrimaryCalendarType", "setPrimaryCalendarType"]
          }
        ],
        "aggregations": [
          {
            "name": "selectedDates",
            "singularName": "selectedDate",
            "type": "sap.ui.unified.DateRange",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.74",
            "description": "Date Ranges for selected dates of the YearPicker",
            "methods": [
              "getSelectedDates",
              "destroySelectedDates",
              "insertSelectedDate",
              "addSelectedDate",
              "removeSelectedDate",
              "indexOfSelectedDate",
              "removeAllSelectedDates"
            ]
          }
        ],
        "events": [
          {
            "name": "select",
            "visibility": "public",
            "description": "Year selection changed",
            "methods": ["attachSelect", "detachSelect", "fireSelect"]
          },
          {
            "name": "pageChange",
            "visibility": "public",
            "since": "1.38.0",
            "description": "The <code>pageChange</code> event is fired if the displayed years are changed by user navigation.",
            "methods": [
              "attachPageChange",
              "detachPageChange",
              "firePageChange"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new YearPicker.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "pageChange",
          "visibility": "public",
          "since": "1.38.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "The <code>pageChange</code> event is fired if the displayed years are changed by user navigation."
        },
        {
          "name": "select",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Year selection changed"
        }
      ],
      "methods": [
        {
          "name": "addSelectedDate",
          "visibility": "public",
          "since": "1.74",
          "returnValue": {
            "type": "sap.ui.unified.calendar.YearPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some selectedDate to the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "attachPageChange",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.YearPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.YearPicker</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:pageChange pageChange} event of this <code>sap.ui.unified.calendar.YearPicker</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.calendar.YearPicker</code> itself.\n\nThe <code>pageChange</code> event is fired if the displayed years are changed by user navigation."
        },
        {
          "name": "attachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.YearPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.calendar.YearPicker</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:select select} event of this <code>sap.ui.unified.calendar.YearPicker</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.calendar.YearPicker</code> itself.\n\nYear selection changed"
        },
        {
          "name": "destroySelectedDates",
          "visibility": "public",
          "since": "1.74",
          "returnValue": {
            "type": "sap.ui.unified.calendar.YearPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the selectedDates in the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "detachPageChange",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.YearPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:pageChange pageChange} event of this <code>sap.ui.unified.calendar.YearPicker</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.YearPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:select select} event of this <code>sap.ui.unified.calendar.YearPicker</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.calendar.YearPicker with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "firePageChange",
          "visibility": "protected",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.YearPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:pageChange pageChange} to attached listeners."
        },
        {
          "name": "fireSelect",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.calendar.YearPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:select select} to attached listeners."
        },
        {
          "name": "getColumns",
          "visibility": "public",
          "since": "1.30.0",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>columns</code>"
          },
          "description": "Gets current value of property {@link #getColumns columns}.\n\nnumber of years in each row 0 means just to have all years in one row, independent of the number\n\nDefault value is <code>4</code>."
        },
        {
          "name": "getDate",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>date</code>"
          },
          "description": "Gets current value of property {@link #getDate date}.\n\nDate as JavaScript Date object. For this date a <code>YearPicker</code> is rendered. If a Year is selected the date is updated with the start date of the selected year (depending on the calendar type)."
        },
        {
          "name": "getFirstRenderedDate",
          "visibility": "public",
          "since": "1.38.0",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "object",
            "description": "JavaScript Date Object"
          },
          "description": "return the first date of the first rendered year <b>Note:</b> If the YearPicker is not rendered no date is returned"
        },
        {
          "name": "getIntervalSelection",
          "visibility": "public",
          "since": "1.74",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>intervalSelection</code>"
          },
          "description": "Gets current value of property {@link #getIntervalSelection intervalSelection}.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.calendar.YearPicker."
        },
        {
          "name": "getPrimaryCalendarType",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.core.CalendarType",
            "description": "Value of property <code>primaryCalendarType</code>"
          },
          "description": "Gets current value of property {@link #getPrimaryCalendarType primaryCalendarType}.\n\nIf set, the calendar type is used for display. If not set, the calendar type of the global configuration is used."
        },
        {
          "name": "getSelectedDates",
          "visibility": "public",
          "since": "1.74",
          "returnValue": { "type": "sap.ui.unified.DateRange[]" },
          "description": "Gets content of aggregation {@link #getSelectedDates selectedDates}.\n\nDate Ranges for selected dates of the YearPicker"
        },
        {
          "name": "getYear",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>year</code>"
          },
          "description": "Gets current value of property {@link #getYear year}.\n\nThe year is initial focused and selected The value must be between 0 and 9999\n\nDefault value is <code>2000</code>.",
          "deprecated": {
            "since": "1.34.0",
            "text": "replaced by <code>date</code> property"
          }
        },
        {
          "name": "getYears",
          "visibility": "public",
          "since": "1.30.0",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>years</code>"
          },
          "description": "Gets current value of property {@link #getYears years}.\n\nnumber of displayed years\n\nDefault value is <code>20</code>."
        },
        {
          "name": "indexOfSelectedDate",
          "visibility": "public",
          "since": "1.74",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.DateRange</code> in the aggregation {@link #getSelectedDates selectedDates}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertSelectedDate",
          "visibility": "public",
          "since": "1.74",
          "returnValue": {
            "type": "sap.ui.unified.calendar.YearPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the selectedDate should be inserted at; for a negative value of <code>iIndex</code>, the selectedDate is inserted at position 0; for a value greater than the current size of the aggregation, the selectedDate is inserted at the last position"
            }
          ],
          "description": "Inserts a selectedDate into the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "nextPage",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "sap.ui.unified.calendar.YearPicker",
            "description": "<code>this</code> to allow method chaining"
          },
          "description": "displays the next page"
        },
        {
          "name": "previousPage",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "sap.ui.unified.calendar.YearPicker",
            "description": "<code>this</code> to allow method chaining"
          },
          "description": "displays the previous page"
        },
        {
          "name": "removeAllSelectedDates",
          "visibility": "public",
          "since": "1.74",
          "returnValue": {
            "type": "sap.ui.unified.DateRange[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSelectedDates selectedDates}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeSelectedDate",
          "visibility": "public",
          "since": "1.74",
          "returnValue": {
            "type": "sap.ui.unified.DateRange",
            "description": "The removed selectedDate or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSelectedDate",
              "type": "int|string|sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to remove or its index or id"
            }
          ],
          "description": "Removes a selectedDate from the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "setColumns",
          "visibility": "public",
          "since": "1.30.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.YearPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iColumns",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>columns</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColumns columns}.\n\nnumber of years in each row 0 means just to have all years in one row, independent of the number\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>4</code>."
        },
        {
          "name": "setDate",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.YearPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDate",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>date</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDate date}.\n\nDate as JavaScript Date object. For this date a <code>YearPicker</code> is rendered. If a Year is selected the date is updated with the start date of the selected year (depending on the calendar type).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIntervalSelection",
          "visibility": "public",
          "since": "1.74",
          "returnValue": {
            "type": "sap.ui.unified.calendar.YearPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIntervalSelection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>intervalSelection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIntervalSelection intervalSelection}.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setPrimaryCalendarType",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.YearPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sPrimaryCalendarType",
              "type": "sap.ui.core.CalendarType",
              "optional": false,
              "description": "New value for property <code>primaryCalendarType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPrimaryCalendarType primaryCalendarType}.\n\nIf set, the calendar type is used for display. If not set, the calendar type of the global configuration is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setYear",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.calendar.YearPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iYear",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>year</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getYear year}.\n\nThe year is initial focused and selected The value must be between 0 and 9999\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>2000</code>.",
          "deprecated": {
            "since": "1.34.0",
            "text": "replaced by <code>date</code> property"
          }
        },
        {
          "name": "setYears",
          "visibility": "public",
          "since": "1.30.0",
          "returnValue": {
            "type": "sap.ui.unified.calendar.YearPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iYears",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>years</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getYears years}.\n\nnumber of displayed years\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>20</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.CalendarAppointment",
      "basename": "CalendarAppointment",
      "resource": "sap/ui/unified/CalendarAppointment.js",
      "module": "sap/ui/unified/CalendarAppointment",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.34.0",
      "extends": "sap.ui.unified.DateTypeRange",
      "description": "An appointment for use in a <code>PlanningCalendar</code> or similar. The rendering must be done in the Row collecting the appointments. (Because there are different visualizations possible.)\n\nApplications could inherit from this element to add own fields.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "title",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "Title of the appointment.",
            "methods": ["getTitle", "setTitle"]
          },
          {
            "name": "text",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "Text of the appointment.",
            "methods": ["getText", "setText"]
          },
          {
            "name": "icon",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "Icon of the Appointment. (e.g. picture of the person)\n\nURI of an image or an icon registered in sap.ui.core.IconPool.",
            "methods": ["getIcon", "setIcon"]
          },
          {
            "name": "tentative",
            "type": "boolean",
            "defaultValue": false,
            "group": "Data",
            "visibility": "public",
            "description": "Indicates if the icon is tentative.",
            "methods": ["getTentative", "setTentative"]
          },
          {
            "name": "selected",
            "type": "boolean",
            "defaultValue": false,
            "group": "Data",
            "visibility": "public",
            "description": "Indicates if the icon is selected.",
            "methods": ["getSelected", "setSelected"]
          },
          {
            "name": "key",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "Can be used as identifier of the appointment",
            "methods": ["getKey", "setKey"]
          },
          {
            "name": "color",
            "type": "sap.ui.core.CSSColor",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.46.0",
            "description": "Overrides the color derived from the <code>type</code> property. This property will work only with full hex color with pound symbol, e.g.: #FF0000.",
            "methods": ["getColor", "setColor"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new <code>CalendarAppointment</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.CalendarAppointment with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.unified.DateTypeRange.extend}."
        },
        {
          "name": "getColor",
          "visibility": "public",
          "since": "1.46.0",
          "returnValue": {
            "type": "sap.ui.core.CSSColor",
            "description": "Value of property <code>color</code>"
          },
          "description": "Gets current value of property {@link #getColor color}.\n\nOverrides the color derived from the <code>type</code> property. This property will work only with full hex color with pound symbol, e.g.: #FF0000."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>icon</code>"
          },
          "description": "Gets current value of property {@link #getIcon icon}.\n\nIcon of the Appointment. (e.g. picture of the person)\n\nURI of an image or an icon registered in sap.ui.core.IconPool."
        },
        {
          "name": "getKey",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>key</code>"
          },
          "description": "Gets current value of property {@link #getKey key}.\n\nCan be used as identifier of the appointment"
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.CalendarAppointment."
        },
        {
          "name": "getSelected",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>selected</code>"
          },
          "description": "Gets current value of property {@link #getSelected selected}.\n\nIndicates if the icon is selected.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getTentative",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>tentative</code>"
          },
          "description": "Gets current value of property {@link #getTentative tentative}.\n\nIndicates if the icon is tentative.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getText",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>text</code>"
          },
          "description": "Gets current value of property {@link #getText text}.\n\nText of the appointment."
        },
        {
          "name": "getTitle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>title</code>"
          },
          "description": "Gets current value of property {@link #getTitle title}.\n\nTitle of the appointment."
        },
        {
          "name": "setColor",
          "visibility": "public",
          "since": "1.46.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarAppointment",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColor",
              "type": "sap.ui.core.CSSColor",
              "optional": false,
              "description": "New value for property <code>color</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColor color}.\n\nOverrides the color derived from the <code>type</code> property. This property will work only with full hex color with pound symbol, e.g.: #FF0000.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarAppointment",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIcon",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>icon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIcon icon}.\n\nIcon of the Appointment. (e.g. picture of the person)\n\nURI of an image or an icon registered in sap.ui.core.IconPool.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setKey",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarAppointment",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sKey",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>key</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getKey key}.\n\nCan be used as identifier of the appointment\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSelected",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarAppointment",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSelected",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>selected</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelected selected}.\n\nIndicates if the icon is selected.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setTentative",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarAppointment",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bTentative",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>tentative</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTentative tentative}.\n\nIndicates if the icon is tentative.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setText",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarAppointment",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>text</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getText text}.\n\nText of the appointment.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setTitle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarAppointment",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sTitle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>title</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getTitle title}.\n\nTitle of the appointment.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.unified.CalendarAppointmentVisualization",
      "basename": "CalendarAppointmentVisualization",
      "resource": "sap/ui/unified/library.js",
      "module": "sap/ui/unified/library",
      "export": "CalendarAppointmentVisualization",
      "static": true,
      "visibility": "public",
      "since": "1.40.0",
      "description": "Visualization types for {@link sap.ui.unified.CalendarAppointment}.",
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "enum" },
      "properties": [
        {
          "name": "Filled",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Visualization with fill color depending on the used theme."
        },
        {
          "name": "Standard",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Standard visualization with no fill color."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.CalendarDateInterval",
      "basename": "CalendarDateInterval",
      "resource": "sap/ui/unified/CalendarDateInterval.js",
      "module": "sap/ui/unified/CalendarDateInterval",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.30.0",
      "extends": "sap.ui.unified.Calendar",
      "description": "<code>CalendarDateInterval</code> only visualizes the dates in a one-line interval and allows the selection of a single day.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "startDate",
            "type": "object",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "Start date of the Interval",
            "methods": ["getStartDate", "setStartDate"]
          },
          {
            "name": "days",
            "type": "int",
            "defaultValue": 7,
            "group": "Appearance",
            "visibility": "public",
            "description": "number of days displayed on phones the maximum rendered number of days is 8.",
            "methods": ["getDays", "setDays"]
          },
          {
            "name": "showDayNamesLine",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.34.0",
            "description": "If set the day names are shown in a separate line. If not set the day names are shown inside the single days.",
            "methods": ["getShowDayNamesLine", "setShowDayNamesLine"]
          },
          {
            "name": "pickerPopup",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.34.0",
            "description": "If set, the month- and yearPicker opens on a popup",
            "methods": ["getPickerPopup", "setPickerPopup"]
          }
        ],
        "aggregations": [
          {
            "name": "calendarPicker",
            "singularName": "calendarPicker",
            "type": "sap.ui.unified.Calendar",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "Hidden, for internal use only.",
            "methods": [
              "getCalendarPicker",
              "destroyCalendarPicker",
              "setCalendarPicker"
            ]
          }
        ],
        "designtime": "sap/ui/unified/designtime/CalendarDateInterval.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new <code>CalendarDateInterval</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "_getDaysLarge",
          "visibility": "protected",
          "returnValue": {
            "type": "int",
            "description": "The number of days to determine how the start and end of month are displayed"
          },
          "description": "If more than this number of days are displayed, start and end month are displayed on the button."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.CalendarDateInterval with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.unified.Calendar.extend}."
        },
        {
          "name": "getDays",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>days</code>"
          },
          "description": "Gets current value of property {@link #getDays days}.\n\nnumber of days displayed on phones the maximum rendered number of days is 8.\n\nDefault value is <code>7</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.CalendarDateInterval."
        },
        {
          "name": "getPickerPopup",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>pickerPopup</code>"
          },
          "description": "Gets current value of property {@link #getPickerPopup pickerPopup}.\n\nIf set, the month- and yearPicker opens on a popup\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowDayNamesLine",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showDayNamesLine</code>"
          },
          "description": "Gets current value of property {@link #getShowDayNamesLine showDayNamesLine}.\n\nIf set the day names are shown in a separate line. If not set the day names are shown inside the single days.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getStartDate",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>startDate</code>"
          },
          "description": "Gets current value of property {@link #getStartDate startDate}.\n\nStart date of the Interval"
        },
        {
          "name": "setDays",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarDateInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iDays",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>days</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDays days}.\n\nnumber of days displayed on phones the maximum rendered number of days is 8.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>7</code>."
        },
        {
          "name": "setFirstDayOfWeek",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.CalendarDateInterval",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "iFirstDayOfWeek",
              "type": "int",
              "optional": true,
              "description": "First day of the week"
            }
          ],
          "description": "Setter for property <code>firstDayOfWeek</code>.\n\nProperty <code>firstDayOfWeek</code> is not supported in <code>sap.ui.unified.CalendarDateInterval</code> control."
        },
        {
          "name": "setMonths",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.CalendarDateInterval",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "iMonths",
              "type": "int",
              "optional": false,
              "description": "How many months to be displayed"
            }
          ],
          "description": "Setter for property <code>months</code>.\n\nProperty <code>months</code> is not supported in <code>sap.ui.unified.CalendarDateInterval</code> control."
        },
        {
          "name": "setPickerPopup",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarDateInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bPickerPopup",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>pickerPopup</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPickerPopup pickerPopup}.\n\nIf set, the month- and yearPicker opens on a popup\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowDayNamesLine",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarDateInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowDayNamesLine",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showDayNamesLine</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowDayNamesLine showDayNamesLine}.\n\nIf set the day names are shown in a separate line. If not set the day names are shown inside the single days.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setStartDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarDateInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oStartDate",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>startDate</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStartDate startDate}.\n\nStart date of the Interval\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.unified.CalendarDayType",
      "basename": "CalendarDayType",
      "resource": "sap/ui/unified/library.js",
      "module": "sap/ui/unified/library",
      "export": "CalendarDayType",
      "static": true,
      "visibility": "public",
      "since": "1.24.0",
      "description": "Types of a calendar day used for visualization.",
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "enum" },
      "properties": [
        {
          "name": "None",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "No special type is used."
        },
        {
          "name": "NonWorking",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Non-working dates."
        },
        {
          "name": "Type01",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        },
        {
          "name": "Type02",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        },
        {
          "name": "Type03",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        },
        {
          "name": "Type04",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        },
        {
          "name": "Type05",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        },
        {
          "name": "Type06",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        },
        {
          "name": "Type07",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        },
        {
          "name": "Type08",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        },
        {
          "name": "Type09",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        },
        {
          "name": "Type10",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        },
        {
          "name": "Type11",
          "visibility": "public",
          "static": true,
          "since": "1.50",
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        },
        {
          "name": "Type12",
          "visibility": "public",
          "static": true,
          "since": "1.50",
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        },
        {
          "name": "Type13",
          "visibility": "public",
          "static": true,
          "since": "1.50",
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        },
        {
          "name": "Type14",
          "visibility": "public",
          "static": true,
          "since": "1.50",
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        },
        {
          "name": "Type15",
          "visibility": "public",
          "static": true,
          "since": "1.50",
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        },
        {
          "name": "Type16",
          "visibility": "public",
          "static": true,
          "since": "1.50",
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        },
        {
          "name": "Type17",
          "visibility": "public",
          "static": true,
          "since": "1.50",
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        },
        {
          "name": "Type18",
          "visibility": "public",
          "static": true,
          "since": "1.50",
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        },
        {
          "name": "Type19",
          "visibility": "public",
          "static": true,
          "since": "1.50",
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        },
        {
          "name": "Type20",
          "visibility": "public",
          "static": true,
          "since": "1.50",
          "type": "string",
          "description": "The semantic meaning must be defined by the app. It can be displayed in a legend."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.unified.CalendarIntervalType",
      "basename": "CalendarIntervalType",
      "resource": "sap/ui/unified/library.js",
      "module": "sap/ui/unified/library",
      "export": "CalendarIntervalType",
      "static": true,
      "visibility": "public",
      "since": "1.34.0",
      "description": "Interval types in a <code>CalendarRow</code>.",
      "ui5-metamodel": true,
      "properties": [
        {
          "name": "Day",
          "value": "Day",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Intervals have the size of one day."
        },
        {
          "name": "Hour",
          "value": "Hour",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Intervals have the size of one hour."
        },
        {
          "name": "Month",
          "value": "Month",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Intervals have the size of one month."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.CalendarLegend",
      "basename": "CalendarLegend",
      "resource": "sap/ui/unified/CalendarLegend.js",
      "module": "sap/ui/unified/CalendarLegend",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.24.0",
      "extends": "sap.ui.core.Control",
      "description": "A legend for the Calendar Control. Displays special dates colors with their corresponding description. The aggregation specialDates can be set herefor.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "standardItems",
            "type": "string[]",
            "defaultValue": [
              "Today",
              "Selected",
              "WorkingDay",
              "NonWorkingDay"
            ],
            "group": "Misc",
            "visibility": "public",
            "since": "1.54",
            "description": "Determines the standard items related to the calendar days, such as, today, selected, working and non-working. Values must be one of <code>sap.ui.unified.StandardCalendarLegendItem</code>. Note: for versions 1.50 and 1.52, this property was defined in the subclass <code>sap.m.PlanningCalendarLegend</code>",
            "methods": ["getStandardItems", "setStandardItems"]
          },
          {
            "name": "columnWidth",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "120px",
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the width of the created columns in which the items are arranged.",
            "methods": ["getColumnWidth", "setColumnWidth"]
          }
        ],
        "aggregations": [
          {
            "name": "items",
            "singularName": "item",
            "type": "sap.ui.unified.CalendarLegendItem",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Items to be displayed.",
            "methods": [
              "getItems",
              "destroyItems",
              "insertItem",
              "addItem",
              "removeItem",
              "indexOfItem",
              "removeAllItems"
            ]
          },
          {
            "name": "_standardItems",
            "singularName": "_standardItem",
            "type": "sap.ui.unified.CalendarLegendItem",
            "cardinality": "0..n",
            "visibility": "hidden",
            "methods": [
              "get_standardItems",
              "destroy_standardItems",
              "insert_standardItem",
              "add_standardItem",
              "remove_standardItem",
              "indexOf_standardItem",
              "removeAll_standardItems"
            ]
          }
        ],
        "designtime": "sap/ui/unified/designtime/CalendarLegend.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new CalendarLegend.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarLegend",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.ui.unified.CalendarLegendItem",
              "optional": false,
              "description": "The item to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some item to the aggregation {@link #getItems items}."
        },
        {
          "name": "destroyItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarLegend",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the items in the aggregation {@link #getItems items}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.CalendarLegend with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getColumnWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>columnWidth</code>"
          },
          "description": "Gets current value of property {@link #getColumnWidth columnWidth}.\n\nDefines the width of the created columns in which the items are arranged.\n\nDefault value is <code>120px</code>."
        },
        {
          "name": "getItems",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.CalendarLegendItem[]" },
          "description": "Gets content of aggregation {@link #getItems items}.\n\nItems to be displayed."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.CalendarLegend."
        },
        {
          "name": "getStandardItems",
          "visibility": "public",
          "since": "1.54",
          "returnValue": {
            "type": "string[]",
            "description": "Value of property <code>standardItems</code>"
          },
          "description": "Gets current value of property {@link #getStandardItems standardItems}.\n\nDetermines the standard items related to the calendar days, such as, today, selected, working and non-working. Values must be one of <code>sap.ui.unified.StandardCalendarLegendItem</code>. Note: for versions 1.50 and 1.52, this property was defined in the subclass <code>sap.m.PlanningCalendarLegend</code>\n\nDefault value is <code>Today,Selected,WorkingDay,NonWorkingDay</code>."
        },
        {
          "name": "indexOfItem",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.ui.unified.CalendarLegendItem",
              "optional": false,
              "description": "The item whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.CalendarLegendItem</code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarLegend",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.ui.unified.CalendarLegendItem",
              "optional": false,
              "description": "The item to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the item should be inserted at; for a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position"
            }
          ],
          "description": "Inserts a item into the aggregation {@link #getItems items}."
        },
        {
          "name": "removeAllItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarLegendItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarLegendItem",
            "description": "The removed item or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vItem",
              "type": "int|string|sap.ui.unified.CalendarLegendItem",
              "optional": false,
              "description": "The item to remove or its index or id"
            }
          ],
          "description": "Removes a item from the aggregation {@link #getItems items}."
        },
        {
          "name": "setColumnWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarLegend",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColumnWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>columnWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColumnWidth columnWidth}.\n\nDefines the width of the created columns in which the items are arranged.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>120px</code>."
        },
        {
          "name": "setStandardItems",
          "visibility": "public",
          "since": "1.54",
          "returnValue": {
            "type": "sap.ui.unified.CalendarLegend",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sStandardItems",
              "type": "string[]",
              "optional": false,
              "description": "New value for property <code>standardItems</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStandardItems standardItems}.\n\nDetermines the standard items related to the calendar days, such as, today, selected, working and non-working. Values must be one of <code>sap.ui.unified.StandardCalendarLegendItem</code>. Note: for versions 1.50 and 1.52, this property was defined in the subclass <code>sap.m.PlanningCalendarLegend</code>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Today,Selected,WorkingDay,NonWorkingDay</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.CalendarLegendItem",
      "basename": "CalendarLegendItem",
      "resource": "sap/ui/unified/CalendarLegendItem.js",
      "module": "sap/ui/unified/CalendarLegendItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.24.0",
      "extends": "sap.ui.core.Element",
      "description": "Item to be displayed in a CalendarLegend.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "text",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Text to be displayed for the item.",
            "methods": ["getText", "setText"]
          },
          {
            "name": "type",
            "type": "sap.ui.unified.CalendarDayType",
            "defaultValue": "None",
            "group": "Appearance",
            "visibility": "public",
            "since": "1.28.9",
            "description": "Type of the item. If not set the type is automatically determined from the order of the items in the CalendarLegend.",
            "methods": ["getType", "setType"]
          },
          {
            "name": "color",
            "type": "sap.ui.core.CSSColor",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.46.0",
            "description": "Overrides the color derived from the <code>type</code> property.",
            "methods": ["getColor", "setColor"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new CalendarLegendItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.CalendarLegendItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getColor",
          "visibility": "public",
          "since": "1.46.0",
          "returnValue": {
            "type": "sap.ui.core.CSSColor",
            "description": "Value of property <code>color</code>"
          },
          "description": "Gets current value of property {@link #getColor color}.\n\nOverrides the color derived from the <code>type</code> property."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.CalendarLegendItem."
        },
        {
          "name": "getText",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>text</code>"
          },
          "description": "Gets current value of property {@link #getText text}.\n\nText to be displayed for the item."
        },
        {
          "name": "getType",
          "visibility": "public",
          "since": "1.28.9",
          "returnValue": {
            "type": "sap.ui.unified.CalendarDayType",
            "description": "Value of property <code>type</code>"
          },
          "description": "Gets current value of property {@link #getType type}.\n\nType of the item. If not set the type is automatically determined from the order of the items in the CalendarLegend.\n\nDefault value is <code>None</code>."
        },
        {
          "name": "setColor",
          "visibility": "public",
          "since": "1.46.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarLegendItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColor",
              "type": "sap.ui.core.CSSColor",
              "optional": false,
              "description": "New value for property <code>color</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColor color}.\n\nOverrides the color derived from the <code>type</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setText",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarLegendItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>text</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getText text}.\n\nText to be displayed for the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setType",
          "visibility": "public",
          "since": "1.28.9",
          "returnValue": {
            "type": "sap.ui.unified.CalendarLegendItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sType",
              "type": "sap.ui.unified.CalendarDayType",
              "optional": false,
              "description": "New value for property <code>type</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getType type}.\n\nType of the item. If not set the type is automatically determined from the order of the items in the CalendarLegend.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.CalendarMonthInterval",
      "basename": "CalendarMonthInterval",
      "resource": "sap/ui/unified/CalendarMonthInterval.js",
      "module": "sap/ui/unified/CalendarMonthInterval",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.32.0",
      "extends": "sap.ui.core.Control",
      "description": "Calendar with granularity of months displayed in one line.\n\n<b>Note:</b> JavaScript Date objects are used to set and return the months, mark them as selected or as a special type. But the date part of the Date object is not used. If a Date object is returned the date will be set to the 1st of the corresponding month.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Dimension",
            "visibility": "public",
            "description": "Width of the <code>CalendarMonthInterval</code>. The width of the single months depends on this width.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "startDate",
            "type": "object",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "Start date of the Interval as JavaScript Date object. The month of this Date will be the first month in the displayed row.",
            "methods": ["getStartDate", "setStartDate"]
          },
          {
            "name": "intervalSelection",
            "type": "boolean",
            "defaultValue": false,
            "group": "Behavior",
            "visibility": "public",
            "description": "If set, interval selection is allowed",
            "methods": ["getIntervalSelection", "setIntervalSelection"]
          },
          {
            "name": "singleSelection",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "If set, only a single date or interval, if <code>intervalSelection</code> is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.",
            "methods": ["getSingleSelection", "setSingleSelection"]
          },
          {
            "name": "months",
            "type": "int",
            "defaultValue": 12,
            "group": "Appearance",
            "visibility": "public",
            "description": "Number of months displayed\n\n<b>Note:</b> On phones, the maximum number of months displayed in the row is always 6.",
            "methods": ["getMonths", "setMonths"]
          },
          {
            "name": "pickerPopup",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.34.0",
            "description": "If set, the yearPicker opens on a popup",
            "methods": ["getPickerPopup", "setPickerPopup"]
          },
          {
            "name": "minDate",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Minimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>minDate</code> is set to be after the <code>maxDate</code>, the <code>maxDate</code> is set to the end of the month of the <code>minDate</code>.",
            "methods": ["getMinDate", "setMinDate"]
          },
          {
            "name": "maxDate",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Maximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>maxDate</code> is set to be before the <code>minDate</code>, the <code>minDate</code> is set to the begin of the month of the <code>maxDate</code>.",
            "methods": ["getMaxDate", "setMaxDate"]
          }
        ],
        "aggregations": [
          {
            "name": "selectedDates",
            "singularName": "selectedDate",
            "type": "sap.ui.unified.DateRange",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Date ranges for selected dates of the <code>CalendarMonthInterval</code>.\n\nIf <code>singleSelection</code> is set, only the first entry is used.\n\n<b>Note:</b> Even if only one day is selected, the whole corresponding month is selected.",
            "methods": [
              "getSelectedDates",
              "destroySelectedDates",
              "insertSelectedDate",
              "addSelectedDate",
              "removeSelectedDate",
              "indexOfSelectedDate",
              "removeAllSelectedDates"
            ]
          },
          {
            "name": "specialDates",
            "singularName": "specialDate",
            "type": "sap.ui.unified.DateTypeRange",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Date ranges with type to visualize special months in the <code>CalendarMonthInterval</code>. If one day is assigned to more than one type, only the first one will be used.\n\n<b>Note:</b> Even if only one day is set as a special day, the whole corresponding month is displayed in this way.",
            "methods": [
              "getSpecialDates",
              "destroySpecialDates",
              "insertSpecialDate",
              "addSpecialDate",
              "removeSpecialDate",
              "indexOfSpecialDate",
              "removeAllSpecialDates"
            ]
          },
          {
            "name": "header",
            "singularName": "header",
            "type": "sap.ui.unified.calendar.Header",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "Hidden, for internal use only.",
            "methods": ["getHeader", "destroyHeader", "setHeader"]
          },
          {
            "name": "monthsRow",
            "singularName": "monthsRow",
            "type": "sap.ui.unified.calendar.MonthsRow",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": ["getMonthsRow", "destroyMonthsRow", "setMonthsRow"]
          },
          {
            "name": "yearPicker",
            "singularName": "yearPicker",
            "type": "sap.ui.unified.calendar.YearPicker",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": ["getYearPicker", "destroyYearPicker", "setYearPicker"]
          },
          {
            "name": "calendarPicker",
            "singularName": "calendarPicker",
            "type": "sap.ui.unified.Calendar",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": [
              "getCalendarPicker",
              "destroyCalendarPicker",
              "setCalendarPicker"
            ]
          }
        ],
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          },
          {
            "name": "legend",
            "singularName": "legend",
            "type": "sap.ui.unified.CalendarLegend",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.38.5",
            "description": "Association to the <code>CalendarLegend</code> explaining the colors of the <code>specialDates</code>.\n\n<b>Note</b> The legend does not have to be rendered but must exist, and all required types must be assigned.",
            "methods": ["getLegend", "setLegend"]
          }
        ],
        "events": [
          {
            "name": "select",
            "visibility": "public",
            "description": "Month selection changed",
            "methods": ["attachSelect", "detachSelect", "fireSelect"]
          },
          {
            "name": "cancel",
            "visibility": "public",
            "description": "Month selection was cancelled",
            "methods": ["attachCancel", "detachCancel", "fireCancel"]
          },
          {
            "name": "startDateChange",
            "visibility": "public",
            "since": "1.34.0",
            "description": "<code>startDate</code> was changed while navigation in <code>CalendarMonthInterval</code>",
            "methods": [
              "attachStartDateChange",
              "detachStartDateChange",
              "fireStartDateChange"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "Object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new <code>CalendarMonthInterval</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "cancel",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Month selection was cancelled"
        },
        {
          "name": "select",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Month selection changed"
        },
        {
          "name": "startDateChange",
          "visibility": "public",
          "since": "1.34.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "<code>startDate</code> was changed while navigation in <code>CalendarMonthInterval</code>"
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some selectedDate to the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "addSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSpecialDate",
              "type": "sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some specialDate to the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "attachCancel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarMonthInterval</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:cancel cancel} event of this <code>sap.ui.unified.CalendarMonthInterval</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.CalendarMonthInterval</code> itself.\n\nMonth selection was cancelled"
        },
        {
          "name": "attachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarMonthInterval</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:select select} event of this <code>sap.ui.unified.CalendarMonthInterval</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.CalendarMonthInterval</code> itself.\n\nMonth selection changed"
        },
        {
          "name": "attachStartDateChange",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarMonthInterval</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:startDateChange startDateChange} event of this <code>sap.ui.unified.CalendarMonthInterval</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.CalendarMonthInterval</code> itself.\n\n<code>startDate</code> was changed while navigation in <code>CalendarMonthInterval</code>"
        },
        {
          "name": "destroySelectedDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the selectedDates in the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "destroySpecialDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the specialDates in the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "detachCancel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:cancel cancel} event of this <code>sap.ui.unified.CalendarMonthInterval</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:select select} event of this <code>sap.ui.unified.CalendarMonthInterval</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachStartDateChange",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:startDateChange startDateChange} event of this <code>sap.ui.unified.CalendarMonthInterval</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "displayDate",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDatetime",
              "type": "Object",
              "optional": false,
              "description": "JavaScript date object for displayed date. (The month of this date will be displayed.)"
            }
          ],
          "description": "Displays a month in the <code>CalendarMonthInterval</code> but doesn't set the focus."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.CalendarMonthInterval with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireCancel",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:cancel cancel} to attached listeners."
        },
        {
          "name": "fireSelect",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:select select} to attached listeners."
        },
        {
          "name": "fireStartDateChange",
          "visibility": "protected",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:startDateChange startDateChange} to attached listeners."
        },
        {
          "name": "focusDate",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDatetime",
              "type": "Object",
              "optional": false,
              "description": "JavaScript date object for focused date. (The month of this date will be focused.)"
            }
          ],
          "description": "Sets the focused month of the <code>CalendarMonthInterval</code>."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getIntervalSelection",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>intervalSelection</code>"
          },
          "description": "Gets current value of property {@link #getIntervalSelection intervalSelection}.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getLegend",
          "visibility": "public",
          "since": "1.38.5",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getLegend legend}, or <code>null</code>."
        },
        {
          "name": "getMaxDate",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>maxDate</code>"
          },
          "description": "Gets current value of property {@link #getMaxDate maxDate}.\n\nMaximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>maxDate</code> is set to be before the <code>minDate</code>, the <code>minDate</code> is set to the begin of the month of the <code>maxDate</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.CalendarMonthInterval."
        },
        {
          "name": "getMinDate",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>minDate</code>"
          },
          "description": "Gets current value of property {@link #getMinDate minDate}.\n\nMinimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>minDate</code> is set to be after the <code>maxDate</code>, the <code>maxDate</code> is set to the end of the month of the <code>minDate</code>."
        },
        {
          "name": "getMonths",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>months</code>"
          },
          "description": "Gets current value of property {@link #getMonths months}.\n\nNumber of months displayed\n\n<b>Note:</b> On phones, the maximum number of months displayed in the row is always 6.\n\nDefault value is <code>12</code>."
        },
        {
          "name": "getPickerPopup",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>pickerPopup</code>"
          },
          "description": "Gets current value of property {@link #getPickerPopup pickerPopup}.\n\nIf set, the yearPicker opens on a popup\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getSelectedDates",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.DateRange[]" },
          "description": "Gets content of aggregation {@link #getSelectedDates selectedDates}.\n\nDate ranges for selected dates of the <code>CalendarMonthInterval</code>.\n\nIf <code>singleSelection</code> is set, only the first entry is used.\n\n<b>Note:</b> Even if only one day is selected, the whole corresponding month is selected."
        },
        {
          "name": "getSingleSelection",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>singleSelection</code>"
          },
          "description": "Gets current value of property {@link #getSingleSelection singleSelection}.\n\nIf set, only a single date or interval, if <code>intervalSelection</code> is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSpecialDates",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.DateTypeRange[]" },
          "description": "Gets content of aggregation {@link #getSpecialDates specialDates}.\n\nDate ranges with type to visualize special months in the <code>CalendarMonthInterval</code>. If one day is assigned to more than one type, only the first one will be used.\n\n<b>Note:</b> Even if only one day is set as a special day, the whole corresponding month is displayed in this way."
        },
        {
          "name": "getStartDate",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>startDate</code>"
          },
          "description": "Gets current value of property {@link #getStartDate startDate}.\n\nStart date of the Interval as JavaScript Date object. The month of this Date will be the first month in the displayed row."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nWidth of the <code>CalendarMonthInterval</code>. The width of the single months depends on this width."
        },
        {
          "name": "indexOfSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.DateRange</code> in the aggregation {@link #getSelectedDates selectedDates}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSpecialDate",
              "type": "sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.DateTypeRange</code> in the aggregation {@link #getSpecialDates specialDates}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the selectedDate should be inserted at; for a negative value of <code>iIndex</code>, the selectedDate is inserted at position 0; for a value greater than the current size of the aggregation, the selectedDate is inserted at the last position"
            }
          ],
          "description": "Inserts a selectedDate into the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "insertSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSpecialDate",
              "type": "sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the specialDate should be inserted at; for a negative value of <code>iIndex</code>, the specialDate is inserted at position 0; for a value greater than the current size of the aggregation, the specialDate is inserted at the last position"
            }
          ],
          "description": "Inserts a specialDate into the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllSelectedDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateRange[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSelectedDates selectedDates}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllSpecialDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateTypeRange[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSpecialDates specialDates}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateRange",
            "description": "The removed selectedDate or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSelectedDate",
              "type": "int|string|sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to remove or its index or id"
            }
          ],
          "description": "Removes a selectedDate from the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "removeSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateTypeRange",
            "description": "The removed specialDate or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSpecialDate",
              "type": "int|string|sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate to remove or its index or id"
            }
          ],
          "description": "Removes a specialDate from the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "setIntervalSelection",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIntervalSelection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>intervalSelection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIntervalSelection intervalSelection}.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setLegend",
          "visibility": "public",
          "since": "1.38.5",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLegend",
              "type": "sap.ui.core.ID|sap.ui.unified.CalendarLegend",
              "optional": false,
              "description": "ID of an element which becomes the new target of this legend association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getLegend legend}."
        },
        {
          "name": "setMaxDate",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oMaxDate",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>maxDate</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaxDate maxDate}.\n\nMaximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>maxDate</code> is set to be before the <code>minDate</code>, the <code>minDate</code> is set to the begin of the month of the <code>maxDate</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMinDate",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oMinDate",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>minDate</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMinDate minDate}.\n\nMinimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>minDate</code> is set to be after the <code>maxDate</code>, the <code>maxDate</code> is set to the end of the month of the <code>minDate</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMonths",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iMonths",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>months</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMonths months}.\n\nNumber of months displayed\n\n<b>Note:</b> On phones, the maximum number of months displayed in the row is always 6.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>12</code>."
        },
        {
          "name": "setPickerPopup",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bPickerPopup",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>pickerPopup</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPickerPopup pickerPopup}.\n\nIf set, the yearPicker opens on a popup\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setSingleSelection",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSingleSelection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>singleSelection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSingleSelection singleSelection}.\n\nIf set, only a single date or interval, if <code>intervalSelection</code> is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setStartDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oStartDate",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>startDate</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStartDate startDate}.\n\nStart date of the Interval as JavaScript Date object. The month of this Date will be the first month in the displayed row.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarMonthInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nWidth of the <code>CalendarMonthInterval</code>. The width of the single months depends on this width.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.CalendarRow",
      "basename": "CalendarRow",
      "resource": "sap/ui/unified/CalendarRow.js",
      "module": "sap/ui/unified/CalendarRow",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.34.0",
      "extends": "sap.ui.core.Control",
      "description": "A calendar row with a header and appointments. The Appointments will be placed in the defined interval.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "startDate",
            "type": "object",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "Start date, as JavaScript Date object, of the row. As default, the current date is used.",
            "methods": ["getStartDate", "setStartDate"]
          },
          {
            "name": "intervals",
            "type": "int",
            "defaultValue": 12,
            "group": "Appearance",
            "visibility": "public",
            "description": "Number of displayed intervals. The size of the intervals is defined with <code>intervalType</code>",
            "methods": ["getIntervals", "setIntervals"]
          },
          {
            "name": "intervalType",
            "type": "sap.ui.unified.CalendarIntervalType",
            "defaultValue": "Hour",
            "group": "Appearance",
            "visibility": "public",
            "description": "Type of the intervals of the row. The default is one hour.",
            "methods": ["getIntervalType", "setIntervalType"]
          },
          {
            "name": "showSubIntervals",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "If set, subintervals are shown.\n\nIf the interval type is <code>Hour</code>, quarter hours are shown.\n\nIf the interval type is <code>Day</code>, hours are shown.\n\nIf the interval type is <code>Month</code>, days are shown.",
            "methods": ["getShowSubIntervals", "setShowSubIntervals"]
          },
          {
            "name": "showIntervalHeaders",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "description": "If set, interval headers are shown like specified in <code>showEmptyIntervalHeaders</code>.\n\nIf not set, no interval headers are shown even if <code>intervalHeaders</code> are assigned.",
            "methods": ["getShowIntervalHeaders", "setShowIntervalHeaders"]
          },
          {
            "name": "showEmptyIntervalHeaders",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.38.0",
            "description": "If set, interval headers are shown even if no <code>intervalHeaders</code> are assigned to the visible time frame.\n\nIf not set, no interval headers are shown if no <code>intervalHeaders</code> are assigned.\n\n<b>Note:</b> This property is only used if <code>showIntervalHeaders</code> is set to true.",
            "methods": [
              "getShowEmptyIntervalHeaders",
              "setShowEmptyIntervalHeaders"
            ]
          },
          {
            "name": "nonWorkingDays",
            "type": "int[]",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "If set, the provided weekdays are displayed as non-working days. Valid values inside the array are 0 to 6. (Other values will just be ignored.)\n\nIf not set, the weekend defined in the locale settings is displayed as non-working days.\n\n<b>Note:</b> The non working days are only visualized if <code>intervalType</code> is set to day.",
            "methods": ["getNonWorkingDays", "setNonWorkingDays"]
          },
          {
            "name": "nonWorkingHours",
            "type": "int[]",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "If set, the provided hours are displayed as non-working hours. Valid values inside the array are 0 to 23. (Other values will just be ignored.)\n\n<b>Note:</b> The non working hours are only visualized if <code>intervalType</code> is set to hour.",
            "methods": ["getNonWorkingHours", "setNonWorkingHours"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Dimension",
            "visibility": "public",
            "description": "Width of the row",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "height",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Dimension",
            "visibility": "public",
            "description": "Height of the row",
            "methods": ["getHeight", "setHeight"]
          },
          {
            "name": "checkResize",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "If set, the <code>CalendarRow</code> checks for resize by itself.\n\nIf a lot of <code>CalendarRow</code> controls are used in one container control (like <code>PlanningCalendar</code>). the resize checks should be done only by this container control. Then the container control should call <code>handleResize</code> of the <code>CalendarRow</code> if a resize happens.",
            "methods": ["getCheckResize", "setCheckResize"]
          },
          {
            "name": "updateCurrentTime",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "If set the <code>CalendarRow</code> triggers a periodic update to visualize the current time.\n\nIf a lot of <code>CalendarRow</code> controls are used in one container control (like <code>PlanningCalendar</code>) the periodic update should be triggered only by this container control. Then the container control should call <code>updateCurrentTimeVisualization</code> of the <code>CalendarRow</code> to update the visualization.",
            "methods": ["getUpdateCurrentTime", "setUpdateCurrentTime"]
          },
          {
            "name": "groupAppointmentsMode",
            "type": "sap.ui.unified.GroupAppointmentsMode",
            "defaultValue": "Collapsed",
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines the mode in which the overlapping appointments are displayed.\n\n<b>Note:</b> This property takes effect, only if the <code>intervalType</code> of the current calendar view is set to <code>sap.ui.unified.CalendarIntervalType.Month</code>. On phone devices this property is ignored, and the default value is applied.",
            "methods": ["getGroupAppointmentsMode", "setGroupAppointmentsMode"]
          },
          {
            "name": "appointmentsReducedHeight",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.38.0",
            "description": "If set the appointments without text (only title) are rendered with a smaller height.\n\n<b>Note:</b> On phone devices this property is ignored, appointments are always rendered in full height to allow touching.",
            "methods": [
              "getAppointmentsReducedHeight",
              "setAppointmentsReducedHeight"
            ]
          },
          {
            "name": "appointmentsVisualization",
            "type": "sap.ui.unified.CalendarAppointmentVisualization",
            "defaultValue": "Standard",
            "group": "Appearance",
            "visibility": "public",
            "since": "1.40.0",
            "description": "Defines the visualization of the <code>CalendarAppoinment</code>\n\n<b>Note:</b> The real visualization depends on the used theme.",
            "methods": [
              "getAppointmentsVisualization",
              "setAppointmentsVisualization"
            ]
          }
        ],
        "aggregations": [
          {
            "name": "appointments",
            "singularName": "appointment",
            "type": "sap.ui.unified.CalendarAppointment",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Appointments to be displayed in the row. Appointments outside the visible time frame are not rendered.\n\n<b>Note:</b> For performance reasons, only appointments in the visible time range or nearby should be assigned.",
            "methods": [
              "getAppointments",
              "destroyAppointments",
              "insertAppointment",
              "addAppointment",
              "removeAppointment",
              "indexOfAppointment",
              "removeAllAppointments"
            ]
          },
          {
            "name": "intervalHeaders",
            "singularName": "intervalHeader",
            "type": "sap.ui.unified.CalendarAppointment",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Appointments to be displayed in the top of the intervals. The <code>intervalHeaders</code> are used to visualize public holidays and similar things.\n\nAppointments outside the visible time frame are not rendered.\n\nThe <code>intervalHeaders</code> always fill whole intervals. If they are shorter than one interval, they are not displayed.\n\n<b>Note:</b> For performance reasons, only appointments in the visible time range or nearby should be assigned.",
            "methods": [
              "getIntervalHeaders",
              "destroyIntervalHeaders",
              "insertIntervalHeader",
              "addIntervalHeader",
              "removeIntervalHeader",
              "indexOfIntervalHeader",
              "removeAllIntervalHeaders"
            ]
          },
          {
            "name": "groupAppointments",
            "singularName": "groupAppointment",
            "type": "sap.ui.unified.CalendarAppointment",
            "cardinality": "0..n",
            "visibility": "hidden",
            "methods": [
              "getGroupAppointments",
              "destroyGroupAppointments",
              "insertGroupAppointment",
              "addGroupAppointment",
              "removeGroupAppointment",
              "indexOfGroupAppointment",
              "removeAllGroupAppointments"
            ]
          }
        ],
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).\n\n<b>Note</b> These labels are also assigned to the appointments.",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          },
          {
            "name": "legend",
            "singularName": "legend",
            "type": "sap.ui.unified.CalendarLegend",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.40.0",
            "description": "Association to the <code>CalendarLegend</code> explaining the colors of the <code>Appointments</code>.\n\n<b>Note</b> The legend does not have to be rendered but must exist, and all required types must be assigned.",
            "methods": ["getLegend", "setLegend"]
          }
        ],
        "events": [
          {
            "name": "select",
            "visibility": "public",
            "description": "Fired if an appointment was selected",
            "parameters": {
              "appointment": {
                "name": "appointment",
                "type": "sap.ui.unified.CalendarAppointment",
                "description": "selected appointment"
              },
              "appointments": {
                "name": "appointments",
                "type": "sap.ui.unified.CalendarAppointment[]",
                "description": "selected appointments in case a group appointment is selected"
              },
              "multiSelect": {
                "name": "multiSelect",
                "type": "boolean",
                "description": "If set, the appointment was selected by multiple selection (e.g. shift + mouse click). So more than the current appointment could be selected."
              },
              "domRefId": {
                "name": "domRefId",
                "type": "string",
                "since": "1.50",
                "description": "Gives the ID of the DOM element of the clicked appointment"
              }
            },
            "methods": ["attachSelect", "detachSelect", "fireSelect"]
          },
          {
            "name": "startDateChange",
            "visibility": "public",
            "description": "<code>startDate</code> was changed while navigating in <code>CalendarRow</code>",
            "methods": [
              "attachStartDateChange",
              "detachStartDateChange",
              "fireStartDateChange"
            ]
          },
          {
            "name": "leaveRow",
            "visibility": "public",
            "description": "The <code>CalendarRow</code> should be left while navigating. (Arrow up or arrow down.) The caller should determine the next control to be focused",
            "parameters": {
              "type": {
                "name": "type",
                "type": "string",
                "description": "The type of the event that triggers this <code>leaveRow</code>"
              }
            },
            "methods": ["attachLeaveRow", "detachLeaveRow", "fireLeaveRow"]
          },
          {
            "name": "intervalSelect",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Fired if an interval was selected",
            "parameters": {
              "startDate": {
                "name": "startDate",
                "type": "object",
                "description": "Interval start date as JavaScript date object"
              },
              "endDate": {
                "name": "endDate",
                "type": "object",
                "description": "Interval end date as JavaScript date object"
              },
              "subInterval": {
                "name": "subInterval",
                "type": "boolean",
                "description": "If set, the selected interval is a subinterval"
              }
            },
            "methods": [
              "attachIntervalSelect",
              "detachIntervalSelect",
              "fireIntervalSelect"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new <code>CalendarRow</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "intervalSelect",
          "visibility": "public",
          "since": "1.38.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "startDate": {
                      "name": "startDate",
                      "type": "object",
                      "optional": false,
                      "description": "Interval start date as JavaScript date object"
                    },
                    "endDate": {
                      "name": "endDate",
                      "type": "object",
                      "optional": false,
                      "description": "Interval end date as JavaScript date object"
                    },
                    "subInterval": {
                      "name": "subInterval",
                      "type": "boolean",
                      "optional": false,
                      "description": "If set, the selected interval is a subinterval"
                    }
                  }
                }
              }
            }
          ],
          "description": "Fired if an interval was selected"
        },
        {
          "name": "leaveRow",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "type": {
                      "name": "type",
                      "type": "string",
                      "optional": false,
                      "description": "The type of the event that triggers this <code>leaveRow</code>"
                    }
                  }
                }
              }
            }
          ],
          "description": "The <code>CalendarRow</code> should be left while navigating. (Arrow up or arrow down.) The caller should determine the next control to be focused"
        },
        {
          "name": "select",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "appointment": {
                      "name": "appointment",
                      "type": "sap.ui.unified.CalendarAppointment",
                      "optional": false,
                      "description": "selected appointment"
                    },
                    "appointments": {
                      "name": "appointments",
                      "type": "sap.ui.unified.CalendarAppointment[]",
                      "optional": false,
                      "description": "selected appointments in case a group appointment is selected"
                    },
                    "multiSelect": {
                      "name": "multiSelect",
                      "type": "boolean",
                      "optional": false,
                      "description": "If set, the appointment was selected by multiple selection (e.g. shift + mouse click). So more than the current appointment could be selected."
                    },
                    "domRefId": {
                      "name": "domRefId",
                      "type": "string",
                      "optional": false,
                      "description": "Gives the ID of the DOM element of the clicked appointment"
                    }
                  }
                }
              }
            }
          ],
          "description": "Fired if an appointment was selected"
        },
        {
          "name": "startDateChange",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "<code>startDate</code> was changed while navigating in <code>CalendarRow</code>"
        }
      ],
      "methods": [
        {
          "name": "addAppointment",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oAppointment",
              "type": "sap.ui.unified.CalendarAppointment",
              "optional": false,
              "description": "The appointment to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some appointment to the aggregation {@link #getAppointments appointments}."
        },
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addIntervalHeader",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oIntervalHeader",
              "type": "sap.ui.unified.CalendarAppointment",
              "optional": false,
              "description": "The intervalHeader to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some intervalHeader to the aggregation {@link #getIntervalHeaders intervalHeaders}."
        },
        {
          "name": "attachIntervalSelect",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarRow</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:intervalSelect intervalSelect} event of this <code>sap.ui.unified.CalendarRow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.CalendarRow</code> itself.\n\nFired if an interval was selected"
        },
        {
          "name": "attachLeaveRow",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarRow</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:leaveRow leaveRow} event of this <code>sap.ui.unified.CalendarRow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.CalendarRow</code> itself.\n\nThe <code>CalendarRow</code> should be left while navigating. (Arrow up or arrow down.) The caller should determine the next control to be focused"
        },
        {
          "name": "attachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarRow</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:select select} event of this <code>sap.ui.unified.CalendarRow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.CalendarRow</code> itself.\n\nFired if an appointment was selected"
        },
        {
          "name": "attachStartDateChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarRow</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:startDateChange startDateChange} event of this <code>sap.ui.unified.CalendarRow</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.CalendarRow</code> itself.\n\n<code>startDate</code> was changed while navigating in <code>CalendarRow</code>"
        },
        {
          "name": "destroyAppointments",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the appointments in the aggregation {@link #getAppointments appointments}."
        },
        {
          "name": "destroyIntervalHeaders",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the intervalHeaders in the aggregation {@link #getIntervalHeaders intervalHeaders}."
        },
        {
          "name": "detachIntervalSelect",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:intervalSelect intervalSelect} event of this <code>sap.ui.unified.CalendarRow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachLeaveRow",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:leaveRow leaveRow} event of this <code>sap.ui.unified.CalendarRow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:select select} event of this <code>sap.ui.unified.CalendarRow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachStartDateChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:startDateChange startDateChange} event of this <code>sap.ui.unified.CalendarRow</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.CalendarRow with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireIntervalSelect",
          "visibility": "protected",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "startDate": {
                  "name": "startDate",
                  "type": "object",
                  "optional": true,
                  "description": "Interval start date as JavaScript date object"
                },
                "endDate": {
                  "name": "endDate",
                  "type": "object",
                  "optional": true,
                  "description": "Interval end date as JavaScript date object"
                },
                "subInterval": {
                  "name": "subInterval",
                  "type": "boolean",
                  "optional": true,
                  "description": "If set, the selected interval is a subinterval"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:intervalSelect intervalSelect} to attached listeners."
        },
        {
          "name": "fireLeaveRow",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "type": {
                  "name": "type",
                  "type": "string",
                  "optional": true,
                  "description": "The type of the event that triggers this <code>leaveRow</code>"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:leaveRow leaveRow} to attached listeners."
        },
        {
          "name": "fireSelect",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "appointment": {
                  "name": "appointment",
                  "type": "sap.ui.unified.CalendarAppointment",
                  "optional": true,
                  "description": "selected appointment"
                },
                "appointments": {
                  "name": "appointments",
                  "type": "sap.ui.unified.CalendarAppointment[]",
                  "optional": true,
                  "description": "selected appointments in case a group appointment is selected"
                },
                "multiSelect": {
                  "name": "multiSelect",
                  "type": "boolean",
                  "optional": true,
                  "description": "If set, the appointment was selected by multiple selection (e.g. shift + mouse click). So more than the current appointment could be selected."
                },
                "domRefId": {
                  "name": "domRefId",
                  "type": "string",
                  "optional": true,
                  "description": "Gives the ID of the DOM element of the clicked appointment"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:select select} to attached listeners."
        },
        {
          "name": "fireStartDateChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:startDateChange startDateChange} to attached listeners."
        },
        {
          "name": "focusAppointment",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "oAppointment",
              "type": "sap.ui.unified.CalendarAppointment",
              "optional": false,
              "description": "Appointment to be focused."
            }
          ],
          "description": "Focus the given <code>CalendarAppointment</code> in the <code>CalendarRow</code>."
        },
        {
          "name": "focusNearestAppointment",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDate",
              "type": "object",
              "optional": false,
              "description": "Javascript Date object."
            }
          ],
          "description": "Focus the <code>CalendarAppointment</code> in the <code>CalendarRow</code> that is nearest to the given date."
        },
        {
          "name": "getAppointments",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.CalendarAppointment[]" },
          "description": "Gets content of aggregation {@link #getAppointments appointments}.\n\nAppointments to be displayed in the row. Appointments outside the visible time frame are not rendered.\n\n<b>Note:</b> For performance reasons, only appointments in the visible time range or nearby should be assigned."
        },
        {
          "name": "getAppointmentsReducedHeight",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>appointmentsReducedHeight</code>"
          },
          "description": "Gets current value of property {@link #getAppointmentsReducedHeight appointmentsReducedHeight}.\n\nIf set the appointments without text (only title) are rendered with a smaller height.\n\n<b>Note:</b> On phone devices this property is ignored, appointments are always rendered in full height to allow touching.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getAppointmentsVisualization",
          "visibility": "public",
          "since": "1.40.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarAppointmentVisualization",
            "description": "Value of property <code>appointmentsVisualization</code>"
          },
          "description": "Gets current value of property {@link #getAppointmentsVisualization appointmentsVisualization}.\n\nDefines the visualization of the <code>CalendarAppoinment</code>\n\n<b>Note:</b> The real visualization depends on the used theme.\n\nDefault value is <code>Standard</code>."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getCheckResize",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>checkResize</code>"
          },
          "description": "Gets current value of property {@link #getCheckResize checkResize}.\n\nIf set, the <code>CalendarRow</code> checks for resize by itself.\n\nIf a lot of <code>CalendarRow</code> controls are used in one container control (like <code>PlanningCalendar</code>). the resize checks should be done only by this container control. Then the container control should call <code>handleResize</code> of the <code>CalendarRow</code> if a resize happens.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getFocusedAppointment",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarAppointment",
            "description": "Focused Appointment"
          },
          "description": "Returns the focused <code>CalendarAppointment</code> of the <code>CalendarRow</code>.\n\nThe focus must not really be on the <code>CalendarAppointment</code>, it have just to be the one that has the focus when the <code>CalendarRow</code> was focused last time."
        },
        {
          "name": "getGroupAppointmentsMode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.GroupAppointmentsMode",
            "description": "Value of property <code>groupAppointmentsMode</code>"
          },
          "description": "Gets current value of property {@link #getGroupAppointmentsMode groupAppointmentsMode}.\n\nDefines the mode in which the overlapping appointments are displayed.\n\n<b>Note:</b> This property takes effect, only if the <code>intervalType</code> of the current calendar view is set to <code>sap.ui.unified.CalendarIntervalType.Month</code>. On phone devices this property is ignored, and the default value is applied.\n\nDefault value is <code>Collapsed</code>."
        },
        {
          "name": "getHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>height</code>"
          },
          "description": "Gets current value of property {@link #getHeight height}.\n\nHeight of the row"
        },
        {
          "name": "getIntervalHeaders",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.CalendarAppointment[]" },
          "description": "Gets content of aggregation {@link #getIntervalHeaders intervalHeaders}.\n\nAppointments to be displayed in the top of the intervals. The <code>intervalHeaders</code> are used to visualize public holidays and similar things.\n\nAppointments outside the visible time frame are not rendered.\n\nThe <code>intervalHeaders</code> always fill whole intervals. If they are shorter than one interval, they are not displayed.\n\n<b>Note:</b> For performance reasons, only appointments in the visible time range or nearby should be assigned."
        },
        {
          "name": "getIntervals",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>intervals</code>"
          },
          "description": "Gets current value of property {@link #getIntervals intervals}.\n\nNumber of displayed intervals. The size of the intervals is defined with <code>intervalType</code>\n\nDefault value is <code>12</code>."
        },
        {
          "name": "getIntervalType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarIntervalType",
            "description": "Value of property <code>intervalType</code>"
          },
          "description": "Gets current value of property {@link #getIntervalType intervalType}.\n\nType of the intervals of the row. The default is one hour.\n\nDefault value is <code>Hour</code>."
        },
        {
          "name": "getLegend",
          "visibility": "public",
          "since": "1.40.0",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getLegend legend}, or <code>null</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.CalendarRow."
        },
        {
          "name": "getNonWorkingDays",
          "visibility": "public",
          "returnValue": {
            "type": "int[]",
            "description": "Value of property <code>nonWorkingDays</code>"
          },
          "description": "Gets current value of property {@link #getNonWorkingDays nonWorkingDays}.\n\nIf set, the provided weekdays are displayed as non-working days. Valid values inside the array are 0 to 6. (Other values will just be ignored.)\n\nIf not set, the weekend defined in the locale settings is displayed as non-working days.\n\n<b>Note:</b> The non working days are only visualized if <code>intervalType</code> is set to day."
        },
        {
          "name": "getNonWorkingHours",
          "visibility": "public",
          "returnValue": {
            "type": "int[]",
            "description": "Value of property <code>nonWorkingHours</code>"
          },
          "description": "Gets current value of property {@link #getNonWorkingHours nonWorkingHours}.\n\nIf set, the provided hours are displayed as non-working hours. Valid values inside the array are 0 to 23. (Other values will just be ignored.)\n\n<b>Note:</b> The non working hours are only visualized if <code>intervalType</code> is set to hour."
        },
        {
          "name": "getShowEmptyIntervalHeaders",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showEmptyIntervalHeaders</code>"
          },
          "description": "Gets current value of property {@link #getShowEmptyIntervalHeaders showEmptyIntervalHeaders}.\n\nIf set, interval headers are shown even if no <code>intervalHeaders</code> are assigned to the visible time frame.\n\nIf not set, no interval headers are shown if no <code>intervalHeaders</code> are assigned.\n\n<b>Note:</b> This property is only used if <code>showIntervalHeaders</code> is set to true.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowIntervalHeaders",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showIntervalHeaders</code>"
          },
          "description": "Gets current value of property {@link #getShowIntervalHeaders showIntervalHeaders}.\n\nIf set, interval headers are shown like specified in <code>showEmptyIntervalHeaders</code>.\n\nIf not set, no interval headers are shown even if <code>intervalHeaders</code> are assigned.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowSubIntervals",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showSubIntervals</code>"
          },
          "description": "Gets current value of property {@link #getShowSubIntervals showSubIntervals}.\n\nIf set, subintervals are shown.\n\nIf the interval type is <code>Hour</code>, quarter hours are shown.\n\nIf the interval type is <code>Day</code>, hours are shown.\n\nIf the interval type is <code>Month</code>, days are shown.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getStartDate",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>startDate</code>"
          },
          "description": "Gets current value of property {@link #getStartDate startDate}.\n\nStart date, as JavaScript Date object, of the row. As default, the current date is used."
        },
        {
          "name": "getUpdateCurrentTime",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>updateCurrentTime</code>"
          },
          "description": "Gets current value of property {@link #getUpdateCurrentTime updateCurrentTime}.\n\nIf set the <code>CalendarRow</code> triggers a periodic update to visualize the current time.\n\nIf a lot of <code>CalendarRow</code> controls are used in one container control (like <code>PlanningCalendar</code>) the periodic update should be triggered only by this container control. Then the container control should call <code>updateCurrentTimeVisualization</code> of the <code>CalendarRow</code> to update the visualization.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nWidth of the row"
        },
        {
          "name": "handleResize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "oEvent",
              "type": "jQuery.Event",
              "optional": false,
              "description": "The event object of the resize handler."
            }
          ],
          "description": "After a resize of the <code>CalendarRow</code>, some calculations for appointment sizes are needed.\n\nFor this, each <code>CalendarRow</code> can trigger the resize check for it's own DOM. But if multiple <code>CalendarRow</code>s are used in one container (e.g. <code>PlanningCalendar</code>), it is better if the container triggers the resize check once and then calls this function of each <code>CalendarRow</code>."
        },
        {
          "name": "indexOfAppointment",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oAppointment",
              "type": "sap.ui.unified.CalendarAppointment",
              "optional": false,
              "description": "The appointment whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.CalendarAppointment</code> in the aggregation {@link #getAppointments appointments}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfIntervalHeader",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oIntervalHeader",
              "type": "sap.ui.unified.CalendarAppointment",
              "optional": false,
              "description": "The intervalHeader whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.CalendarAppointment</code> in the aggregation {@link #getIntervalHeaders intervalHeaders}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertAppointment",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oAppointment",
              "type": "sap.ui.unified.CalendarAppointment",
              "optional": false,
              "description": "The appointment to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the appointment should be inserted at; for a negative value of <code>iIndex</code>, the appointment is inserted at position 0; for a value greater than the current size of the aggregation, the appointment is inserted at the last position"
            }
          ],
          "description": "Inserts a appointment into the aggregation {@link #getAppointments appointments}."
        },
        {
          "name": "insertIntervalHeader",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oIntervalHeader",
              "type": "sap.ui.unified.CalendarAppointment",
              "optional": false,
              "description": "The intervalHeader to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the intervalHeader should be inserted at; for a negative value of <code>iIndex</code>, the intervalHeader is inserted at position 0; for a value greater than the current size of the aggregation, the intervalHeader is inserted at the last position"
            }
          ],
          "description": "Inserts a intervalHeader into the aggregation {@link #getIntervalHeaders intervalHeaders}."
        },
        {
          "name": "removeAllAppointments",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarAppointment[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getAppointments appointments}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllIntervalHeaders",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarAppointment[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getIntervalHeaders intervalHeaders}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAppointment",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarAppointment",
            "description": "The removed appointment or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAppointment",
              "type": "int|string|sap.ui.unified.CalendarAppointment",
              "optional": false,
              "description": "The appointment to remove or its index or id"
            }
          ],
          "description": "Removes a appointment from the aggregation {@link #getAppointments appointments}."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeIntervalHeader",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarAppointment",
            "description": "The removed intervalHeader or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vIntervalHeader",
              "type": "int|string|sap.ui.unified.CalendarAppointment",
              "optional": false,
              "description": "The intervalHeader to remove or its index or id"
            }
          ],
          "description": "Removes a intervalHeader from the aggregation {@link #getIntervalHeaders intervalHeaders}."
        },
        {
          "name": "setAppointmentsReducedHeight",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bAppointmentsReducedHeight",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>appointmentsReducedHeight</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAppointmentsReducedHeight appointmentsReducedHeight}.\n\nIf set the appointments without text (only title) are rendered with a smaller height.\n\n<b>Note:</b> On phone devices this property is ignored, appointments are always rendered in full height to allow touching.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setAppointmentsVisualization",
          "visibility": "public",
          "since": "1.40.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAppointmentsVisualization",
              "type": "sap.ui.unified.CalendarAppointmentVisualization",
              "optional": false,
              "description": "New value for property <code>appointmentsVisualization</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAppointmentsVisualization appointmentsVisualization}.\n\nDefines the visualization of the <code>CalendarAppoinment</code>\n\n<b>Note:</b> The real visualization depends on the used theme.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Standard</code>."
        },
        {
          "name": "setCheckResize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bCheckResize",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>checkResize</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getCheckResize checkResize}.\n\nIf set, the <code>CalendarRow</code> checks for resize by itself.\n\nIf a lot of <code>CalendarRow</code> controls are used in one container control (like <code>PlanningCalendar</code>). the resize checks should be done only by this container control. Then the container control should call <code>handleResize</code> of the <code>CalendarRow</code> if a resize happens.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setGroupAppointmentsMode",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sGroupAppointmentsMode",
              "type": "sap.ui.unified.GroupAppointmentsMode",
              "optional": false,
              "description": "New value for property <code>groupAppointmentsMode</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getGroupAppointmentsMode groupAppointmentsMode}.\n\nDefines the mode in which the overlapping appointments are displayed.\n\n<b>Note:</b> This property takes effect, only if the <code>intervalType</code> of the current calendar view is set to <code>sap.ui.unified.CalendarIntervalType.Month</code>. On phone devices this property is ignored, and the default value is applied.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Collapsed</code>."
        },
        {
          "name": "setHeight",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sHeight",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>height</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeight height}.\n\nHeight of the row\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIntervals",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iIntervals",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>intervals</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIntervals intervals}.\n\nNumber of displayed intervals. The size of the intervals is defined with <code>intervalType</code>\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>12</code>."
        },
        {
          "name": "setIntervalType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIntervalType",
              "type": "sap.ui.unified.CalendarIntervalType",
              "optional": false,
              "description": "New value for property <code>intervalType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIntervalType intervalType}.\n\nType of the intervals of the row. The default is one hour.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Hour</code>."
        },
        {
          "name": "setLegend",
          "visibility": "public",
          "since": "1.40.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLegend",
              "type": "sap.ui.core.ID|sap.ui.unified.CalendarLegend",
              "optional": false,
              "description": "ID of an element which becomes the new target of this legend association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getLegend legend}."
        },
        {
          "name": "setNonWorkingDays",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sNonWorkingDays",
              "type": "int[]",
              "optional": false,
              "description": "New value for property <code>nonWorkingDays</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getNonWorkingDays nonWorkingDays}.\n\nIf set, the provided weekdays are displayed as non-working days. Valid values inside the array are 0 to 6. (Other values will just be ignored.)\n\nIf not set, the weekend defined in the locale settings is displayed as non-working days.\n\n<b>Note:</b> The non working days are only visualized if <code>intervalType</code> is set to day.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setNonWorkingHours",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sNonWorkingHours",
              "type": "int[]",
              "optional": false,
              "description": "New value for property <code>nonWorkingHours</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getNonWorkingHours nonWorkingHours}.\n\nIf set, the provided hours are displayed as non-working hours. Valid values inside the array are 0 to 23. (Other values will just be ignored.)\n\n<b>Note:</b> The non working hours are only visualized if <code>intervalType</code> is set to hour.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setShowEmptyIntervalHeaders",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowEmptyIntervalHeaders",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showEmptyIntervalHeaders</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowEmptyIntervalHeaders showEmptyIntervalHeaders}.\n\nIf set, interval headers are shown even if no <code>intervalHeaders</code> are assigned to the visible time frame.\n\nIf not set, no interval headers are shown if no <code>intervalHeaders</code> are assigned.\n\n<b>Note:</b> This property is only used if <code>showIntervalHeaders</code> is set to true.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowIntervalHeaders",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowIntervalHeaders",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showIntervalHeaders</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowIntervalHeaders showIntervalHeaders}.\n\nIf set, interval headers are shown like specified in <code>showEmptyIntervalHeaders</code>.\n\nIf not set, no interval headers are shown even if <code>intervalHeaders</code> are assigned.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowSubIntervals",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowSubIntervals",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showSubIntervals</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowSubIntervals showSubIntervals}.\n\nIf set, subintervals are shown.\n\nIf the interval type is <code>Hour</code>, quarter hours are shown.\n\nIf the interval type is <code>Day</code>, hours are shown.\n\nIf the interval type is <code>Month</code>, days are shown.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setStartDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oStartDate",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>startDate</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStartDate startDate}.\n\nStart date, as JavaScript Date object, of the row. As default, the current date is used.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setUpdateCurrentTime",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUpdateCurrentTime",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>updateCurrentTime</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUpdateCurrentTime updateCurrentTime}.\n\nIf set the <code>CalendarRow</code> triggers a periodic update to visualize the current time.\n\nIf a lot of <code>CalendarRow</code> controls are used in one container control (like <code>PlanningCalendar</code>) the periodic update should be triggered only by this container control. Then the container control should call <code>updateCurrentTimeVisualization</code> of the <code>CalendarRow</code> to update the visualization.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nWidth of the row\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "updateCurrentTimeVisualization",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarRow",
            "description": "<code>this</code> to allow method chaining"
          },
          "description": "If the current time is in the visible output of the <code>CalendarRow</code>, the indicator for the current time must be positioned.\n\nFor this, each <code>CalendarRow</code> can trigger a timer. But if multiple <code>CalendarRow</code>s are used in one container (e.G. <code>PlanningCalendar</code>), it is better if the container triggers the interval once and then calls this function of each <code>CalendarRow</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.CalendarTimeInterval",
      "basename": "CalendarTimeInterval",
      "resource": "sap/ui/unified/CalendarTimeInterval.js",
      "module": "sap/ui/unified/CalendarTimeInterval",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.32.0",
      "extends": "sap.ui.core.Control",
      "description": "Calendar with granularity of time items displayed in one line.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": null,
            "group": "Dimension",
            "visibility": "public",
            "description": "Width of the <code>CalendarTimeInterval</code>. The width of the single months depends on this width.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "startDate",
            "type": "object",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "Start date of the Interval as JavaScript Date object. The time interval corresponding to this Date and <code>items</code> and <code>intervalMinutes</code> will be the first time in the displayed row.",
            "methods": ["getStartDate", "setStartDate"]
          },
          {
            "name": "intervalSelection",
            "type": "boolean",
            "defaultValue": false,
            "group": "Behavior",
            "visibility": "public",
            "description": "If set, interval selection is allowed",
            "methods": ["getIntervalSelection", "setIntervalSelection"]
          },
          {
            "name": "singleSelection",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "If set, only a single date or interval, if <code>intervalSelection</code> is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.",
            "methods": ["getSingleSelection", "setSingleSelection"]
          },
          {
            "name": "items",
            "type": "int",
            "defaultValue": 12,
            "group": "Appearance",
            "visibility": "public",
            "description": "Number of time items displayed. Default is 12.\n\n<b>Note:</b> On phones, the maximum number of items displayed in the row is always 6.",
            "methods": ["getItems", "setItems"]
          },
          {
            "name": "intervalMinutes",
            "type": "int",
            "defaultValue": 60,
            "group": "Appearance",
            "visibility": "public",
            "description": "Size of on time interval in minutes, default is 60 minutes.\n\n<b>Note:</b> the start of the interval calculation is always on the corresponding date at 00:00.\n\nAn interval longer than 720 minutes is not allowed. Please use the <code>CalendarDateInterval</code> instead.\n\nA day must be divisible by this interval size. One interval must not include more than one day.",
            "methods": ["getIntervalMinutes", "setIntervalMinutes"]
          },
          {
            "name": "pickerPopup",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.34.0",
            "description": "If set, the day-, month- and yearPicker opens on a popup",
            "methods": ["getPickerPopup", "setPickerPopup"]
          },
          {
            "name": "minDate",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Minimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>minDate</code> is set to be after the <code>maxDate</code>, the <code>maxDate</code> is set to the end of the month of the <code>minDate</code>.",
            "methods": ["getMinDate", "setMinDate"]
          },
          {
            "name": "maxDate",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.38.0",
            "description": "Maximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>maxDate</code> is set to be before the <code>minDate</code>, the <code>minDate</code> is set to the begin of the month of the <code>maxDate</code>.",
            "methods": ["getMaxDate", "setMaxDate"]
          }
        ],
        "aggregations": [
          {
            "name": "selectedDates",
            "singularName": "selectedDate",
            "type": "sap.ui.unified.DateRange",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Date ranges for selected items of the <code>CalendarTimeInterval</code>.\n\nIf <code>singleSelection</code> is set, only the first entry is used.",
            "methods": [
              "getSelectedDates",
              "destroySelectedDates",
              "insertSelectedDate",
              "addSelectedDate",
              "removeSelectedDate",
              "indexOfSelectedDate",
              "removeAllSelectedDates"
            ]
          },
          {
            "name": "specialDates",
            "singularName": "specialDate",
            "type": "sap.ui.unified.DateTypeRange",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Date ranges with type to visualize special items in the <code>CalendarTimeInterval</code>. If one interval is assigned to more than one type, only the first one will be used.",
            "methods": [
              "getSpecialDates",
              "destroySpecialDates",
              "insertSpecialDate",
              "addSpecialDate",
              "removeSpecialDate",
              "indexOfSpecialDate",
              "removeAllSpecialDates"
            ]
          },
          {
            "name": "header",
            "singularName": "header",
            "type": "sap.ui.unified.calendar.Header",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "Hidden, for internal use only.",
            "methods": ["getHeader", "destroyHeader", "setHeader"]
          },
          {
            "name": "timesRow",
            "singularName": "timesRow",
            "type": "sap.ui.unified.calendar.TimesRow",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": ["getTimesRow", "destroyTimesRow", "setTimesRow"]
          },
          {
            "name": "datesRow",
            "singularName": "datesRow",
            "type": "sap.ui.unified.calendar.Month",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": ["getDatesRow", "destroyDatesRow", "setDatesRow"]
          },
          {
            "name": "monthPicker",
            "singularName": "monthPicker",
            "type": "sap.ui.unified.calendar.MonthPicker",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": [
              "getMonthPicker",
              "destroyMonthPicker",
              "setMonthPicker"
            ]
          },
          {
            "name": "yearPicker",
            "singularName": "yearPicker",
            "type": "sap.ui.unified.calendar.YearPicker",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": ["getYearPicker", "destroyYearPicker", "setYearPicker"]
          },
          {
            "name": "calendarPicker",
            "singularName": "calendarPicker",
            "type": "sap.ui.unified.Calendar",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": [
              "getCalendarPicker",
              "destroyCalendarPicker",
              "setCalendarPicker"
            ]
          }
        ],
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          },
          {
            "name": "legend",
            "singularName": "legend",
            "type": "sap.ui.unified.CalendarLegend",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.38.5",
            "description": "Association to the <code>CalendarLegend</code> explaining the colors of the <code>specialDates</code>.\n\n<b>Note</b> The legend does not have to be rendered but must exist, and all required types must be assigned.",
            "methods": ["getLegend", "setLegend"]
          }
        ],
        "events": [
          {
            "name": "select",
            "visibility": "public",
            "description": "Time selection changed",
            "methods": ["attachSelect", "detachSelect", "fireSelect"]
          },
          {
            "name": "cancel",
            "visibility": "public",
            "description": "Time selection was cancelled",
            "methods": ["attachCancel", "detachCancel", "fireCancel"]
          },
          {
            "name": "startDateChange",
            "visibility": "public",
            "since": "1.34.0",
            "description": "<code>startDate</code> was changed while navigation in <code>CalendarTimeInterval</code>",
            "methods": [
              "attachStartDateChange",
              "detachStartDateChange",
              "fireStartDateChange"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new <code>CalendarTimeInterval</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "cancel",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Time selection was cancelled"
        },
        {
          "name": "select",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Time selection changed"
        },
        {
          "name": "startDateChange",
          "visibility": "public",
          "since": "1.34.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "<code>startDate</code> was changed while navigation in <code>CalendarTimeInterval</code>"
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some selectedDate to the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "addSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSpecialDate",
              "type": "sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some specialDate to the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "attachCancel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarTimeInterval</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:cancel cancel} event of this <code>sap.ui.unified.CalendarTimeInterval</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.CalendarTimeInterval</code> itself.\n\nTime selection was cancelled"
        },
        {
          "name": "attachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarTimeInterval</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:select select} event of this <code>sap.ui.unified.CalendarTimeInterval</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.CalendarTimeInterval</code> itself.\n\nTime selection changed"
        },
        {
          "name": "attachStartDateChange",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.CalendarTimeInterval</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:startDateChange startDateChange} event of this <code>sap.ui.unified.CalendarTimeInterval</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.CalendarTimeInterval</code> itself.\n\n<code>startDate</code> was changed while navigation in <code>CalendarTimeInterval</code>"
        },
        {
          "name": "destroySelectedDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the selectedDates in the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "destroySpecialDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the specialDates in the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "detachCancel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:cancel cancel} event of this <code>sap.ui.unified.CalendarTimeInterval</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:select select} event of this <code>sap.ui.unified.CalendarTimeInterval</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachStartDateChange",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:startDateChange startDateChange} event of this <code>sap.ui.unified.CalendarTimeInterval</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "displayDate",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDate",
              "type": "object",
              "optional": false,
              "description": "JavaScript date object for displayed item."
            }
          ],
          "description": "Displays an item in the <code>CalendarTimeInterval</code> but doesn't set the focus."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.CalendarTimeInterval with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireCancel",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:cancel cancel} to attached listeners."
        },
        {
          "name": "fireSelect",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:select select} to attached listeners."
        },
        {
          "name": "fireStartDateChange",
          "visibility": "protected",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:startDateChange startDateChange} to attached listeners."
        },
        {
          "name": "focusDate",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "sap.ui.unified.Calendar",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "oDate",
              "type": "object",
              "optional": false,
              "description": "JavaScript date object for focused item."
            }
          ],
          "description": "Sets the focused item of the <code>CalendarTimeInterval</code>."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getIntervalMinutes",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>intervalMinutes</code>"
          },
          "description": "Gets current value of property {@link #getIntervalMinutes intervalMinutes}.\n\nSize of on time interval in minutes, default is 60 minutes.\n\n<b>Note:</b> the start of the interval calculation is always on the corresponding date at 00:00.\n\nAn interval longer than 720 minutes is not allowed. Please use the <code>CalendarDateInterval</code> instead.\n\nA day must be divisible by this interval size. One interval must not include more than one day.\n\nDefault value is <code>60</code>."
        },
        {
          "name": "getIntervalSelection",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>intervalSelection</code>"
          },
          "description": "Gets current value of property {@link #getIntervalSelection intervalSelection}.\n\nIf set, interval selection is allowed\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getItems",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>items</code>"
          },
          "description": "Gets current value of property {@link #getItems items}.\n\nNumber of time items displayed. Default is 12.\n\n<b>Note:</b> On phones, the maximum number of items displayed in the row is always 6.\n\nDefault value is <code>12</code>."
        },
        {
          "name": "getLegend",
          "visibility": "public",
          "since": "1.38.5",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getLegend legend}, or <code>null</code>."
        },
        {
          "name": "getMaxDate",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>maxDate</code>"
          },
          "description": "Gets current value of property {@link #getMaxDate maxDate}.\n\nMaximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>maxDate</code> is set to be before the <code>minDate</code>, the <code>minDate</code> is set to the begin of the month of the <code>maxDate</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.CalendarTimeInterval."
        },
        {
          "name": "getMinDate",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>minDate</code>"
          },
          "description": "Gets current value of property {@link #getMinDate minDate}.\n\nMinimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>minDate</code> is set to be after the <code>maxDate</code>, the <code>maxDate</code> is set to the end of the month of the <code>minDate</code>."
        },
        {
          "name": "getPickerPopup",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>pickerPopup</code>"
          },
          "description": "Gets current value of property {@link #getPickerPopup pickerPopup}.\n\nIf set, the day-, month- and yearPicker opens on a popup\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getSelectedDates",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.DateRange[]" },
          "description": "Gets content of aggregation {@link #getSelectedDates selectedDates}.\n\nDate ranges for selected items of the <code>CalendarTimeInterval</code>.\n\nIf <code>singleSelection</code> is set, only the first entry is used."
        },
        {
          "name": "getSingleSelection",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>singleSelection</code>"
          },
          "description": "Gets current value of property {@link #getSingleSelection singleSelection}.\n\nIf set, only a single date or interval, if <code>intervalSelection</code> is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getSpecialDates",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.DateTypeRange[]" },
          "description": "Gets content of aggregation {@link #getSpecialDates specialDates}.\n\nDate ranges with type to visualize special items in the <code>CalendarTimeInterval</code>. If one interval is assigned to more than one type, only the first one will be used."
        },
        {
          "name": "getStartDate",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>startDate</code>"
          },
          "description": "Gets current value of property {@link #getStartDate startDate}.\n\nStart date of the Interval as JavaScript Date object. The time interval corresponding to this Date and <code>items</code> and <code>intervalMinutes</code> will be the first time in the displayed row."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nWidth of the <code>CalendarTimeInterval</code>. The width of the single months depends on this width."
        },
        {
          "name": "indexOfSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.DateRange</code> in the aggregation {@link #getSelectedDates selectedDates}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSpecialDate",
              "type": "sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.DateTypeRange</code> in the aggregation {@link #getSpecialDates specialDates}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSelectedDate",
              "type": "sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the selectedDate should be inserted at; for a negative value of <code>iIndex</code>, the selectedDate is inserted at position 0; for a value greater than the current size of the aggregation, the selectedDate is inserted at the last position"
            }
          ],
          "description": "Inserts a selectedDate into the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "insertSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSpecialDate",
              "type": "sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the specialDate should be inserted at; for a negative value of <code>iIndex</code>, the specialDate is inserted at position 0; for a value greater than the current size of the aggregation, the specialDate is inserted at the last position"
            }
          ],
          "description": "Inserts a specialDate into the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllSelectedDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateRange[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSelectedDates selectedDates}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllSpecialDates",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateTypeRange[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSpecialDates specialDates}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeSelectedDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateRange",
            "description": "The removed selectedDate or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSelectedDate",
              "type": "int|string|sap.ui.unified.DateRange",
              "optional": false,
              "description": "The selectedDate to remove or its index or id"
            }
          ],
          "description": "Removes a selectedDate from the aggregation {@link #getSelectedDates selectedDates}."
        },
        {
          "name": "removeSpecialDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateTypeRange",
            "description": "The removed specialDate or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSpecialDate",
              "type": "int|string|sap.ui.unified.DateTypeRange",
              "optional": false,
              "description": "The specialDate to remove or its index or id"
            }
          ],
          "description": "Removes a specialDate from the aggregation {@link #getSpecialDates specialDates}."
        },
        {
          "name": "setIntervalMinutes",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iIntervalMinutes",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>intervalMinutes</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIntervalMinutes intervalMinutes}.\n\nSize of on time interval in minutes, default is 60 minutes.\n\n<b>Note:</b> the start of the interval calculation is always on the corresponding date at 00:00.\n\nAn interval longer than 720 minutes is not allowed. Please use the <code>CalendarDateInterval</code> instead.\n\nA day must be divisible by this interval size. One interval must not include more than one day.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>60</code>."
        },
        {
          "name": "setIntervalSelection",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIntervalSelection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>intervalSelection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIntervalSelection intervalSelection}.\n\nIf set, interval selection is allowed\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iItems",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>items</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getItems items}.\n\nNumber of time items displayed. Default is 12.\n\n<b>Note:</b> On phones, the maximum number of items displayed in the row is always 6.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>12</code>."
        },
        {
          "name": "setLegend",
          "visibility": "public",
          "since": "1.38.5",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oLegend",
              "type": "sap.ui.core.ID|sap.ui.unified.CalendarLegend",
              "optional": false,
              "description": "ID of an element which becomes the new target of this legend association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getLegend legend}."
        },
        {
          "name": "setMaxDate",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oMaxDate",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>maxDate</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaxDate maxDate}.\n\nMaximum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>maxDate</code> is set to be before the <code>minDate</code>, the <code>minDate</code> is set to the begin of the month of the <code>maxDate</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMinDate",
          "visibility": "public",
          "since": "1.38.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oMinDate",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>minDate</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMinDate minDate}.\n\nMinimum date that can be shown and selected in the Calendar. This must be a JavaScript date object.\n\n<b>Note:</b> If the <code>minDate</code> is set to be after the <code>maxDate</code>, the <code>maxDate</code> is set to the end of the month of the <code>minDate</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setPickerPopup",
          "visibility": "public",
          "since": "1.34.0",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bPickerPopup",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>pickerPopup</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPickerPopup pickerPopup}.\n\nIf set, the day-, month- and yearPicker opens on a popup\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setSingleSelection",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSingleSelection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>singleSelection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSingleSelection singleSelection}.\n\nIf set, only a single date or interval, if <code>intervalSelection</code> is enabled, can be selected\n\n<b>Note:</b> Selection of multiple intervals is not supported in the current version.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setStartDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oStartDate",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>startDate</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStartDate startDate}.\n\nStart date of the Interval as JavaScript Date object. The time interval corresponding to this Date and <code>items</code> and <code>intervalMinutes</code> will be the first time in the displayed row.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarTimeInterval",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nWidth of the <code>CalendarTimeInterval</code>. The width of the single months depends on this width.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.ColorPicker",
      "basename": "ColorPicker",
      "resource": "sap/ui/unified/ColorPicker.js",
      "module": "sap/ui/unified/ColorPicker",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.48.0",
      "extends": "sap.ui.core.Control",
      "description": "Enables the user to select a color. The color can be defined using HEX, RGB, or HSV values or a CSS color name.\n\n<b>Note:</b> Keep in mind that this control needs either <code>sap.m</code> or <code>sap.ui.commons</code> library to be loaded in order to work as it depends on controls available in one or the other library.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "colorString",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.48.0",
            "description": "Determines the input parameter that can be a string of type HEX, RGB, HSV, or a CSS color name: <ul> <li>HEX - #FFFFFF</li> <li>RGB - rgb(255,255,255)</li> <li>HSV - hsv(360,100,100)</li> <li>CSS - red</li> </ul> <b>Note:</b> The output parameter is an RGB string of the current color.",
            "methods": ["getColorString", "setColorString"]
          },
          {
            "name": "mode",
            "type": "sap.ui.unified.ColorPickerMode",
            "defaultValue": "HSV",
            "group": "Appearance",
            "visibility": "public",
            "since": "1.48.0",
            "description": "Determines the color representation mode the ColorPicker works with - Hue, Saturation, and Value (HSV) or Hue, Saturation, and Lightness (HSL).\n\n<b>Note:</b> The <code>ColorPickerMode.HSV</code> is set by default. For color composing with alpha values, please set the mode to <code>ColorPickerMode.HSL</code>",
            "methods": ["getMode", "setMode"]
          },
          {
            "name": "displayMode",
            "type": "sap.ui.unified.ColorPickerDisplayMode",
            "defaultValue": "Default",
            "group": "Appearance",
            "visibility": "public",
            "since": "1.58",
            "description": "Determines the display mode of the <code>ColorPicker</code> among three types - Default, Large and Simplified",
            "methods": ["getDisplayMode", "setDisplayMode"]
          }
        ],
        "aggregations": [
          {
            "name": "_grid",
            "singularName": "_grid",
            "type": "sap.ui.layout.Grid",
            "cardinality": "0..1",
            "visibility": "hidden",
            "since": "1.48.0",
            "description": "Holds the control layout.",
            "methods": ["get_grid", "destroy_grid", "set_grid"]
          },
          {
            "name": "_invisibleTexts",
            "singularName": "_invisibleText",
            "type": "sap.ui.core.InvisibleText",
            "cardinality": "0..n",
            "visibility": "hidden",
            "since": "1.48.0",
            "description": "Holds the control invisible texts.",
            "methods": [
              "get_invisibleTexts",
              "destroy_invisibleTexts",
              "insert_invisibleText",
              "add_invisibleText",
              "remove_invisibleText",
              "indexOf_invisibleText",
              "removeAll_invisibleTexts"
            ]
          },
          {
            "name": "_oCPBox",
            "singularName": "_oCPBox",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": ["get_oCPBox", "destroy_oCPBox", "set_oCPBox"]
          },
          {
            "name": "_oSlider",
            "singularName": "_oSlider",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": ["get_oSlider", "destroy_oSlider", "set_oSlider"]
          },
          {
            "name": "_oAlphaSlider",
            "singularName": "_oAlphaSlider",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": [
              "get_oAlphaSlider",
              "destroy_oAlphaSlider",
              "set_oAlphaSlider"
            ]
          },
          {
            "name": "_oHexField",
            "singularName": "_oHexField",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": ["get_oHexField", "destroy_oHexField", "set_oHexField"]
          },
          {
            "name": "_oRedField",
            "singularName": "_oRedField",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": ["get_oRedField", "destroy_oRedField", "set_oRedField"]
          },
          {
            "name": "_oGreenField",
            "singularName": "_oGreenField",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": [
              "get_oGreenField",
              "destroy_oGreenField",
              "set_oGreenField"
            ]
          },
          {
            "name": "_oBlueField",
            "singularName": "_oBlueField",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": [
              "get_oBlueField",
              "destroy_oBlueField",
              "set_oBlueField"
            ]
          },
          {
            "name": "_oHueField",
            "singularName": "_oHueField",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": ["get_oHueField", "destroy_oHueField", "set_oHueField"]
          },
          {
            "name": "_oSatField",
            "singularName": "_oSatField",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": ["get_oSatField", "destroy_oSatField", "set_oSatField"]
          },
          {
            "name": "_oLitField",
            "singularName": "_oLitField",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": ["get_oLitField", "destroy_oLitField", "set_oLitField"]
          },
          {
            "name": "_oValField",
            "singularName": "_oValField",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": ["get_oValField", "destroy_oValField", "set_oValField"]
          },
          {
            "name": "_oAlphaField",
            "singularName": "_oAlphaField",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": [
              "get_oAlphaField",
              "destroy_oAlphaField",
              "set_oAlphaField"
            ]
          },
          {
            "name": "_oAlphaField2",
            "singularName": "_oAlphaField2",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": [
              "get_oAlphaField2",
              "destroy_oAlphaField2",
              "set_oAlphaField2"
            ]
          },
          {
            "name": "_oRGBorHSLRBUnifiedGroup",
            "singularName": "_oRGBorHSLRBUnifiedGroup",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": [
              "get_oRGBorHSLRBUnifiedGroup",
              "destroy_oRGBorHSLRBUnifiedGroup",
              "set_oRGBorHSLRBUnifiedGroup"
            ]
          },
          {
            "name": "_oButton",
            "singularName": "_oButton",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "hidden",
            "methods": ["get_oButton", "destroy_oButton", "set_oButton"]
          }
        ],
        "events": [
          {
            "name": "change",
            "visibility": "public",
            "since": "1.48.0",
            "description": "Fired when the value is changed by user action.\n\n<b>Note:</b> When the user action is mouse dragging, the <code>change</code> event fires on the mouseup event.",
            "parameters": {
              "r": {
                "name": "r",
                "type": "int",
                "description": "Parameter containing the RED value (0-255)."
              },
              "g": {
                "name": "g",
                "type": "int",
                "description": "Parameter containing the GREEN value (0-255)."
              },
              "b": {
                "name": "b",
                "type": "int",
                "description": "Parameter containing the BLUE value (0-255)."
              },
              "h": {
                "name": "h",
                "type": "int",
                "description": "Parameter containing the HUE value (0-360)."
              },
              "s": {
                "name": "s",
                "type": "int",
                "description": "Parameter containing the SATURATION value (0-100)."
              },
              "v": {
                "name": "v",
                "type": "int",
                "description": "Parameter containing the VALUE value (0-100)."
              },
              "l": {
                "name": "l",
                "type": "int",
                "description": "Parameter containing the LIGHTNESS value (0-100)."
              },
              "hex": {
                "name": "hex",
                "type": "string",
                "description": "Parameter containing the Hexadecimal string (#FFFFFF)."
              },
              "alpha": {
                "name": "alpha",
                "type": "string",
                "description": "Parameter containing the alpha value (transparency)."
              }
            },
            "methods": ["attachChange", "detachChange", "fireChange"]
          },
          {
            "name": "liveChange",
            "visibility": "public",
            "since": "1.48.0",
            "description": "Fired when the value is changed during the mouse move.\n\n<b>Note:</b> When the user action is mouse move, the <code>liveChange</code> event is fired during the mousedown event.",
            "parameters": {
              "r": {
                "name": "r",
                "type": "int",
                "description": "Parameter containing the RED value (0-255)."
              },
              "g": {
                "name": "g",
                "type": "int",
                "description": "Parameter containing the GREEN value (0-255)."
              },
              "b": {
                "name": "b",
                "type": "int",
                "description": "Parameter containing the BLUE value (0-255)."
              },
              "h": {
                "name": "h",
                "type": "int",
                "description": "Parameter containing the HUE value (0-360)."
              },
              "s": {
                "name": "s",
                "type": "int",
                "description": "Parameter containing the SATURATION value (0-100)."
              },
              "v": {
                "name": "v",
                "type": "int",
                "description": "Parameter containing the VALUE value (0-100)."
              },
              "l": {
                "name": "l",
                "type": "int",
                "description": "Parameter containing the LIGHTNESS value (0-100)."
              },
              "hex": {
                "name": "hex",
                "type": "string",
                "description": "Parameter containing the Hexadecimal string (#FFFFFF)."
              },
              "alpha": {
                "name": "alpha",
                "type": "string",
                "description": "Parameter containing the alpha value (transparency)."
              }
            },
            "methods": [
              "attachLiveChange",
              "detachLiveChange",
              "fireLiveChange"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new <code>ColorPicker</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "change",
          "visibility": "public",
          "since": "1.48.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "r": {
                      "name": "r",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the RED value (0-255)."
                    },
                    "g": {
                      "name": "g",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the GREEN value (0-255)."
                    },
                    "b": {
                      "name": "b",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the BLUE value (0-255)."
                    },
                    "h": {
                      "name": "h",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the HUE value (0-360)."
                    },
                    "s": {
                      "name": "s",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the SATURATION value (0-100)."
                    },
                    "v": {
                      "name": "v",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the VALUE value (0-100)."
                    },
                    "l": {
                      "name": "l",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the LIGHTNESS value (0-100)."
                    },
                    "hex": {
                      "name": "hex",
                      "type": "string",
                      "optional": false,
                      "description": "Parameter containing the Hexadecimal string (#FFFFFF)."
                    },
                    "alpha": {
                      "name": "alpha",
                      "type": "string",
                      "optional": false,
                      "description": "Parameter containing the alpha value (transparency)."
                    }
                  }
                }
              }
            }
          ],
          "description": "Fired when the value is changed by user action.\n\n<b>Note:</b> When the user action is mouse dragging, the <code>change</code> event fires on the mouseup event."
        },
        {
          "name": "liveChange",
          "visibility": "public",
          "since": "1.48.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "r": {
                      "name": "r",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the RED value (0-255)."
                    },
                    "g": {
                      "name": "g",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the GREEN value (0-255)."
                    },
                    "b": {
                      "name": "b",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the BLUE value (0-255)."
                    },
                    "h": {
                      "name": "h",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the HUE value (0-360)."
                    },
                    "s": {
                      "name": "s",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the SATURATION value (0-100)."
                    },
                    "v": {
                      "name": "v",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the VALUE value (0-100)."
                    },
                    "l": {
                      "name": "l",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the LIGHTNESS value (0-100)."
                    },
                    "hex": {
                      "name": "hex",
                      "type": "string",
                      "optional": false,
                      "description": "Parameter containing the Hexadecimal string (#FFFFFF)."
                    },
                    "alpha": {
                      "name": "alpha",
                      "type": "string",
                      "optional": false,
                      "description": "Parameter containing the alpha value (transparency)."
                    }
                  }
                }
              }
            }
          ],
          "description": "Fired when the value is changed during the mouse move.\n\n<b>Note:</b> When the user action is mouse move, the <code>liveChange</code> event is fired during the mousedown event."
        }
      ],
      "methods": [
        {
          "name": "attachChange",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.unified.ColorPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.ColorPicker</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:change change} event of this <code>sap.ui.unified.ColorPicker</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.ColorPicker</code> itself.\n\nFired when the value is changed by user action.\n\n<b>Note:</b> When the user action is mouse dragging, the <code>change</code> event fires on the mouseup event."
        },
        {
          "name": "attachLiveChange",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.unified.ColorPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.ColorPicker</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:liveChange liveChange} event of this <code>sap.ui.unified.ColorPicker</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.ColorPicker</code> itself.\n\nFired when the value is changed during the mouse move.\n\n<b>Note:</b> When the user action is mouse move, the <code>liveChange</code> event is fired during the mousedown event."
        },
        {
          "name": "detachChange",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.unified.ColorPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:change change} event of this <code>sap.ui.unified.ColorPicker</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachLiveChange",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.unified.ColorPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:liveChange liveChange} event of this <code>sap.ui.unified.ColorPicker</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.ColorPicker with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireChange",
          "visibility": "protected",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.unified.ColorPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "r": {
                  "name": "r",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the RED value (0-255)."
                },
                "g": {
                  "name": "g",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the GREEN value (0-255)."
                },
                "b": {
                  "name": "b",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the BLUE value (0-255)."
                },
                "h": {
                  "name": "h",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the HUE value (0-360)."
                },
                "s": {
                  "name": "s",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the SATURATION value (0-100)."
                },
                "v": {
                  "name": "v",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the VALUE value (0-100)."
                },
                "l": {
                  "name": "l",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the LIGHTNESS value (0-100)."
                },
                "hex": {
                  "name": "hex",
                  "type": "string",
                  "optional": true,
                  "description": "Parameter containing the Hexadecimal string (#FFFFFF)."
                },
                "alpha": {
                  "name": "alpha",
                  "type": "string",
                  "optional": true,
                  "description": "Parameter containing the alpha value (transparency)."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:change change} to attached listeners."
        },
        {
          "name": "fireLiveChange",
          "visibility": "protected",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.unified.ColorPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "r": {
                  "name": "r",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the RED value (0-255)."
                },
                "g": {
                  "name": "g",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the GREEN value (0-255)."
                },
                "b": {
                  "name": "b",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the BLUE value (0-255)."
                },
                "h": {
                  "name": "h",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the HUE value (0-360)."
                },
                "s": {
                  "name": "s",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the SATURATION value (0-100)."
                },
                "v": {
                  "name": "v",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the VALUE value (0-100)."
                },
                "l": {
                  "name": "l",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the LIGHTNESS value (0-100)."
                },
                "hex": {
                  "name": "hex",
                  "type": "string",
                  "optional": true,
                  "description": "Parameter containing the Hexadecimal string (#FFFFFF)."
                },
                "alpha": {
                  "name": "alpha",
                  "type": "string",
                  "optional": true,
                  "description": "Parameter containing the alpha value (transparency)."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:liveChange liveChange} to attached listeners."
        },
        {
          "name": "getColorString",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>colorString</code>"
          },
          "description": "Gets current value of property {@link #getColorString colorString}.\n\nDetermines the input parameter that can be a string of type HEX, RGB, HSV, or a CSS color name: <ul> <li>HEX - #FFFFFF</li> <li>RGB - rgb(255,255,255)</li> <li>HSV - hsv(360,100,100)</li> <li>CSS - red</li> </ul> <b>Note:</b> The output parameter is an RGB string of the current color."
        },
        {
          "name": "getDisplayMode",
          "visibility": "public",
          "since": "1.58",
          "returnValue": {
            "type": "sap.ui.unified.ColorPickerDisplayMode",
            "description": "Value of property <code>displayMode</code>"
          },
          "description": "Gets current value of property {@link #getDisplayMode displayMode}.\n\nDetermines the display mode of the <code>ColorPicker</code> among three types - Default, Large and Simplified\n\nDefault value is <code>Default</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.ColorPicker."
        },
        {
          "name": "getMode",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.unified.ColorPickerMode",
            "description": "Value of property <code>mode</code>"
          },
          "description": "Gets current value of property {@link #getMode mode}.\n\nDetermines the color representation mode the ColorPicker works with - Hue, Saturation, and Value (HSV) or Hue, Saturation, and Lightness (HSL).\n\n<b>Note:</b> The <code>ColorPickerMode.HSV</code> is set by default. For color composing with alpha values, please set the mode to <code>ColorPickerMode.HSL</code>\n\nDefault value is <code>HSV</code>."
        },
        {
          "name": "getRGB",
          "visibility": "public",
          "since": "1.48.0",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "object",
            "description": "Containing current RGB values"
          },
          "description": "Gets current RGB values."
        },
        {
          "name": "isColor",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "boolean",
            "description": "If the passed string is a valid CSS color string"
          },
          "parameters": [
            {
              "name": "sColorString",
              "type": "string",
              "optional": false,
              "description": "CSS color string to be validated"
            }
          ],
          "description": "Checks the validity of the CSS color string."
        },
        {
          "name": "setColorString",
          "visibility": "public",
          "since": "1.48.0",
          "returnValue": {
            "type": "sap.ui.unified.ColorPicker",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColorString",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>colorString</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColorString colorString}.\n\nDetermines the input parameter that can be a string of type HEX, RGB, HSV, or a CSS color name: <ul> <li>HEX - #FFFFFF</li> <li>RGB - rgb(255,255,255)</li> <li>HSV - hsv(360,100,100)</li> <li>CSS - red</li> </ul> <b>Note:</b> The output parameter is an RGB string of the current color.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setDisplayMode",
          "visibility": "public",
          "parameters": [
            {
              "name": "sDisplayMode",
              "type": "sap.ui.unified.ColorPickerDisplayMode",
              "optional": false,
              "description": "control displayMode enum"
            }
          ],
          "description": "Setter for <code>displayMode</code> property."
        },
        {
          "name": "setMode",
          "visibility": "public",
          "parameters": [
            {
              "name": "sMode",
              "type": "sap.ui.unified.ColorPickerMode",
              "optional": false,
              "description": "control mode enum"
            },
            {
              "name": "bSuppressInvalidate",
              "type": "boolean",
              "optional": false,
              "description": "should control invalidation be suppressed"
            }
          ],
          "description": "Setter for <code>mode</code> property."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.unified.ColorPickerDisplayMode",
      "basename": "ColorPickerDisplayMode",
      "resource": "sap/ui/unified/ColorPickerDisplayMode.js",
      "module": "sap/ui/unified/ColorPickerDisplayMode",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.58.0",
      "description": "Types of a color picker display mode",
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "enum" },
      "properties": [
        {
          "name": "Default",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Default display mode."
        },
        {
          "name": "Large",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Large display mode."
        },
        {
          "name": "Simplified",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Simplified display mode."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.unified.ColorPickerMode",
      "basename": "ColorPickerMode",
      "resource": "sap/ui/unified/library.js",
      "module": "sap/ui/unified/library",
      "export": "ColorPickerMode",
      "static": true,
      "visibility": "public",
      "description": "different styles for a ColorPicker.",
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "enum" },
      "properties": [
        {
          "name": "HSL",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Color picker works with HSL values."
        },
        {
          "name": "HSV",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Color picker works with HSV values."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.ColorPickerPopover",
      "basename": "ColorPickerPopover",
      "resource": "sap/ui/unified/ColorPickerPopover.js",
      "module": "sap/ui/unified/ColorPickerPopover",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.60",
      "extends": "sap.ui.core.Control",
      "description": "A thin wrapper over {@link sap.ui.unified.ColorPicker} allowing the latter to be used in a popover.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "colorString",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.60.0",
            "description": "Determines the input parameter that can be a string of type HEX, RGB, HSV, or a CSS color name: <ul> <li>HEX - #FFFFFF</li> <li>RGB - rgb(255,255,255)</li> <li>HSV - hsv(360,100,100)</li> <li>CSS - red</li> </ul> <b>Note:</b> The output parameter is an RGB string of the current color.",
            "methods": ["getColorString", "setColorString"]
          },
          {
            "name": "mode",
            "type": "sap.ui.unified.ColorPickerMode",
            "defaultValue": "HSV",
            "group": "Appearance",
            "visibility": "public",
            "since": "1.60.0",
            "description": "Determines the color mode of the <code>ColorPicker</code>.",
            "methods": ["getMode", "setMode"]
          },
          {
            "name": "displayMode",
            "type": "sap.ui.unified.ColorPickerDisplayMode",
            "defaultValue": "Default",
            "group": "Appearance",
            "visibility": "public",
            "since": "1.60.0",
            "description": "Determines the display mode of the <code>ColorPicker</code> among three types - Default, Large and Simplified",
            "methods": ["getDisplayMode", "setDisplayMode"]
          }
        ],
        "events": [
          {
            "name": "change",
            "visibility": "public",
            "since": "1.60.0",
            "description": "Fired when the submit button of the popover is clicked.",
            "parameters": {
              "r": {
                "name": "r",
                "type": "int",
                "description": "Parameter containing the RED value (0-255)."
              },
              "g": {
                "name": "g",
                "type": "int",
                "description": "Parameter containing the GREEN value (0-255)."
              },
              "b": {
                "name": "b",
                "type": "int",
                "description": "Parameter containing the BLUE value (0-255)."
              },
              "h": {
                "name": "h",
                "type": "int",
                "description": "Parameter containing the HUE value (0-360)."
              },
              "s": {
                "name": "s",
                "type": "int",
                "description": "Parameter containing the SATURATION value (0-100)."
              },
              "v": {
                "name": "v",
                "type": "int",
                "description": "Parameter containing the VALUE value (0-100)."
              },
              "l": {
                "name": "l",
                "type": "int",
                "description": "Parameter containing the LIGHTNESS value (0-100)."
              },
              "hex": {
                "name": "hex",
                "type": "string",
                "description": "Parameter containing the Hexadecimal string (#FFFFFF)."
              },
              "alpha": {
                "name": "alpha",
                "type": "string",
                "description": "Parameter containing the alpha value (transparency)."
              }
            },
            "methods": ["attachChange", "detachChange", "fireChange"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new <code>ColorPickerPopover</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "change",
          "visibility": "public",
          "since": "1.60.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "r": {
                      "name": "r",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the RED value (0-255)."
                    },
                    "g": {
                      "name": "g",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the GREEN value (0-255)."
                    },
                    "b": {
                      "name": "b",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the BLUE value (0-255)."
                    },
                    "h": {
                      "name": "h",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the HUE value (0-360)."
                    },
                    "s": {
                      "name": "s",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the SATURATION value (0-100)."
                    },
                    "v": {
                      "name": "v",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the VALUE value (0-100)."
                    },
                    "l": {
                      "name": "l",
                      "type": "int",
                      "optional": false,
                      "description": "Parameter containing the LIGHTNESS value (0-100)."
                    },
                    "hex": {
                      "name": "hex",
                      "type": "string",
                      "optional": false,
                      "description": "Parameter containing the Hexadecimal string (#FFFFFF)."
                    },
                    "alpha": {
                      "name": "alpha",
                      "type": "string",
                      "optional": false,
                      "description": "Parameter containing the alpha value (transparency)."
                    }
                  }
                }
              }
            }
          ],
          "description": "Fired when the submit button of the popover is clicked."
        }
      ],
      "methods": [
        {
          "name": "attachChange",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.unified.ColorPickerPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.ColorPickerPopover</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:change change} event of this <code>sap.ui.unified.ColorPickerPopover</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.ColorPickerPopover</code> itself.\n\nFired when the submit button of the popover is clicked."
        },
        {
          "name": "close",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Closes the <code>ColorPickerPopover</code>."
        },
        {
          "name": "detachChange",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.unified.ColorPickerPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:change change} event of this <code>sap.ui.unified.ColorPickerPopover</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.ColorPickerPopover with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireChange",
          "visibility": "protected",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.unified.ColorPickerPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "r": {
                  "name": "r",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the RED value (0-255)."
                },
                "g": {
                  "name": "g",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the GREEN value (0-255)."
                },
                "b": {
                  "name": "b",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the BLUE value (0-255)."
                },
                "h": {
                  "name": "h",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the HUE value (0-360)."
                },
                "s": {
                  "name": "s",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the SATURATION value (0-100)."
                },
                "v": {
                  "name": "v",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the VALUE value (0-100)."
                },
                "l": {
                  "name": "l",
                  "type": "int",
                  "optional": true,
                  "description": "Parameter containing the LIGHTNESS value (0-100)."
                },
                "hex": {
                  "name": "hex",
                  "type": "string",
                  "optional": true,
                  "description": "Parameter containing the Hexadecimal string (#FFFFFF)."
                },
                "alpha": {
                  "name": "alpha",
                  "type": "string",
                  "optional": true,
                  "description": "Parameter containing the alpha value (transparency)."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:change change} to attached listeners."
        },
        {
          "name": "getColorString",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>colorString</code>"
          },
          "description": "Gets current value of property {@link #getColorString colorString}.\n\nDetermines the input parameter that can be a string of type HEX, RGB, HSV, or a CSS color name: <ul> <li>HEX - #FFFFFF</li> <li>RGB - rgb(255,255,255)</li> <li>HSV - hsv(360,100,100)</li> <li>CSS - red</li> </ul> <b>Note:</b> The output parameter is an RGB string of the current color."
        },
        {
          "name": "getDisplayMode",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.unified.ColorPickerDisplayMode",
            "description": "Value of property <code>displayMode</code>"
          },
          "description": "Gets current value of property {@link #getDisplayMode displayMode}.\n\nDetermines the display mode of the <code>ColorPicker</code> among three types - Default, Large and Simplified\n\nDefault value is <code>Default</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.ColorPickerPopover."
        },
        {
          "name": "getMode",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.unified.ColorPickerMode",
            "description": "Value of property <code>mode</code>"
          },
          "description": "Gets current value of property {@link #getMode mode}.\n\nDetermines the color mode of the <code>ColorPicker</code>.\n\nDefault value is <code>HSV</code>."
        },
        {
          "name": "openBy",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "Object",
            "description": "Reference to the opening control"
          },
          "parameters": [
            {
              "name": "openBy",
              "type": "Object",
              "optional": false,
              "description": "When this control is displayed on tablet or desktop, the <code>ColorPickerPopover</code> is positioned relative to this control"
            }
          ],
          "description": "Opens the <code>ColorPickerPopover</code>. The popover is positioned relative to the control parameter on tablet or desktop and is full screen on phone. Therefore the openBy parameter is only used on tablet or desktop and is ignored on phone."
        },
        {
          "name": "setColorString",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.unified.ColorPickerPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColorString",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>colorString</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColorString colorString}.\n\nDetermines the input parameter that can be a string of type HEX, RGB, HSV, or a CSS color name: <ul> <li>HEX - #FFFFFF</li> <li>RGB - rgb(255,255,255)</li> <li>HSV - hsv(360,100,100)</li> <li>CSS - red</li> </ul> <b>Note:</b> The output parameter is an RGB string of the current color.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setDisplayMode",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.unified.ColorPickerPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sDisplayMode",
              "type": "sap.ui.unified.ColorPickerDisplayMode",
              "optional": false,
              "description": "New value for property <code>displayMode</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getDisplayMode displayMode}.\n\nDetermines the display mode of the <code>ColorPicker</code> among three types - Default, Large and Simplified\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Default</code>."
        },
        {
          "name": "setMode",
          "visibility": "public",
          "since": "1.60.0",
          "returnValue": {
            "type": "sap.ui.unified.ColorPickerPopover",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sMode",
              "type": "sap.ui.unified.ColorPickerMode",
              "optional": false,
              "description": "New value for property <code>mode</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMode mode}.\n\nDetermines the color mode of the <code>ColorPicker</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>HSV</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.ContentSwitcher",
      "basename": "ContentSwitcher",
      "resource": "sap/ui/unified/ContentSwitcher.js",
      "module": "sap/ui/unified/ContentSwitcher",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.16.0",
      "extends": "sap.ui.core.Control",
      "description": "Switches between two control areas and animates it via CSS transitions",
      "experimental": {
        "since": "1.16.0",
        "text": "API is not yet finished and might change completely"
      },
      "deprecated": { "since": "1.44.0" },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "animation",
            "type": "string",
            "defaultValue": "None",
            "group": "Appearance",
            "visibility": "public",
            "description": "Set the used animation when changing content. This just sets a CSS-class named \"sapUiUnifiedACSwitcherAnimation\" + this value on the root element of the control. The animation has to be implemented in CSS. This also enables applications to implement their own animations via CSS by reacting to the parent class. See the types sap.ui.unified.ContentSwitcherAnimation for default implementations.",
            "methods": ["getAnimation", "setAnimation"]
          },
          {
            "name": "activeContent",
            "type": "int",
            "defaultValue": 1,
            "group": "Behavior",
            "visibility": "public",
            "description": "The number of the currently active content (1 or 2).",
            "methods": ["getActiveContent", "setActiveContent"]
          }
        ],
        "aggregations": [
          {
            "name": "content1",
            "singularName": "content1",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The controls that should be shown in the first content",
            "methods": [
              "getContent1",
              "destroyContent1",
              "insertContent1",
              "addContent1",
              "removeContent1",
              "indexOfContent1",
              "removeAllContent1"
            ]
          },
          {
            "name": "content2",
            "singularName": "content2",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The controls that should be shown in the second content",
            "methods": [
              "getContent2",
              "destroyContent2",
              "insertContent2",
              "addContent2",
              "removeContent2",
              "indexOfContent2",
              "removeAllContent2"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ContentSwitcher.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addContent1",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ContentSwitcher",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent1",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content1 to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some content1 to the aggregation {@link #getContent1 content1}."
        },
        {
          "name": "addContent2",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ContentSwitcher",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent2",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content2 to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some content2 to the aggregation {@link #getContent2 content2}."
        },
        {
          "name": "destroyContent1",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ContentSwitcher",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the content1 in the aggregation {@link #getContent1 content1}."
        },
        {
          "name": "destroyContent2",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ContentSwitcher",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the content2 in the aggregation {@link #getContent2 content2}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.ContentSwitcher with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getActiveContent",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>activeContent</code>"
          },
          "description": "Gets current value of property {@link #getActiveContent activeContent}.\n\nThe number of the currently active content (1 or 2).\n\nDefault value is <code>1</code>."
        },
        {
          "name": "getAnimation",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>animation</code>"
          },
          "description": "Gets current value of property {@link #getAnimation animation}.\n\nSet the used animation when changing content. This just sets a CSS-class named \"sapUiUnifiedACSwitcherAnimation\" + this value on the root element of the control. The animation has to be implemented in CSS. This also enables applications to implement their own animations via CSS by reacting to the parent class. See the types sap.ui.unified.ContentSwitcherAnimation for default implementations.\n\nDefault value is <code>None</code>."
        },
        {
          "name": "getContent1",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getContent1 content1}.\n\nThe controls that should be shown in the first content"
        },
        {
          "name": "getContent2",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getContent2 content2}.\n\nThe controls that should be shown in the second content"
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.ContentSwitcher."
        },
        {
          "name": "indexOfContent1",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oContent1",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content1 whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getContent1 content1}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfContent2",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oContent2",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content2 whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getContent2 content2}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertContent1",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ContentSwitcher",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent1",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content1 to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the content1 should be inserted at; for a negative value of <code>iIndex</code>, the content1 is inserted at position 0; for a value greater than the current size of the aggregation, the content1 is inserted at the last position"
            }
          ],
          "description": "Inserts a content1 into the aggregation {@link #getContent1 content1}."
        },
        {
          "name": "insertContent2",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ContentSwitcher",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent2",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content2 to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the content2 should be inserted at; for a negative value of <code>iIndex</code>, the content2 is inserted at position 0; for a value greater than the current size of the aggregation, the content2 is inserted at the last position"
            }
          ],
          "description": "Inserts a content2 into the aggregation {@link #getContent2 content2}."
        },
        {
          "name": "removeAllContent1",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getContent1 content1}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllContent2",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getContent2 content2}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeContent1",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed content1 or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vContent1",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The content1 to remove or its index or id"
            }
          ],
          "description": "Removes a content1 from the aggregation {@link #getContent1 content1}."
        },
        {
          "name": "removeContent2",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed content2 or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vContent2",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The content2 to remove or its index or id"
            }
          ],
          "description": "Removes a content2 from the aggregation {@link #getContent2 content2}."
        },
        {
          "name": "setActiveContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ContentSwitcher",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iActiveContent",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>activeContent</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getActiveContent activeContent}.\n\nThe number of the currently active content (1 or 2).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>1</code>."
        },
        {
          "name": "setAnimation",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ContentSwitcher",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAnimation",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>animation</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAnimation animation}.\n\nSet the used animation when changing content. This just sets a CSS-class named \"sapUiUnifiedACSwitcherAnimation\" + this value on the root element of the control. The animation has to be implemented in CSS. This also enables applications to implement their own animations via CSS by reacting to the parent class. See the types sap.ui.unified.ContentSwitcherAnimation for default implementations.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
        },
        {
          "name": "switchContent",
          "visibility": "public",
          "description": "Changes the currently active content to the other one. If content 1 is active, content 2 will be activated and the other way around."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.unified.ContentSwitcherAnimation",
      "basename": "ContentSwitcherAnimation",
      "resource": "sap/ui/unified/library.js",
      "module": "sap/ui/unified/library",
      "export": "ContentSwitcherAnimation",
      "static": true,
      "visibility": "public",
      "since": "1.16.0",
      "description": "Predefined animations for the ContentSwitcher",
      "experimental": {
        "since": "1.16.0",
        "text": "API is not yet finished and might change completely"
      },
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "enum" },
      "properties": [
        {
          "name": "Fade",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Content is faded (opacity change)."
        },
        {
          "name": "None",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "No animation. Content is switched instantly."
        },
        {
          "name": "Rotate",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The new content rotates in. (Just like one of those old newspaper-animations.)"
        },
        {
          "name": "SlideOver",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The new content slides in from the left while the old content slides out to the left at the same time."
        },
        {
          "name": "SlideRight",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The new slides in from the left (to the right)."
        },
        {
          "name": "ZoomIn",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The new content is \"zoomed in\" from the center and grows to fill the full content area."
        },
        {
          "name": "ZoomOut",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "The old content is \"zoomed out\", i.e. shrinks to a point at the center of the content area."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.Currency",
      "basename": "Currency",
      "resource": "sap/ui/unified/Currency.js",
      "module": "sap/ui/unified/Currency",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.21.1",
      "extends": "sap.ui.core.Control",
      "description": "A text view which displays currency values and aligns them at the decimal point.\n\n<h3>Overview</h3>\n\nThe currency control consists of an amount, which is formatted automatically according to the user’s locale (using delimiter symbols for the decimal point and thousand separators) and to the currency set for this specific number (number of decimal places).\n\nThe currency is expressed as a three-letter code.\n\n<h3>Usage</h3>\n\n<i>When to use</i> <ul> <li>To display amounts with different currencies in a vertical layout, such as in a table, list, or form, and it is important that the user is able to compare the amounts.</li> </ul>\n\n<i>When not to use</i> <ul> <li>To display amounts with the same currency in a table. Use the {@link sap.m.ObjectNumber} instead.</li> <li>to display a number with a unit of measurement that is not a currency. Use the {@link sap.m.ObjectNumber} instead.</li> <li>To display an amount in a structure other than a list, table, or form.</li> </ul>\n\n<h3>Responsive behavior</h3>\n\nThe control supports amounts smaller than 100 trillion, which still fit on a phone screen in portrait mode. For larger amounts, the unit of measurement wraps to the next line, which makes it difficult to compare the amounts.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "value",
            "type": "float",
            "defaultValue": 0,
            "group": "Appearance",
            "visibility": "public",
            "description": "Determines the currency value.",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "stringValue",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.54",
            "description": "Determines the currency value as a string.\n\nString value is useful if you want to store really big values. If there are more than 21 digits before the decimal point or if the number starts with “0.” followed by more than five zeros, it is represented in exponential form. In these cases use the <code>stringValue</code> property to keep the number in decimal format.\n\n<b>Note:</b> If set, it will take precedence over the <code>value</code> property.",
            "methods": ["getStringValue", "setStringValue"]
          },
          {
            "name": "currency",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Determines the displayed currency code (ISO 4217).\n\n<b>Note:</b> If a * character is set instead of currency code, only the character itself will be rendered, ignoring the <code>value</code> property.",
            "methods": ["getCurrency", "setCurrency"]
          },
          {
            "name": "maxPrecision",
            "type": "int",
            "defaultValue": 3,
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines the space that is available for the precision of the various currencies.",
            "methods": ["getMaxPrecision", "setMaxPrecision"]
          },
          {
            "name": "useSymbol",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "description": "Displays the currency symbol instead of the ISO currency code.",
            "methods": ["getUseSymbol", "setUseSymbol"]
          }
        ],
        "dnd": { "draggable": true, "droppable": false },
        "designtime": "sap/ui/unified/designtime/Currency.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new <code>Currency</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.Currency with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getAccessibilityInfo",
          "visibility": "protected",
          "returnValue": {
            "type": "Object",
            "description": "Current accessibility state of the control."
          },
          "references": ["sap.ui.core.Control#getAccessibilityInfo"]
        },
        {
          "name": "getCurrency",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>currency</code>"
          },
          "description": "Gets current value of property {@link #getCurrency currency}.\n\nDetermines the displayed currency code (ISO 4217).\n\n<b>Note:</b> If a * character is set instead of currency code, only the character itself will be rendered, ignoring the <code>value</code> property."
        },
        {
          "name": "getCurrencySymbol",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": { "type": "string" },
          "description": "Get symbol of the currency, if available."
        },
        {
          "name": "getFormattedValue",
          "visibility": "public",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "string",
            "description": "The formatted value"
          },
          "description": "The formatted value."
        },
        {
          "name": "getMaxPrecision",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>maxPrecision</code>"
          },
          "description": "Gets current value of property {@link #getMaxPrecision maxPrecision}.\n\nDefines the space that is available for the precision of the various currencies.\n\nDefault value is <code>3</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.Currency."
        },
        {
          "name": "getStringValue",
          "visibility": "public",
          "since": "1.54",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>stringValue</code>"
          },
          "description": "Gets current value of property {@link #getStringValue stringValue}.\n\nDetermines the currency value as a string.\n\nString value is useful if you want to store really big values. If there are more than 21 digits before the decimal point or if the number starts with “0.” followed by more than five zeros, it is represented in exponential form. In these cases use the <code>stringValue</code> property to keep the number in decimal format.\n\n<b>Note:</b> If set, it will take precedence over the <code>value</code> property."
        },
        {
          "name": "getUseSymbol",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useSymbol</code>"
          },
          "description": "Gets current value of property {@link #getUseSymbol useSymbol}.\n\nDisplays the currency symbol instead of the ISO currency code.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nDetermines the currency value.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "init",
          "visibility": "public",
          "description": "Initializes the control."
        },
        {
          "name": "setCurrency",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Currency",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sCurrency",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>currency</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getCurrency currency}.\n\nDetermines the displayed currency code (ISO 4217).\n\n<b>Note:</b> If a * character is set instead of currency code, only the character itself will be rendered, ignoring the <code>value</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMaxPrecision",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Currency",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iMaxPrecision",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>maxPrecision</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaxPrecision maxPrecision}.\n\nDefines the space that is available for the precision of the various currencies.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>3</code>."
        },
        {
          "name": "setStringValue",
          "visibility": "public",
          "since": "1.54",
          "returnValue": {
            "type": "sap.ui.unified.Currency",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sStringValue",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>stringValue</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStringValue stringValue}.\n\nDetermines the currency value as a string.\n\nString value is useful if you want to store really big values. If there are more than 21 digits before the decimal point or if the number starts with “0.” followed by more than five zeros, it is represented in exponential form. In these cases use the <code>stringValue</code> property to keep the number in decimal format.\n\n<b>Note:</b> If set, it will take precedence over the <code>value</code> property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setUseSymbol",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Currency",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseSymbol",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useSymbol</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseSymbol useSymbol}.\n\nDisplays the currency symbol instead of the ISO currency code.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Currency",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fValue",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nDetermines the currency value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.DateRange",
      "basename": "DateRange",
      "resource": "sap/ui/unified/DateRange.js",
      "module": "sap/ui/unified/DateRange",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.22.0",
      "extends": "sap.ui.core.Element",
      "description": "Date range for use in DatePicker",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "startDate",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Start date for a date range. This must be a JavaScript date object.",
            "methods": ["getStartDate", "setStartDate"]
          },
          {
            "name": "endDate",
            "type": "object",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "End date for a date range. If empty only a single date is presented by this DateRange element. This must be a JavaScript date object.",
            "methods": ["getEndDate", "setEndDate"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new DateRange.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.DateRange with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getEndDate",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>endDate</code>"
          },
          "description": "Gets current value of property {@link #getEndDate endDate}.\n\nEnd date for a date range. If empty only a single date is presented by this DateRange element. This must be a JavaScript date object."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.DateRange."
        },
        {
          "name": "getStartDate",
          "visibility": "public",
          "returnValue": {
            "type": "object",
            "description": "Value of property <code>startDate</code>"
          },
          "description": "Gets current value of property {@link #getStartDate startDate}.\n\nStart date for a date range. This must be a JavaScript date object."
        },
        {
          "name": "setEndDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateRange",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oEndDate",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>endDate</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEndDate endDate}.\n\nEnd date for a date range. If empty only a single date is presented by this DateRange element. This must be a JavaScript date object.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setStartDate",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateRange",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oStartDate",
              "type": "object",
              "optional": false,
              "description": "New value for property <code>startDate</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStartDate startDate}.\n\nStart date for a date range. This must be a JavaScript date object.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.DateTypeRange",
      "basename": "DateTypeRange",
      "resource": "sap/ui/unified/DateTypeRange.js",
      "module": "sap/ui/unified/DateTypeRange",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.24.0",
      "extends": "sap.ui.unified.DateRange",
      "description": "Date range with calendar day type information. Used to visualize special days in the Calendar.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "type",
            "type": "sap.ui.unified.CalendarDayType",
            "defaultValue": "Type01",
            "group": "Appearance",
            "visibility": "public",
            "description": "Type of the date range.",
            "methods": ["getType", "setType"]
          },
          {
            "name": "color",
            "type": "sap.ui.core.CSSColor",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.76.0",
            "description": "Background color of the <code>Calendar</code> <code>specialDates</code> aggregation. If set, this color will override the default background color defined in <code>Calendar</code> <code>specialDates</code> aggregation",
            "methods": ["getColor", "setColor"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new DateTypeRange.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.DateTypeRange with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.unified.DateRange.extend}."
        },
        {
          "name": "getColor",
          "visibility": "public",
          "since": "1.76.0",
          "returnValue": {
            "type": "sap.ui.core.CSSColor",
            "description": "Value of property <code>color</code>"
          },
          "description": "Gets current value of property {@link #getColor color}.\n\nBackground color of the <code>Calendar</code> <code>specialDates</code> aggregation. If set, this color will override the default background color defined in <code>Calendar</code> <code>specialDates</code> aggregation"
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.DateTypeRange."
        },
        {
          "name": "getType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.CalendarDayType",
            "description": "Value of property <code>type</code>"
          },
          "description": "Gets current value of property {@link #getType type}.\n\nType of the date range.\n\nDefault value is <code>Type01</code>."
        },
        {
          "name": "setColor",
          "visibility": "public",
          "since": "1.76.0",
          "returnValue": {
            "type": "sap.ui.unified.DateTypeRange",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sColor",
              "type": "sap.ui.core.CSSColor",
              "optional": false,
              "description": "New value for property <code>color</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getColor color}.\n\nBackground color of the <code>Calendar</code> <code>specialDates</code> aggregation. If set, this color will override the default background color defined in <code>Calendar</code> <code>specialDates</code> aggregation\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.DateTypeRange",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sType",
              "type": "sap.ui.unified.CalendarDayType",
              "optional": false,
              "description": "New value for property <code>type</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getType type}.\n\nType of the date range.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Type01</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.FileUploader",
      "basename": "FileUploader",
      "resource": "sap/ui/unified/FileUploader.js",
      "module": "sap/ui/unified/FileUploader",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Control",
      "implements": [
        "sap.ui.core.IFormContent",
        "sap.ui.unified.IProcessableBlobs"
      ],
      "description": "The framework generates an input field and a button with text \"Browse ...\". The API supports features such as on change uploads (the upload starts immediately after a file has been selected), file uploads with explicit calls, adjustable control sizes, text display after uploads, or tooltips containing complete file paths.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "value",
            "type": "string",
            "defaultValue": "",
            "group": "Data",
            "visibility": "public",
            "description": "Value of the path for file upload.",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "enabled",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "Disabled controls have different colors, depending on customer settings.",
            "methods": ["getEnabled", "setEnabled"]
          },
          {
            "name": "uploadUrl",
            "type": "sap.ui.core.URI",
            "defaultValue": "",
            "group": "Data",
            "visibility": "public",
            "description": "Used when URL address is on a remote server.",
            "methods": ["getUploadUrl", "setUploadUrl"]
          },
          {
            "name": "name",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "Unique control name for identification on the server side after sending data to the server.",
            "methods": ["getName", "setName"]
          },
          {
            "name": "width",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "",
            "group": "Misc",
            "visibility": "public",
            "description": "Specifies the displayed control width.",
            "methods": ["getWidth", "setWidth"]
          },
          {
            "name": "uploadOnChange",
            "type": "boolean",
            "defaultValue": false,
            "group": "Behavior",
            "visibility": "public",
            "description": "If set to \"true\", the upload immediately starts after file selection. With the default setting, the upload needs to be explicitly triggered.",
            "methods": ["getUploadOnChange", "setUploadOnChange"]
          },
          {
            "name": "additionalData",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "Additional data that is sent to the back end service.\n\nData will be transmitted as value of a hidden input where the name is derived from the <code>name</code> property with suffix \"-data\".",
            "methods": ["getAdditionalData", "setAdditionalData"]
          },
          {
            "name": "sameFilenameAllowed",
            "type": "boolean",
            "defaultValue": false,
            "group": "Behavior",
            "visibility": "public",
            "description": "If the FileUploader is configured to upload the file directly after the file is selected, it is not allowed to upload a file with the same name again. If a user should be allowed to upload a file with the same name again this parameter has to be \"true\".\n\nA typical use case would be if the files have different paths.",
            "methods": ["getSameFilenameAllowed", "setSameFilenameAllowed"]
          },
          {
            "name": "buttonText",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "The button's text can be overwritten using this property.",
            "methods": ["getButtonText", "setButtonText"]
          },
          {
            "name": "fileType",
            "type": "string[]",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "The chosen files will be checked against an array of file types.\n\nIf at least one file does not fit the file type restriction, the upload is prevented. <b>Note:</b> This property is not supported by Microsoft Edge.\n\nExample: <code>[\"jpg\", \"png\", \"bmp\"]</code>.",
            "methods": ["getFileType", "setFileType"]
          },
          {
            "name": "multiple",
            "type": "boolean",
            "defaultValue": false,
            "group": "Behavior",
            "visibility": "public",
            "description": "Allows multiple files to be chosen and uploaded from the same folder.\n\nThis property is not supported by Internet Explorer 9.\n\n<b>Note:</b> Keep in mind that the various operating systems for mobile devices can react differently to the property so that fewer upload functions may be available in some cases.",
            "methods": ["getMultiple", "setMultiple"]
          },
          {
            "name": "maximumFileSize",
            "type": "float",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "A file size limit in megabytes which prevents the upload if at least one file exceeds it.\n\nThis property is not supported by Internet Explorer 9.",
            "methods": ["getMaximumFileSize", "setMaximumFileSize"]
          },
          {
            "name": "mimeType",
            "type": "string[]",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "description": "The chosen files will be checked against an array of mime types.\n\nIf at least one file does not fit the mime type restriction, the upload is prevented. <b>Note:</b> This property is not supported by Internet Explorer & Microsoft Edge.\n\nExample: <code>[\"image/png\", \"image/jpeg\"]</code>.",
            "methods": ["getMimeType", "setMimeType"]
          },
          {
            "name": "sendXHR",
            "type": "boolean",
            "defaultValue": false,
            "group": "Behavior",
            "visibility": "public",
            "description": "If set to \"true\", the request will be sent as XHR request instead of a form submit.\n\nThis property is not supported by Internet Explorer 9.",
            "methods": ["getSendXHR", "setSendXHR"]
          },
          {
            "name": "placeholder",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Placeholder for the text field.",
            "methods": ["getPlaceholder", "setPlaceholder"]
          },
          {
            "name": "style",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Style of the button.\n\nValues \"Transparent, \"Accept\", \"Reject\", or \"Emphasized\" are allowed.",
            "methods": ["getStyle", "setStyle"]
          },
          {
            "name": "buttonOnly",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "If set to \"true\", the <code>FileUploader</code> will be rendered as Button only, without showing the input field.",
            "methods": ["getButtonOnly", "setButtonOnly"]
          },
          {
            "name": "useMultipart",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "If set to \"false\", the request will be sent as file only request instead of a multipart/form-data request.\n\nOnly one file could be uploaded using this type of request. Required for sending such a request is to set the property <code>sendXHR</code> to \"true\". This property is not supported by Internet Explorer 9.",
            "methods": ["getUseMultipart", "setUseMultipart"]
          },
          {
            "name": "maximumFilenameLength",
            "type": "int",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "since": "1.24.0",
            "description": "The maximum length of a filename which the <code>FileUploader</code> will accept.\n\nIf the maximum filename length is exceeded, the corresponding event <code>filenameLengthExceed</code> is fired.",
            "methods": ["getMaximumFilenameLength", "setMaximumFilenameLength"]
          },
          {
            "name": "valueState",
            "type": "sap.ui.core.ValueState",
            "defaultValue": "None",
            "group": "Data",
            "visibility": "public",
            "since": "1.24.0",
            "description": "Visualizes warnings or errors related to the text field.\n\nPossible values: Warning, Error, Success, None.",
            "methods": ["getValueState", "setValueState"]
          },
          {
            "name": "valueStateText",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "since": "1.52",
            "description": "Custom text for the value state message pop-up.\n\n<b>Note:</b> If not specified, a default text, based on the value state type, will be used instead.",
            "methods": ["getValueStateText", "setValueStateText"]
          },
          {
            "name": "icon",
            "type": "sap.ui.core.URI",
            "defaultValue": "",
            "group": "Appearance",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Icon to be displayed as graphical element within the button.\n\nThis can be a URI to an image or an icon font URI.",
            "methods": ["getIcon", "setIcon"]
          },
          {
            "name": "iconHovered",
            "type": "sap.ui.core.URI",
            "defaultValue": "",
            "group": "Appearance",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Icon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified).\n\nIf not specified, the base icon is used. If an icon font icon is used, this property is ignored.",
            "methods": ["getIconHovered", "setIconHovered"]
          },
          {
            "name": "iconSelected",
            "type": "sap.ui.core.URI",
            "defaultValue": "",
            "group": "Appearance",
            "visibility": "public",
            "since": "1.26.0",
            "description": "Icon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified).\n\nIf not specified, the base or hovered icon is used. If an icon font icon is used, this property is ignored.",
            "methods": ["getIconSelected", "setIconSelected"]
          },
          {
            "name": "iconFirst",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.26.0",
            "description": "If set to true (default), the display sequence is 1. icon 2. control text.",
            "methods": ["getIconFirst", "setIconFirst"]
          },
          {
            "name": "iconOnly",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.26.0",
            "description": "If set to true, the button is displayed without any text.",
            "methods": ["getIconOnly", "setIconOnly"]
          }
        ],
        "aggregations": [
          {
            "name": "parameters",
            "singularName": "parameter",
            "type": "sap.ui.unified.FileUploaderParameter",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.12.2",
            "description": "The parameters for the <code>FileUploader</code> which are rendered as a hidden input field.",
            "methods": [
              "getParameters",
              "destroyParameters",
              "insertParameter",
              "addParameter",
              "removeParameter",
              "indexOfParameter",
              "removeAllParameters"
            ]
          },
          {
            "name": "headerParameters",
            "singularName": "headerParameter",
            "type": "sap.ui.unified.FileUploaderParameter",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The header parameters for the <code>FileUploader</code> which are only submitted with XHR requests. Header parameters are not supported by Internet Explorer 9.",
            "methods": [
              "getHeaderParameters",
              "destroyHeaderParameters",
              "insertHeaderParameter",
              "addHeaderParameter",
              "removeHeaderParameter",
              "indexOfHeaderParameter",
              "removeAllHeaderParameters"
            ]
          },
          {
            "name": "xhrSettings",
            "singularName": "xhrSetting",
            "type": "sap.ui.unified.FileUploaderXHRSettings",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.52",
            "description": "Settings for the <code>XMLHttpRequest</code> object. <b>Note:</b> This aggregation is only used when the <code>sendXHR</code> property is set to <code>true</code>.",
            "methods": [
              "getXhrSettings",
              "destroyXhrSettings",
              "setXhrSettings"
            ]
          }
        ],
        "associations": [
          {
            "name": "ariaDescribedBy",
            "singularName": "ariaDescribedBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls / IDs which describe this control (see WAI-ARIA attribute <code>aria-describedby</code>).",
            "methods": [
              "getAriaDescribedBy",
              "addAriaDescribedBy",
              "removeAriaDescribedBy",
              "removeAllAriaDescribedBy"
            ]
          },
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls / IDs which label this control (see WAI-ARIA attribute <code>aria-labelledby</code>).",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "change",
            "visibility": "public",
            "description": "Event is fired when the value of the file path has been changed.\n\n<b>Note:</b> Keep in mind that because of the HTML input element of type file, the event is also fired in Chrome browser when the Cancel button of the uploads window is pressed.",
            "parameters": {
              "newValue": {
                "name": "newValue",
                "type": "string",
                "description": "New file path value."
              },
              "files": {
                "name": "files",
                "type": "object[]",
                "description": "Files."
              }
            },
            "methods": ["attachChange", "detachChange", "fireChange"]
          },
          {
            "name": "uploadComplete",
            "visibility": "public",
            "description": "Event is fired as soon as the upload request is completed (either successful or unsuccessful).\n\nTo see if the upload request was successful, check the <code>status</code> parameter for a value 2xx. The actual progress of the upload can be monitored by listening to the <code>uploadProgress</code> event. However, this covers only the client side of the upload process and does not give any success status from the server.",
            "parameters": {
              "fileName": {
                "name": "fileName",
                "type": "string",
                "description": "The name of a file to be uploaded."
              },
              "response": {
                "name": "response",
                "type": "string",
                "description": "Response message which comes from the server.\n\nOn the server side this response has to be put within the &quot;body&quot; tags of the response document of the iFrame. It can consist of a return code and an optional message. This does not work in cross-domain scenarios."
              },
              "readyStateXHR": {
                "name": "readyStateXHR",
                "type": "string",
                "description": "ReadyState of the XHR request.\n\nRequired for receiving a <code>readyStateXHR</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
              },
              "status": {
                "name": "status",
                "type": "string",
                "description": "Status of the XHR request.\n\nRequired for receiving a <code>status</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
              },
              "responseRaw": {
                "name": "responseRaw",
                "type": "string",
                "description": "Http-Response which comes from the server.\n\nRequired for receiving <code>responseRaw</code> is to set the property <code>sendXHR</code> to true.\n\nThis property is not supported by Internet Explorer 9."
              },
              "headers": {
                "name": "headers",
                "type": "object",
                "description": "Http-Response-Headers which come from the server.\n\nProvided as a JSON-map, i.e. each header-field is reflected by a property in the <code>headers</code> object, with the property value reflecting the header-field's content.\n\nRequired for receiving <code>headers</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
              },
              "requestHeaders": {
                "name": "requestHeaders",
                "type": "object[]",
                "description": "Http-Request-Headers.\n\nRequired for receiving <code>requestHeaders</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
              }
            },
            "methods": [
              "attachUploadComplete",
              "detachUploadComplete",
              "fireUploadComplete"
            ]
          },
          {
            "name": "typeMissmatch",
            "visibility": "public",
            "description": "Event is fired when the type of a file does not match the <code>mimeType</code> or <code>fileType</code> property.",
            "parameters": {
              "fileName": {
                "name": "fileName",
                "type": "string",
                "description": "The name of a file to be uploaded."
              },
              "fileType": {
                "name": "fileType",
                "type": "string",
                "description": "The file ending of a file to be uploaded."
              },
              "mimeType": {
                "name": "mimeType",
                "type": "string",
                "description": "The MIME type of a file to be uploaded."
              }
            },
            "methods": [
              "attachTypeMissmatch",
              "detachTypeMissmatch",
              "fireTypeMissmatch"
            ]
          },
          {
            "name": "fileSizeExceed",
            "visibility": "public",
            "description": "Event is fired when the size of a file is above the <code>maximumFileSize</code> property. This event is not supported by Internet Explorer 9 (same restriction as for the property <code>maximumFileSize</code>).",
            "parameters": {
              "fileName": {
                "name": "fileName",
                "type": "string",
                "description": "The name of a file to be uploaded."
              },
              "fileSize": {
                "name": "fileSize",
                "type": "string",
                "description": "The size in MB of a file to be uploaded."
              }
            },
            "methods": [
              "attachFileSizeExceed",
              "detachFileSizeExceed",
              "fireFileSizeExceed"
            ]
          },
          {
            "name": "fileEmpty",
            "visibility": "public",
            "description": "Event is fired when the size of the file is 0",
            "parameters": {
              "fileName": {
                "name": "fileName",
                "type": "string",
                "description": "The name of the file to be uploaded."
              }
            },
            "methods": ["attachFileEmpty", "detachFileEmpty", "fireFileEmpty"]
          },
          {
            "name": "fileAllowed",
            "visibility": "public",
            "description": "Event is fired when the file is allowed for upload on client side.",
            "methods": [
              "attachFileAllowed",
              "detachFileAllowed",
              "fireFileAllowed"
            ]
          },
          {
            "name": "uploadProgress",
            "visibility": "public",
            "since": "1.24.0",
            "description": "Event is fired after the upload has started and before the upload is completed.\n\nIt contains progress information related to the running upload. Depending on file size, band width and used browser the event is fired once or multiple times.\n\nThis event is only supported with property <code>sendXHR</code> set to true, i.e. the event is not supported in Internet Explorer 9.",
            "parameters": {
              "lengthComputable": {
                "name": "lengthComputable",
                "type": "boolean",
                "description": "Indicates whether or not the relative upload progress can be calculated out of loaded and total."
              },
              "loaded": {
                "name": "loaded",
                "type": "float",
                "description": "The number of bytes of the file which have been uploaded by the time the event was fired."
              },
              "total": {
                "name": "total",
                "type": "float",
                "description": "The total size of the file to be uploaded in bytes."
              },
              "fileName": {
                "name": "fileName",
                "type": "string",
                "description": "The name of a file to be uploaded."
              },
              "requestHeaders": {
                "name": "requestHeaders",
                "type": "object[]",
                "description": "Http-Request-Headers.\n\nRequired for receiving <code>requestHeaders</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
              }
            },
            "methods": [
              "attachUploadProgress",
              "detachUploadProgress",
              "fireUploadProgress"
            ]
          },
          {
            "name": "uploadAborted",
            "visibility": "public",
            "since": "1.24.0",
            "description": "Event is fired after the current upload has been aborted.\n\nThis event is only supported with property <code>sendXHR</code> set to true, i.e. the event is not supported in Internet Explorer 9.",
            "parameters": {
              "fileName": {
                "name": "fileName",
                "type": "string",
                "description": "The name of a file to be uploaded."
              },
              "requestHeaders": {
                "name": "requestHeaders",
                "type": "object[]",
                "description": "Http-Request-Headers.\n\nRequired for receiving <code>requestHeader</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
              }
            },
            "methods": [
              "attachUploadAborted",
              "detachUploadAborted",
              "fireUploadAborted"
            ]
          },
          {
            "name": "filenameLengthExceed",
            "visibility": "public",
            "since": "1.24.0",
            "description": "Event is fired, if the filename of a chosen file is longer than the value specified with the <code>maximumFilenameLength</code> property.",
            "parameters": {
              "fileName": {
                "name": "fileName",
                "type": "string",
                "description": "The filename, which is longer than specified by the value of the property <code>maximumFilenameLength</code>."
              }
            },
            "methods": [
              "attachFilenameLengthExceed",
              "detachFilenameLengthExceed",
              "fireFilenameLengthExceed"
            ]
          },
          {
            "name": "uploadStart",
            "visibility": "public",
            "since": "1.30.0",
            "description": "Event is fired before an upload is started.",
            "parameters": {
              "fileName": {
                "name": "fileName",
                "type": "string",
                "description": "The name of a file to be uploaded."
              },
              "requestHeaders": {
                "name": "requestHeaders",
                "type": "object[]",
                "description": "Http-Request-Headers.\n\nRequired for receiving <code>requestHeaders</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
              }
            },
            "methods": [
              "attachUploadStart",
              "detachUploadStart",
              "fireUploadStart"
            ]
          }
        ],
        "designtime": "sap/ui/unified/designtime/FileUploader.designtime"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "ID for the new control, generated automatically if no ID is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new <code>FileUploader</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.",
        "references": [
          "{@link fiori:https://experience.sap.com/fiori-design-web/upload-collection/ Upload Collection}"
        ]
      },
      "events": [
        {
          "name": "change",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "newValue": {
                      "name": "newValue",
                      "type": "string",
                      "optional": false,
                      "description": "New file path value."
                    },
                    "files": {
                      "name": "files",
                      "type": "object[]",
                      "optional": false,
                      "description": "Files."
                    }
                  }
                }
              }
            }
          ],
          "description": "Event is fired when the value of the file path has been changed.\n\n<b>Note:</b> Keep in mind that because of the HTML input element of type file, the event is also fired in Chrome browser when the Cancel button of the uploads window is pressed."
        },
        {
          "name": "fileAllowed",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Event is fired when the file is allowed for upload on client side."
        },
        {
          "name": "fileEmpty",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "fileName": {
                      "name": "fileName",
                      "type": "string",
                      "optional": false,
                      "description": "The name of the file to be uploaded."
                    }
                  }
                }
              }
            }
          ],
          "description": "Event is fired when the size of the file is 0"
        },
        {
          "name": "filenameLengthExceed",
          "visibility": "public",
          "since": "1.24.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "fileName": {
                      "name": "fileName",
                      "type": "string",
                      "optional": false,
                      "description": "The filename, which is longer than specified by the value of the property <code>maximumFilenameLength</code>."
                    }
                  }
                }
              }
            }
          ],
          "description": "Event is fired, if the filename of a chosen file is longer than the value specified with the <code>maximumFilenameLength</code> property."
        },
        {
          "name": "fileSizeExceed",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "fileName": {
                      "name": "fileName",
                      "type": "string",
                      "optional": false,
                      "description": "The name of a file to be uploaded."
                    },
                    "fileSize": {
                      "name": "fileSize",
                      "type": "string",
                      "optional": false,
                      "description": "The size in MB of a file to be uploaded."
                    }
                  }
                }
              }
            }
          ],
          "description": "Event is fired when the size of a file is above the <code>maximumFileSize</code> property. This event is not supported by Internet Explorer 9 (same restriction as for the property <code>maximumFileSize</code>)."
        },
        {
          "name": "typeMissmatch",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "fileName": {
                      "name": "fileName",
                      "type": "string",
                      "optional": false,
                      "description": "The name of a file to be uploaded."
                    },
                    "fileType": {
                      "name": "fileType",
                      "type": "string",
                      "optional": false,
                      "description": "The file ending of a file to be uploaded."
                    },
                    "mimeType": {
                      "name": "mimeType",
                      "type": "string",
                      "optional": false,
                      "description": "The MIME type of a file to be uploaded."
                    }
                  }
                }
              }
            }
          ],
          "description": "Event is fired when the type of a file does not match the <code>mimeType</code> or <code>fileType</code> property."
        },
        {
          "name": "uploadAborted",
          "visibility": "public",
          "since": "1.24.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "fileName": {
                      "name": "fileName",
                      "type": "string",
                      "optional": false,
                      "description": "The name of a file to be uploaded."
                    },
                    "requestHeaders": {
                      "name": "requestHeaders",
                      "type": "object[]",
                      "optional": false,
                      "description": "Http-Request-Headers.\n\nRequired for receiving <code>requestHeader</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
                    }
                  }
                }
              }
            }
          ],
          "description": "Event is fired after the current upload has been aborted.\n\nThis event is only supported with property <code>sendXHR</code> set to true, i.e. the event is not supported in Internet Explorer 9."
        },
        {
          "name": "uploadComplete",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "fileName": {
                      "name": "fileName",
                      "type": "string",
                      "optional": false,
                      "description": "The name of a file to be uploaded."
                    },
                    "response": {
                      "name": "response",
                      "type": "string",
                      "optional": false,
                      "description": "Response message which comes from the server.\n\nOn the server side this response has to be put within the &quot;body&quot; tags of the response document of the iFrame. It can consist of a return code and an optional message. This does not work in cross-domain scenarios."
                    },
                    "readyStateXHR": {
                      "name": "readyStateXHR",
                      "type": "string",
                      "optional": false,
                      "description": "ReadyState of the XHR request.\n\nRequired for receiving a <code>readyStateXHR</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
                    },
                    "status": {
                      "name": "status",
                      "type": "string",
                      "optional": false,
                      "description": "Status of the XHR request.\n\nRequired for receiving a <code>status</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
                    },
                    "responseRaw": {
                      "name": "responseRaw",
                      "type": "string",
                      "optional": false,
                      "description": "Http-Response which comes from the server.\n\nRequired for receiving <code>responseRaw</code> is to set the property <code>sendXHR</code> to true.\n\nThis property is not supported by Internet Explorer 9."
                    },
                    "headers": {
                      "name": "headers",
                      "type": "object",
                      "optional": false,
                      "description": "Http-Response-Headers which come from the server.\n\nProvided as a JSON-map, i.e. each header-field is reflected by a property in the <code>headers</code> object, with the property value reflecting the header-field's content.\n\nRequired for receiving <code>headers</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
                    },
                    "requestHeaders": {
                      "name": "requestHeaders",
                      "type": "object[]",
                      "optional": false,
                      "description": "Http-Request-Headers.\n\nRequired for receiving <code>requestHeaders</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
                    }
                  }
                }
              }
            }
          ],
          "description": "Event is fired as soon as the upload request is completed (either successful or unsuccessful).\n\nTo see if the upload request was successful, check the <code>status</code> parameter for a value 2xx. The actual progress of the upload can be monitored by listening to the <code>uploadProgress</code> event. However, this covers only the client side of the upload process and does not give any success status from the server."
        },
        {
          "name": "uploadProgress",
          "visibility": "public",
          "since": "1.24.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "lengthComputable": {
                      "name": "lengthComputable",
                      "type": "boolean",
                      "optional": false,
                      "description": "Indicates whether or not the relative upload progress can be calculated out of loaded and total."
                    },
                    "loaded": {
                      "name": "loaded",
                      "type": "float",
                      "optional": false,
                      "description": "The number of bytes of the file which have been uploaded by the time the event was fired."
                    },
                    "total": {
                      "name": "total",
                      "type": "float",
                      "optional": false,
                      "description": "The total size of the file to be uploaded in bytes."
                    },
                    "fileName": {
                      "name": "fileName",
                      "type": "string",
                      "optional": false,
                      "description": "The name of a file to be uploaded."
                    },
                    "requestHeaders": {
                      "name": "requestHeaders",
                      "type": "object[]",
                      "optional": false,
                      "description": "Http-Request-Headers.\n\nRequired for receiving <code>requestHeaders</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
                    }
                  }
                }
              }
            }
          ],
          "description": "Event is fired after the upload has started and before the upload is completed.\n\nIt contains progress information related to the running upload. Depending on file size, band width and used browser the event is fired once or multiple times.\n\nThis event is only supported with property <code>sendXHR</code> set to true, i.e. the event is not supported in Internet Explorer 9."
        },
        {
          "name": "uploadStart",
          "visibility": "public",
          "since": "1.30.0",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "fileName": {
                      "name": "fileName",
                      "type": "string",
                      "optional": false,
                      "description": "The name of a file to be uploaded."
                    },
                    "requestHeaders": {
                      "name": "requestHeaders",
                      "type": "object[]",
                      "optional": false,
                      "description": "Http-Request-Headers.\n\nRequired for receiving <code>requestHeaders</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
                    }
                  }
                }
              }
            }
          ],
          "description": "Event is fired before an upload is started."
        }
      ],
      "methods": [
        {
          "name": "abort",
          "visibility": "public",
          "since": "1.24.0",
          "ui5-metamodel": true,
          "parameters": [
            {
              "name": "sHeaderParameterName",
              "type": "string",
              "optional": false,
              "description": "The name of the parameter within the <code>headerParameters</code> aggregation to be checked.\n\n<b>Note:</b> aborts the request, sent with a header parameter with the provided name. The parameter is taken into account if the sHeaderParameterValue parameter is provided too."
            },
            {
              "name": "sHeaderParameterValue",
              "type": "string",
              "optional": false,
              "description": "The value of the parameter within the <code>headerParameters</code> aggregation to be checked.\n\n<b>Note:</b> aborts the request, sent with a header parameter with the provided value. The parameter is taken into account if the sHeaderParameterName parameter is provided too."
            }
          ],
          "description": "Aborts the currently running upload."
        },
        {
          "name": "addAriaDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaDescribedBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaDescribedBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaDescribedBy into the association {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addHeaderParameter",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oHeaderParameter",
              "type": "sap.ui.unified.FileUploaderParameter",
              "optional": false,
              "description": "The headerParameter to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some headerParameter to the aggregation {@link #getHeaderParameters headerParameters}."
        },
        {
          "name": "addParameter",
          "visibility": "public",
          "since": "1.12.2",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oParameter",
              "type": "sap.ui.unified.FileUploaderParameter",
              "optional": false,
              "description": "The parameter to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some parameter to the aggregation {@link #getParameters parameters}."
        },
        {
          "name": "attachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:change change} event of this <code>sap.ui.unified.FileUploader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.FileUploader</code> itself.\n\nEvent is fired when the value of the file path has been changed.\n\n<b>Note:</b> Keep in mind that because of the HTML input element of type file, the event is also fired in Chrome browser when the Cancel button of the uploads window is pressed."
        },
        {
          "name": "attachFileAllowed",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:fileAllowed fileAllowed} event of this <code>sap.ui.unified.FileUploader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.FileUploader</code> itself.\n\nEvent is fired when the file is allowed for upload on client side."
        },
        {
          "name": "attachFileEmpty",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:fileEmpty fileEmpty} event of this <code>sap.ui.unified.FileUploader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.FileUploader</code> itself.\n\nEvent is fired when the size of the file is 0"
        },
        {
          "name": "attachFilenameLengthExceed",
          "visibility": "public",
          "since": "1.24.0",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:filenameLengthExceed filenameLengthExceed} event of this <code>sap.ui.unified.FileUploader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.FileUploader</code> itself.\n\nEvent is fired, if the filename of a chosen file is longer than the value specified with the <code>maximumFilenameLength</code> property."
        },
        {
          "name": "attachFileSizeExceed",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:fileSizeExceed fileSizeExceed} event of this <code>sap.ui.unified.FileUploader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.FileUploader</code> itself.\n\nEvent is fired when the size of a file is above the <code>maximumFileSize</code> property. This event is not supported by Internet Explorer 9 (same restriction as for the property <code>maximumFileSize</code>)."
        },
        {
          "name": "attachTypeMissmatch",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:typeMissmatch typeMissmatch} event of this <code>sap.ui.unified.FileUploader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.FileUploader</code> itself.\n\nEvent is fired when the type of a file does not match the <code>mimeType</code> or <code>fileType</code> property."
        },
        {
          "name": "attachUploadAborted",
          "visibility": "public",
          "since": "1.24.0",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:uploadAborted uploadAborted} event of this <code>sap.ui.unified.FileUploader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.FileUploader</code> itself.\n\nEvent is fired after the current upload has been aborted.\n\nThis event is only supported with property <code>sendXHR</code> set to true, i.e. the event is not supported in Internet Explorer 9."
        },
        {
          "name": "attachUploadComplete",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:uploadComplete uploadComplete} event of this <code>sap.ui.unified.FileUploader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.FileUploader</code> itself.\n\nEvent is fired as soon as the upload request is completed (either successful or unsuccessful).\n\nTo see if the upload request was successful, check the <code>status</code> parameter for a value 2xx. The actual progress of the upload can be monitored by listening to the <code>uploadProgress</code> event. However, this covers only the client side of the upload process and does not give any success status from the server."
        },
        {
          "name": "attachUploadProgress",
          "visibility": "public",
          "since": "1.24.0",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:uploadProgress uploadProgress} event of this <code>sap.ui.unified.FileUploader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.FileUploader</code> itself.\n\nEvent is fired after the upload has started and before the upload is completed.\n\nIt contains progress information related to the running upload. Depending on file size, band width and used browser the event is fired once or multiple times.\n\nThis event is only supported with property <code>sendXHR</code> set to true, i.e. the event is not supported in Internet Explorer 9."
        },
        {
          "name": "attachUploadStart",
          "visibility": "public",
          "since": "1.30.0",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.FileUploader</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:uploadStart uploadStart} event of this <code>sap.ui.unified.FileUploader</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.FileUploader</code> itself.\n\nEvent is fired before an upload is started."
        },
        {
          "name": "clear",
          "visibility": "public",
          "since": "1.25.0",
          "ui5-metamodel": true,
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "The <code>sap.ui.unified.FileUploader</code> instance"
          },
          "description": "Clears the content of the <code>FileUploader</code>.\n\n<b>Note:</b> The attached additional data however is retained."
        },
        {
          "name": "destroyHeaderParameters",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the headerParameters in the aggregation {@link #getHeaderParameters headerParameters}."
        },
        {
          "name": "destroyParameters",
          "visibility": "public",
          "since": "1.12.2",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the parameters in the aggregation {@link #getParameters parameters}."
        },
        {
          "name": "destroyXhrSettings",
          "visibility": "public",
          "since": "1.52",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the xhrSettings in the aggregation {@link #getXhrSettings xhrSettings}."
        },
        {
          "name": "detachChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:change change} event of this <code>sap.ui.unified.FileUploader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachFileAllowed",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:fileAllowed fileAllowed} event of this <code>sap.ui.unified.FileUploader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachFileEmpty",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:fileEmpty fileEmpty} event of this <code>sap.ui.unified.FileUploader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachFilenameLengthExceed",
          "visibility": "public",
          "since": "1.24.0",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:filenameLengthExceed filenameLengthExceed} event of this <code>sap.ui.unified.FileUploader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachFileSizeExceed",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:fileSizeExceed fileSizeExceed} event of this <code>sap.ui.unified.FileUploader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachTypeMissmatch",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:typeMissmatch typeMissmatch} event of this <code>sap.ui.unified.FileUploader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachUploadAborted",
          "visibility": "public",
          "since": "1.24.0",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:uploadAborted uploadAborted} event of this <code>sap.ui.unified.FileUploader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachUploadComplete",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:uploadComplete uploadComplete} event of this <code>sap.ui.unified.FileUploader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachUploadProgress",
          "visibility": "public",
          "since": "1.24.0",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:uploadProgress uploadProgress} event of this <code>sap.ui.unified.FileUploader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "detachUploadStart",
          "visibility": "public",
          "since": "1.30.0",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:uploadStart uploadStart} event of this <code>sap.ui.unified.FileUploader</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.FileUploader with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireChange",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "newValue": {
                  "name": "newValue",
                  "type": "string",
                  "optional": true,
                  "description": "New file path value."
                },
                "files": {
                  "name": "files",
                  "type": "object[]",
                  "optional": true,
                  "description": "Files."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:change change} to attached listeners."
        },
        {
          "name": "fireFileAllowed",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:fileAllowed fileAllowed} to attached listeners."
        },
        {
          "name": "fireFileEmpty",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "fileName": {
                  "name": "fileName",
                  "type": "string",
                  "optional": true,
                  "description": "The name of the file to be uploaded."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:fileEmpty fileEmpty} to attached listeners."
        },
        {
          "name": "fireFilenameLengthExceed",
          "visibility": "protected",
          "since": "1.24.0",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "fileName": {
                  "name": "fileName",
                  "type": "string",
                  "optional": true,
                  "description": "The filename, which is longer than specified by the value of the property <code>maximumFilenameLength</code>."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:filenameLengthExceed filenameLengthExceed} to attached listeners."
        },
        {
          "name": "fireFileSizeExceed",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "fileName": {
                  "name": "fileName",
                  "type": "string",
                  "optional": true,
                  "description": "The name of a file to be uploaded."
                },
                "fileSize": {
                  "name": "fileSize",
                  "type": "string",
                  "optional": true,
                  "description": "The size in MB of a file to be uploaded."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:fileSizeExceed fileSizeExceed} to attached listeners."
        },
        {
          "name": "fireTypeMissmatch",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "fileName": {
                  "name": "fileName",
                  "type": "string",
                  "optional": true,
                  "description": "The name of a file to be uploaded."
                },
                "fileType": {
                  "name": "fileType",
                  "type": "string",
                  "optional": true,
                  "description": "The file ending of a file to be uploaded."
                },
                "mimeType": {
                  "name": "mimeType",
                  "type": "string",
                  "optional": true,
                  "description": "The MIME type of a file to be uploaded."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:typeMissmatch typeMissmatch} to attached listeners."
        },
        {
          "name": "fireUploadAborted",
          "visibility": "protected",
          "since": "1.24.0",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "fileName": {
                  "name": "fileName",
                  "type": "string",
                  "optional": true,
                  "description": "The name of a file to be uploaded."
                },
                "requestHeaders": {
                  "name": "requestHeaders",
                  "type": "object[]",
                  "optional": true,
                  "description": "Http-Request-Headers.\n\nRequired for receiving <code>requestHeader</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:uploadAborted uploadAborted} to attached listeners."
        },
        {
          "name": "fireUploadComplete",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "fileName": {
                  "name": "fileName",
                  "type": "string",
                  "optional": true,
                  "description": "The name of a file to be uploaded."
                },
                "response": {
                  "name": "response",
                  "type": "string",
                  "optional": true,
                  "description": "Response message which comes from the server.\n\nOn the server side this response has to be put within the &quot;body&quot; tags of the response document of the iFrame. It can consist of a return code and an optional message. This does not work in cross-domain scenarios."
                },
                "readyStateXHR": {
                  "name": "readyStateXHR",
                  "type": "string",
                  "optional": true,
                  "description": "ReadyState of the XHR request.\n\nRequired for receiving a <code>readyStateXHR</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
                },
                "status": {
                  "name": "status",
                  "type": "string",
                  "optional": true,
                  "description": "Status of the XHR request.\n\nRequired for receiving a <code>status</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
                },
                "responseRaw": {
                  "name": "responseRaw",
                  "type": "string",
                  "optional": true,
                  "description": "Http-Response which comes from the server.\n\nRequired for receiving <code>responseRaw</code> is to set the property <code>sendXHR</code> to true.\n\nThis property is not supported by Internet Explorer 9."
                },
                "headers": {
                  "name": "headers",
                  "type": "object",
                  "optional": true,
                  "description": "Http-Response-Headers which come from the server.\n\nProvided as a JSON-map, i.e. each header-field is reflected by a property in the <code>headers</code> object, with the property value reflecting the header-field's content.\n\nRequired for receiving <code>headers</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
                },
                "requestHeaders": {
                  "name": "requestHeaders",
                  "type": "object[]",
                  "optional": true,
                  "description": "Http-Request-Headers.\n\nRequired for receiving <code>requestHeaders</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:uploadComplete uploadComplete} to attached listeners."
        },
        {
          "name": "fireUploadProgress",
          "visibility": "protected",
          "since": "1.24.0",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "lengthComputable": {
                  "name": "lengthComputable",
                  "type": "boolean",
                  "optional": true,
                  "description": "Indicates whether or not the relative upload progress can be calculated out of loaded and total."
                },
                "loaded": {
                  "name": "loaded",
                  "type": "float",
                  "optional": true,
                  "description": "The number of bytes of the file which have been uploaded by the time the event was fired."
                },
                "total": {
                  "name": "total",
                  "type": "float",
                  "optional": true,
                  "description": "The total size of the file to be uploaded in bytes."
                },
                "fileName": {
                  "name": "fileName",
                  "type": "string",
                  "optional": true,
                  "description": "The name of a file to be uploaded."
                },
                "requestHeaders": {
                  "name": "requestHeaders",
                  "type": "object[]",
                  "optional": true,
                  "description": "Http-Request-Headers.\n\nRequired for receiving <code>requestHeaders</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:uploadProgress uploadProgress} to attached listeners."
        },
        {
          "name": "fireUploadStart",
          "visibility": "protected",
          "since": "1.30.0",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "fileName": {
                  "name": "fileName",
                  "type": "string",
                  "optional": true,
                  "description": "The name of a file to be uploaded."
                },
                "requestHeaders": {
                  "name": "requestHeaders",
                  "type": "object[]",
                  "optional": true,
                  "description": "Http-Request-Headers.\n\nRequired for receiving <code>requestHeaders</code> is to set the property <code>sendXHR</code> to true. This property is not supported by Internet Explorer 9."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:uploadStart uploadStart} to attached listeners."
        },
        {
          "name": "getAdditionalData",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>additionalData</code>"
          },
          "description": "Gets current value of property {@link #getAdditionalData additionalData}.\n\nAdditional data that is sent to the back end service.\n\nData will be transmitted as value of a hidden input where the name is derived from the <code>name</code> property with suffix \"-data\"."
        },
        {
          "name": "getAriaDescribedBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getButtonOnly",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>buttonOnly</code>"
          },
          "description": "Gets current value of property {@link #getButtonOnly buttonOnly}.\n\nIf set to \"true\", the <code>FileUploader</code> will be rendered as Button only, without showing the input field.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getButtonText",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>buttonText</code>"
          },
          "description": "Gets current value of property {@link #getButtonText buttonText}.\n\nThe button's text can be overwritten using this property."
        },
        {
          "name": "getEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enabled</code>"
          },
          "description": "Gets current value of property {@link #getEnabled enabled}.\n\nDisabled controls have different colors, depending on customer settings.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getFileType",
          "visibility": "public",
          "returnValue": {
            "type": "string[]",
            "description": "Value of property <code>fileType</code>"
          },
          "description": "Gets current value of property {@link #getFileType fileType}.\n\nThe chosen files will be checked against an array of file types.\n\nIf at least one file does not fit the file type restriction, the upload is prevented. <b>Note:</b> This property is not supported by Microsoft Edge.\n\nExample: <code>[\"jpg\", \"png\", \"bmp\"]</code>."
        },
        {
          "name": "getHeaderParameters",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.FileUploaderParameter[]" },
          "description": "Gets content of aggregation {@link #getHeaderParameters headerParameters}.\n\nThe header parameters for the <code>FileUploader</code> which are only submitted with XHR requests. Header parameters are not supported by Internet Explorer 9."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>icon</code>"
          },
          "description": "Gets current value of property {@link #getIcon icon}.\n\nIcon to be displayed as graphical element within the button.\n\nThis can be a URI to an image or an icon font URI.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getIconFirst",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>iconFirst</code>"
          },
          "description": "Gets current value of property {@link #getIconFirst iconFirst}.\n\nIf set to true (default), the display sequence is 1. icon 2. control text.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getIconHovered",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>iconHovered</code>"
          },
          "description": "Gets current value of property {@link #getIconHovered iconHovered}.\n\nIcon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified).\n\nIf not specified, the base icon is used. If an icon font icon is used, this property is ignored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getIconOnly",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>iconOnly</code>"
          },
          "description": "Gets current value of property {@link #getIconOnly iconOnly}.\n\nIf set to true, the button is displayed without any text.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getIconSelected",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>iconSelected</code>"
          },
          "description": "Gets current value of property {@link #getIconSelected iconSelected}.\n\nIcon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified).\n\nIf not specified, the base or hovered icon is used. If an icon font icon is used, this property is ignored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getMaximumFilenameLength",
          "visibility": "public",
          "since": "1.24.0",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>maximumFilenameLength</code>"
          },
          "description": "Gets current value of property {@link #getMaximumFilenameLength maximumFilenameLength}.\n\nThe maximum length of a filename which the <code>FileUploader</code> will accept.\n\nIf the maximum filename length is exceeded, the corresponding event <code>filenameLengthExceed</code> is fired."
        },
        {
          "name": "getMaximumFileSize",
          "visibility": "public",
          "returnValue": {
            "type": "float",
            "description": "Value of property <code>maximumFileSize</code>"
          },
          "description": "Gets current value of property {@link #getMaximumFileSize maximumFileSize}.\n\nA file size limit in megabytes which prevents the upload if at least one file exceeds it.\n\nThis property is not supported by Internet Explorer 9."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.FileUploader."
        },
        {
          "name": "getMimeType",
          "visibility": "public",
          "returnValue": {
            "type": "string[]",
            "description": "Value of property <code>mimeType</code>"
          },
          "description": "Gets current value of property {@link #getMimeType mimeType}.\n\nThe chosen files will be checked against an array of mime types.\n\nIf at least one file does not fit the mime type restriction, the upload is prevented. <b>Note:</b> This property is not supported by Internet Explorer & Microsoft Edge.\n\nExample: <code>[\"image/png\", \"image/jpeg\"]</code>."
        },
        {
          "name": "getMultiple",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>multiple</code>"
          },
          "description": "Gets current value of property {@link #getMultiple multiple}.\n\nAllows multiple files to be chosen and uploaded from the same folder.\n\nThis property is not supported by Internet Explorer 9.\n\n<b>Note:</b> Keep in mind that the various operating systems for mobile devices can react differently to the property so that fewer upload functions may be available in some cases.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getName",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>name</code>"
          },
          "description": "Gets current value of property {@link #getName name}.\n\nUnique control name for identification on the server side after sending data to the server."
        },
        {
          "name": "getParameters",
          "visibility": "public",
          "since": "1.12.2",
          "returnValue": { "type": "sap.ui.unified.FileUploaderParameter[]" },
          "description": "Gets content of aggregation {@link #getParameters parameters}.\n\nThe parameters for the <code>FileUploader</code> which are rendered as a hidden input field."
        },
        {
          "name": "getPlaceholder",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>placeholder</code>"
          },
          "description": "Gets current value of property {@link #getPlaceholder placeholder}.\n\nPlaceholder for the text field."
        },
        {
          "name": "getProcessedBlobsFromArray",
          "visibility": "public",
          "since": "1.52",
          "returnValue": {
            "type": "Promise",
            "description": "A Promise that resolves with an array of Blobs which is used for the final uploading."
          },
          "parameters": [
            {
              "name": "aBlobs",
              "type": "Blob[]",
              "optional": false,
              "description": "The initial Blobs which can be used to determine/calculate a new array of Blobs for further processing."
            }
          ],
          "description": "Allows to process Blobs before they get uploaded. This API can be used to create custom Blobs and upload these custom Blobs instead of the received/initials Blobs in the parameter <code>aBlobs</code>. One use case could be to create and upload zip archives based on the passed Blobs. The default implementation of this API should simply resolve with the received Blobs (parameter <code>aBlobs</code>).\n\nThis API is only supported in case <code>sendXHR</code> is <code>true</code>. This means only IE10+ is supported, while IE9 and below is not.\n\nThis is a default implementation of the interface <code>sap.ui.unified.IProcessableBlobs</code>."
        },
        {
          "name": "getSameFilenameAllowed",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>sameFilenameAllowed</code>"
          },
          "description": "Gets current value of property {@link #getSameFilenameAllowed sameFilenameAllowed}.\n\nIf the FileUploader is configured to upload the file directly after the file is selected, it is not allowed to upload a file with the same name again. If a user should be allowed to upload a file with the same name again this parameter has to be \"true\".\n\nA typical use case would be if the files have different paths.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getSendXHR",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>sendXHR</code>"
          },
          "description": "Gets current value of property {@link #getSendXHR sendXHR}.\n\nIf set to \"true\", the request will be sent as XHR request instead of a form submit.\n\nThis property is not supported by Internet Explorer 9.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getStyle",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>style</code>"
          },
          "description": "Gets current value of property {@link #getStyle style}.\n\nStyle of the button.\n\nValues \"Transparent, \"Accept\", \"Reject\", or \"Emphasized\" are allowed."
        },
        {
          "name": "getUploadOnChange",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>uploadOnChange</code>"
          },
          "description": "Gets current value of property {@link #getUploadOnChange uploadOnChange}.\n\nIf set to \"true\", the upload immediately starts after file selection. With the default setting, the upload needs to be explicitly triggered.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getUploadUrl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>uploadUrl</code>"
          },
          "description": "Gets current value of property {@link #getUploadUrl uploadUrl}.\n\nUsed when URL address is on a remote server.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getUseMultipart",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>useMultipart</code>"
          },
          "description": "Gets current value of property {@link #getUseMultipart useMultipart}.\n\nIf set to \"false\", the request will be sent as file only request instead of a multipart/form-data request.\n\nOnly one file could be uploaded using this type of request. Required for sending such a request is to set the property <code>sendXHR</code> to \"true\". This property is not supported by Internet Explorer 9.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nValue of the path for file upload.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getValueState",
          "visibility": "public",
          "since": "1.24.0",
          "returnValue": {
            "type": "sap.ui.core.ValueState",
            "description": "Value of property <code>valueState</code>"
          },
          "description": "Gets current value of property {@link #getValueState valueState}.\n\nVisualizes warnings or errors related to the text field.\n\nPossible values: Warning, Error, Success, None.\n\nDefault value is <code>None</code>."
        },
        {
          "name": "getValueStateText",
          "visibility": "public",
          "since": "1.52",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>valueStateText</code>"
          },
          "description": "Gets current value of property {@link #getValueStateText valueStateText}.\n\nCustom text for the value state message pop-up.\n\n<b>Note:</b> If not specified, a default text, based on the value state type, will be used instead."
        },
        {
          "name": "getWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>width</code>"
          },
          "description": "Gets current value of property {@link #getWidth width}.\n\nSpecifies the displayed control width.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getXhrSettings",
          "visibility": "public",
          "since": "1.52",
          "returnValue": { "type": "sap.ui.unified.FileUploaderXHRSettings" },
          "description": "Gets content of aggregation {@link #getXhrSettings xhrSettings}.\n\nSettings for the <code>XMLHttpRequest</code> object. <b>Note:</b> This aggregation is only used when the <code>sendXHR</code> property is set to <code>true</code>."
        },
        {
          "name": "indexOfHeaderParameter",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oHeaderParameter",
              "type": "sap.ui.unified.FileUploaderParameter",
              "optional": false,
              "description": "The headerParameter whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.FileUploaderParameter</code> in the aggregation {@link #getHeaderParameters headerParameters}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfParameter",
          "visibility": "public",
          "since": "1.12.2",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oParameter",
              "type": "sap.ui.unified.FileUploaderParameter",
              "optional": false,
              "description": "The parameter whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.FileUploaderParameter</code> in the aggregation {@link #getParameters parameters}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertHeaderParameter",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oHeaderParameter",
              "type": "sap.ui.unified.FileUploaderParameter",
              "optional": false,
              "description": "The headerParameter to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the headerParameter should be inserted at; for a negative value of <code>iIndex</code>, the headerParameter is inserted at position 0; for a value greater than the current size of the aggregation, the headerParameter is inserted at the last position"
            }
          ],
          "description": "Inserts a headerParameter into the aggregation {@link #getHeaderParameters headerParameters}."
        },
        {
          "name": "insertParameter",
          "visibility": "public",
          "since": "1.12.2",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oParameter",
              "type": "sap.ui.unified.FileUploaderParameter",
              "optional": false,
              "description": "The parameter to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the parameter should be inserted at; for a negative value of <code>iIndex</code>, the parameter is inserted at position 0; for a value greater than the current size of the aggregation, the parameter is inserted at the last position"
            }
          ],
          "description": "Inserts a parameter into the aggregation {@link #getParameters parameters}."
        },
        {
          "name": "removeAllAriaDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllHeaderParameters",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploaderParameter[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getHeaderParameters headerParameters}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllParameters",
          "visibility": "public",
          "since": "1.12.2",
          "returnValue": {
            "type": "sap.ui.unified.FileUploaderParameter[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getParameters parameters}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaDescribedBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaDescribedBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaDescribedBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaDescribedBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaDescribedBy from the association named {@link #getAriaDescribedBy ariaDescribedBy}."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeHeaderParameter",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploaderParameter",
            "description": "The removed headerParameter or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vHeaderParameter",
              "type": "int|string|sap.ui.unified.FileUploaderParameter",
              "optional": false,
              "description": "The headerParameter to remove or its index or id"
            }
          ],
          "description": "Removes a headerParameter from the aggregation {@link #getHeaderParameters headerParameters}."
        },
        {
          "name": "removeParameter",
          "visibility": "public",
          "since": "1.12.2",
          "returnValue": {
            "type": "sap.ui.unified.FileUploaderParameter",
            "description": "The removed parameter or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vParameter",
              "type": "int|string|sap.ui.unified.FileUploaderParameter",
              "optional": false,
              "description": "The parameter to remove or its index or id"
            }
          ],
          "description": "Removes a parameter from the aggregation {@link #getParameters parameters}."
        },
        {
          "name": "setAdditionalData",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAdditionalData",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>additionalData</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAdditionalData additionalData}.\n\nAdditional data that is sent to the back end service.\n\nData will be transmitted as value of a hidden input where the name is derived from the <code>name</code> property with suffix \"-data\".\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setButtonOnly",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bButtonOnly",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>buttonOnly</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getButtonOnly buttonOnly}.\n\nIf set to \"true\", the <code>FileUploader</code> will be rendered as Button only, without showing the input field.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setButtonText",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sButtonText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>buttonText</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getButtonText buttonText}.\n\nThe button's text can be overwritten using this property.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnabled",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enabled</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnabled enabled}.\n\nDisabled controls have different colors, depending on customer settings.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setFileType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sFileType",
              "type": "string[]",
              "optional": false,
              "description": "New value for property <code>fileType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getFileType fileType}.\n\nThe chosen files will be checked against an array of file types.\n\nIf at least one file does not fit the file type restriction, the upload is prevented. <b>Note:</b> This property is not supported by Microsoft Edge.\n\nExample: <code>[\"jpg\", \"png\", \"bmp\"]</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIcon",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>icon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIcon icon}.\n\nIcon to be displayed as graphical element within the button.\n\nThis can be a URI to an image or an icon font URI.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setIconFirst",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIconFirst",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>iconFirst</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIconFirst iconFirst}.\n\nIf set to true (default), the display sequence is 1. icon 2. control text.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setIconHovered",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIconHovered",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>iconHovered</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIconHovered iconHovered}.\n\nIcon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified).\n\nIf not specified, the base icon is used. If an icon font icon is used, this property is ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setIconOnly",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bIconOnly",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>iconOnly</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIconOnly iconOnly}.\n\nIf set to true, the button is displayed without any text.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setIconSelected",
          "visibility": "public",
          "since": "1.26.0",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIconSelected",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>iconSelected</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIconSelected iconSelected}.\n\nIcon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified).\n\nIf not specified, the base or hovered icon is used. If an icon font icon is used, this property is ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setMaximumFilenameLength",
          "visibility": "public",
          "since": "1.24.0",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iMaximumFilenameLength",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>maximumFilenameLength</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaximumFilenameLength maximumFilenameLength}.\n\nThe maximum length of a filename which the <code>FileUploader</code> will accept.\n\nIf the maximum filename length is exceeded, the corresponding event <code>filenameLengthExceed</code> is fired.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMaximumFileSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fMaximumFileSize",
              "type": "float",
              "optional": false,
              "description": "New value for property <code>maximumFileSize</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaximumFileSize maximumFileSize}.\n\nA file size limit in megabytes which prevents the upload if at least one file exceeds it.\n\nThis property is not supported by Internet Explorer 9.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMimeType",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sMimeType",
              "type": "string[]",
              "optional": false,
              "description": "New value for property <code>mimeType</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMimeType mimeType}.\n\nThe chosen files will be checked against an array of mime types.\n\nIf at least one file does not fit the mime type restriction, the upload is prevented. <b>Note:</b> This property is not supported by Internet Explorer & Microsoft Edge.\n\nExample: <code>[\"image/png\", \"image/jpeg\"]</code>.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setMultiple",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bMultiple",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>multiple</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMultiple multiple}.\n\nAllows multiple files to be chosen and uploaded from the same folder.\n\nThis property is not supported by Internet Explorer 9.\n\n<b>Note:</b> Keep in mind that the various operating systems for mobile devices can react differently to the property so that fewer upload functions may be available in some cases.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setName",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sName",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>name</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getName name}.\n\nUnique control name for identification on the server side after sending data to the server.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setPlaceholder",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sPlaceholder",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>placeholder</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPlaceholder placeholder}.\n\nPlaceholder for the text field.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSameFilenameAllowed",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSameFilenameAllowed",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>sameFilenameAllowed</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSameFilenameAllowed sameFilenameAllowed}.\n\nIf the FileUploader is configured to upload the file directly after the file is selected, it is not allowed to upload a file with the same name again. If a user should be allowed to upload a file with the same name again this parameter has to be \"true\".\n\nA typical use case would be if the files have different paths.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setSendXHR",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSendXHR",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>sendXHR</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSendXHR sendXHR}.\n\nIf set to \"true\", the request will be sent as XHR request instead of a form submit.\n\nThis property is not supported by Internet Explorer 9.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setStyle",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sStyle",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>style</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStyle style}.\n\nStyle of the button.\n\nValues \"Transparent, \"Accept\", \"Reject\", or \"Emphasized\" are allowed.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setUploadOnChange",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUploadOnChange",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>uploadOnChange</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUploadOnChange uploadOnChange}.\n\nIf set to \"true\", the upload immediately starts after file selection. With the default setting, the upload needs to be explicitly triggered.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setUploadUrl",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sUploadUrl",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>uploadUrl</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUploadUrl uploadUrl}.\n\nUsed when URL address is on a remote server.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setUseMultipart",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bUseMultipart",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>useMultipart</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUseMultipart useMultipart}.\n\nIf set to \"false\", the request will be sent as file only request instead of a multipart/form-data request.\n\nOnly one file could be uploaded using this type of request. Required for sending such a request is to set the property <code>sendXHR</code> to \"true\". This property is not supported by Internet Explorer 9.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValue",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nValue of the path for file upload.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setValueState",
          "visibility": "public",
          "since": "1.24.0",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValueState",
              "type": "sap.ui.core.ValueState",
              "optional": false,
              "description": "New value for property <code>valueState</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValueState valueState}.\n\nVisualizes warnings or errors related to the text field.\n\nPossible values: Warning, Error, Success, None.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
        },
        {
          "name": "setValueStateText",
          "visibility": "public",
          "since": "1.52",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValueStateText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>valueStateText</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValueStateText valueStateText}.\n\nCustom text for the value state message pop-up.\n\n<b>Note:</b> If not specified, a default text, based on the value state type, will be used instead.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>width</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWidth width}.\n\nSpecifies the displayed control width.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setXhrSettings",
          "visibility": "public",
          "since": "1.52",
          "returnValue": {
            "type": "sap.ui.unified.FileUploader",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oXhrSettings",
              "type": "sap.ui.unified.FileUploaderXHRSettings",
              "optional": false,
              "description": "The xhrSettings to set"
            }
          ],
          "description": "Sets the aggregated {@link #getXhrSettings xhrSettings}."
        },
        {
          "name": "upload",
          "visibility": "public",
          "ui5-metamodel": true,
          "parameters": [
            {
              "name": "bPreProcessFiles",
              "type": "boolean",
              "optional": true,
              "description": "Set to <code>true</code> to allow pre-processing of the files before sending the request. As a result, the <code>upload</code> method becomes asynchronous. See {@link sap.ui.unified.IProcessableBlobs} for more information. <b>Note:</b> This parameter is only taken into account when <code>sendXHR</code> is set to <code>true</code>."
            }
          ],
          "description": "Starts the upload (as defined by uploadUrl)."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.FileUploaderParameter",
      "basename": "FileUploaderParameter",
      "resource": "sap/ui/unified/FileUploaderParameter.js",
      "module": "sap/ui/unified/FileUploaderParameter",
      "export": "",
      "static": true,
      "visibility": "public",
      "extends": "sap.ui.core.Element",
      "description": "Represents a parameter for the FileUploader which is rendered as a hidden inputfield.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "name",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "since": "1.12.2",
            "description": "The name of the hidden inputfield.",
            "methods": ["getName", "setName"]
          },
          {
            "name": "value",
            "type": "string",
            "defaultValue": null,
            "group": "Data",
            "visibility": "public",
            "since": "1.12.2",
            "description": "The value of the hidden inputfield.",
            "methods": ["getValue", "setValue"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new FileUploaderParameter.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.FileUploaderParameter with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.FileUploaderParameter."
        },
        {
          "name": "getName",
          "visibility": "public",
          "since": "1.12.2",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>name</code>"
          },
          "description": "Gets current value of property {@link #getName name}.\n\nThe name of the hidden inputfield."
        },
        {
          "name": "getValue",
          "visibility": "public",
          "since": "1.12.2",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nThe value of the hidden inputfield."
        },
        {
          "name": "setName",
          "visibility": "public",
          "since": "1.12.2",
          "returnValue": {
            "type": "sap.ui.unified.FileUploaderParameter",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sName",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>name</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getName name}.\n\nThe name of the hidden inputfield.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValue",
          "visibility": "public",
          "since": "1.12.2",
          "returnValue": {
            "type": "sap.ui.unified.FileUploaderParameter",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValue",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nThe value of the hidden inputfield.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.FileUploaderXHRSettings",
      "basename": "FileUploaderXHRSettings",
      "resource": "sap/ui/unified/FileUploaderXHRSettings.js",
      "module": "sap/ui/unified/FileUploaderXHRSettings",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.52",
      "extends": "sap.ui.core.Element",
      "description": "Properties for the <code>XMLHttpRequest</code> object used for file uploads.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "withCredentials",
            "type": "boolean",
            "defaultValue": false,
            "group": "Data",
            "visibility": "public",
            "since": "1.52",
            "description": "Determines the value of the <code>XMLHttpRequest.withCredentials</code> property",
            "methods": ["getWithCredentials", "setWithCredentials"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new FileUploaderXHRSettings.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.FileUploaderXHRSettings with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.FileUploaderXHRSettings."
        },
        {
          "name": "getWithCredentials",
          "visibility": "public",
          "since": "1.52",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>withCredentials</code>"
          },
          "description": "Gets current value of property {@link #getWithCredentials withCredentials}.\n\nDetermines the value of the <code>XMLHttpRequest.withCredentials</code> property\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setWithCredentials",
          "visibility": "public",
          "since": "1.52",
          "returnValue": {
            "type": "sap.ui.unified.FileUploaderXHRSettings",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bWithCredentials",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>withCredentials</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getWithCredentials withCredentials}.\n\nDetermines the value of the <code>XMLHttpRequest.withCredentials</code> property\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.unified.GroupAppointmentsMode",
      "basename": "GroupAppointmentsMode",
      "resource": "sap/ui/unified/library.js",
      "module": "sap/ui/unified/library",
      "export": "GroupAppointmentsMode",
      "static": true,
      "visibility": "public",
      "since": "1.48.0",
      "description": "Types of display mode for overlapping appointments.",
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "enum" },
      "properties": [
        {
          "name": "Collapsed",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Overlapping appointments are displayed as a collapsed group appointment."
        },
        {
          "name": "Expanded",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Overlapping appointments are displayed individually (expanded from a group)."
        }
      ]
    },
    {
      "kind": "interface",
      "name": "sap.ui.unified.IProcessableBlobs",
      "basename": "IProcessableBlobs",
      "resource": "sap/ui/unified/library.js",
      "module": "sap/ui/unified/library",
      "static": true,
      "visibility": "public",
      "description": "Marker interface for controls that process instances of <code>window.Blob</code>, such as <code>window.File</code>. The implementation of this Interface should implement the following Interface methods: <ul> <li><code>getProcessedBlobsFromArray</code></li> </ul>",
      "ui5-metamodel": true,
      "methods": [
        {
          "name": "getProcessedBlobsFromArray",
          "visibility": "public",
          "static": true,
          "since": "1.52",
          "returnValue": {
            "type": "Promise",
            "description": "A Promise that resolves with an array of Blobs which is used for the final uploading."
          },
          "parameters": [
            {
              "name": "aBlobs",
              "type": "Blob[]",
              "optional": false,
              "description": "The initial Blobs which can be used to determine a new array of Blobs for further processing."
            }
          ],
          "description": "Allows to process Blobs before they get uploaded. This API can be used to create custom Blobs and upload these custom Blobs instead of the received/initials Blobs in the parameter <code>aBlobs</code>. One use case could be to create and upload zip archives based on the passed Blobs. The default implementation of this API should simply resolve with the received Blobs (parameter <code>aBlobs</code>)."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.Menu",
      "basename": "Menu",
      "resource": "sap/ui/unified/Menu.js",
      "module": "sap/ui/unified/Menu",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.21.0",
      "extends": "sap.ui.core.Control",
      "implements": ["sap.ui.core.IContextMenu"],
      "description": "A menu is an interactive element which provides a choice of different actions to the user. These actions (items) can also be organized in submenus. Like other dialog-like controls, the menu is not rendered within the control hierarchy. Instead it can be opened at a specified position via a function call.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "enabled",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "When a menu is disabled none of its items can be selected by the user. The enabled property of an item (@link sap.ui.unified.MenuItemBase#getEnabled) has no effect when the menu of the item is disabled.",
            "methods": ["getEnabled", "setEnabled"]
          },
          {
            "name": "ariaDescription",
            "type": "string",
            "defaultValue": null,
            "group": "Accessibility",
            "visibility": "public",
            "description": "Accessible label / description of the menu for assistive technologies like screenreaders.",
            "deprecated": {
              "since": "1.27.0",
              "text": "replaced by <code>ariaLabelledBy</code> association"
            },
            "methods": ["getAriaDescription", "setAriaDescription"]
          },
          {
            "name": "maxVisibleItems",
            "type": "int",
            "defaultValue": 0,
            "group": "Behavior",
            "visibility": "public",
            "description": "The maximum number of items which are displayed before an overflow mechanism takes effect. A value smaller than 1 means an infinite number of visible items. The overall height of the menu is limited by the height of the screen. If the maximum possible height is reached, an overflow takes effect, even if the maximum number of visible items is not yet reached.",
            "methods": ["getMaxVisibleItems", "setMaxVisibleItems"]
          },
          {
            "name": "pageSize",
            "type": "int",
            "defaultValue": 5,
            "group": "Behavior",
            "visibility": "public",
            "since": "1.25.0",
            "description": "The keyboard can be used to navigate through the items of a menu. Beside the arrow keys for single steps and the <i>Home</i> / <i>End</i> keys for jumping to the first / last item, the <i>Page Up</i> / <i>Page Down</i> keys can be used to jump an arbitrary number of items up or down. This number can be defined via the <code>pageSize</code> property. For values smaller than 1, paging behaves in a similar way to when using the <i>Home</i> / <i>End</i> keys. If the value equals 1, the paging behavior is similar to that of the arrow keys.",
            "methods": ["getPageSize", "setPageSize"]
          }
        ],
        "aggregations": [
          {
            "name": "items",
            "singularName": "item",
            "type": "sap.ui.unified.MenuItemBase",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The available actions to be displayed as items of the menu.",
            "methods": [
              "getItems",
              "destroyItems",
              "insertItem",
              "addItem",
              "removeItem",
              "indexOfItem",
              "removeAllItems"
            ]
          }
        ],
        "defaultAggregation": "items",
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "since": "1.26.3",
            "description": "Reference to accessible labels (ids of existing DOM elements or controls) for assistive technologies like screenreaders.",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "itemSelect",
            "visibility": "public",
            "description": "Fired on the root menu of a menu hierarchy whenever a user selects an item within the menu or within one of its direct or indirect submenus. <b>Note:</b> There is also a select event available for each single menu item. This event and the event of the menu items are redundant.",
            "parameters": {
              "item": {
                "name": "item",
                "type": "sap.ui.unified.MenuItemBase",
                "description": "The action (item) which was selected by the user."
              }
            },
            "methods": [
              "attachItemSelect",
              "detachItemSelect",
              "fireItemSelect"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "Id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new Menu control.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "itemSelect",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "item": {
                      "name": "item",
                      "type": "sap.ui.unified.MenuItemBase",
                      "optional": false,
                      "description": "The action (item) which was selected by the user."
                    }
                  }
                }
              }
            }
          ],
          "description": "Fired on the root menu of a menu hierarchy whenever a user selects an item within the menu or within one of its direct or indirect submenus. <b>Note:</b> There is also a select event available for each single menu item. This event and the event of the menu items are redundant."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "since": "1.26.3",
          "returnValue": {
            "type": "sap.ui.unified.Menu",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Menu",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.ui.unified.MenuItemBase",
              "optional": false,
              "description": "The item to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some item to the aggregation {@link #getItems items}."
        },
        {
          "name": "attachItemSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Menu",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.Menu</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:itemSelect itemSelect} event of this <code>sap.ui.unified.Menu</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.Menu</code> itself.\n\nFired on the root menu of a menu hierarchy whenever a user selects an item within the menu or within one of its direct or indirect submenus. <b>Note:</b> There is also a select event available for each single menu item. This event and the event of the menu items are redundant."
        },
        {
          "name": "close",
          "visibility": "public",
          "ui5-metamodel": true,
          "description": "Closes the menu."
        },
        {
          "name": "destroyItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Menu",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the items in the aggregation {@link #getItems items}."
        },
        {
          "name": "detachItemSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Menu",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:itemSelect itemSelect} event of this <code>sap.ui.unified.Menu</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.Menu with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireItemSelect",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.Menu",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "item": {
                  "name": "item",
                  "type": "sap.ui.unified.MenuItemBase",
                  "optional": true,
                  "description": "The action (item) which was selected by the user."
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:itemSelect itemSelect} to attached listeners."
        },
        {
          "name": "getAriaDescription",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>ariaDescription</code>"
          },
          "description": "Gets current value of property {@link #getAriaDescription ariaDescription}.\n\nAccessible label / description of the menu for assistive technologies like screenreaders.",
          "deprecated": {
            "since": "1.27.0",
            "text": "replaced by <code>ariaLabelledBy</code> association"
          }
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "since": "1.26.3",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enabled</code>"
          },
          "description": "Gets current value of property {@link #getEnabled enabled}.\n\nWhen a menu is disabled none of its items can be selected by the user. The enabled property of an item (@link sap.ui.unified.MenuItemBase#getEnabled) has no effect when the menu of the item is disabled.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getItems",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.MenuItemBase[]" },
          "description": "Gets content of aggregation {@link #getItems items}.\n\nThe available actions to be displayed as items of the menu."
        },
        {
          "name": "getMaxVisibleItems",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>maxVisibleItems</code>"
          },
          "description": "Gets current value of property {@link #getMaxVisibleItems maxVisibleItems}.\n\nThe maximum number of items which are displayed before an overflow mechanism takes effect. A value smaller than 1 means an infinite number of visible items. The overall height of the menu is limited by the height of the screen. If the maximum possible height is reached, an overflow takes effect, even if the maximum number of visible items is not yet reached.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.Menu."
        },
        {
          "name": "getPageSize",
          "visibility": "public",
          "since": "1.25.0",
          "returnValue": {
            "type": "int",
            "description": "Value of property <code>pageSize</code>"
          },
          "description": "Gets current value of property {@link #getPageSize pageSize}.\n\nThe keyboard can be used to navigate through the items of a menu. Beside the arrow keys for single steps and the <i>Home</i> / <i>End</i> keys for jumping to the first / last item, the <i>Page Up</i> / <i>Page Down</i> keys can be used to jump an arbitrary number of items up or down. This number can be defined via the <code>pageSize</code> property. For values smaller than 1, paging behaves in a similar way to when using the <i>Home</i> / <i>End</i> keys. If the value equals 1, the paging behavior is similar to that of the arrow keys.\n\nDefault value is <code>5</code>."
        },
        {
          "name": "indexOfItem",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.ui.unified.MenuItemBase",
              "optional": false,
              "description": "The item whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.MenuItemBase</code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Menu",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oItem",
              "type": "sap.ui.unified.MenuItemBase",
              "optional": false,
              "description": "The item to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the item should be inserted at; for a negative value of <code>iIndex</code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position"
            }
          ],
          "description": "Inserts a item into the aggregation {@link #getItems items}."
        },
        {
          "name": "open",
          "visibility": "public",
          "ui5-metamodel": true,
          "parameters": [
            {
              "name": "bWithKeyboard",
              "type": "boolean",
              "optional": false,
              "description": "Indicates whether or not the first item shall be highlighted when the menu is opened (keyboard case)"
            },
            {
              "name": "oOpenerRef",
              "type": "sap.ui.core.Element|Element",
              "optional": false,
              "description": "The element which will get the focus back again after the menu was closed"
            },
            {
              "name": "my",
              "type": "sap.ui.core.Dock",
              "optional": false,
              "description": "The reference docking location of the menu for positioning the menu on the screen"
            },
            {
              "name": "at",
              "type": "sap.ui.core.Dock",
              "optional": false,
              "description": "The 'of' element's reference docking location for positioning the menu on the screen"
            },
            {
              "name": "of",
              "type": "sap.ui.core.Element|Element",
              "optional": false,
              "description": "The menu is positioned relatively to this element based on the given dock locations"
            },
            {
              "name": "offset",
              "type": "string",
              "optional": true,
              "description": "The offset relative to the docking point, specified as a string with space-separated pixel values (e.g. \"10 0\" to move the popup 10 pixels to the right)"
            },
            {
              "name": "collision",
              "type": "sap.ui.core.Collision",
              "optional": true,
              "description": "The collision defines how the position of the menu should be adjusted in case it overflows the window in some direction"
            }
          ],
          "description": "Opens the menu at the specified position.\n\nThe position of the menu is defined relative to an element in the visible DOM by specifying the docking location of the menu and of the related element.\n\nSee {@link sap.ui.core.Popup#open Popup#open} for further details about popup positioning."
        },
        {
          "name": "openAsContextMenu",
          "visibility": "public",
          "parameters": [
            {
              "name": "oEvent",
              "type": "jQuery.Event|object",
              "optional": false,
              "description": "The event object or an object containing offsetX, offsetY values and left, top values of the element's position"
            },
            {
              "name": "oOpenerRef",
              "type": "sap.ui.core.Element|HTMLElement",
              "optional": false,
              "description": "Might be UI5 Element or DOM Element"
            }
          ],
          "description": "Opens the menu as a context menu."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "since": "1.26.3",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.MenuItemBase[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "since": "1.26.3",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.MenuItemBase",
            "description": "The removed item or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vItem",
              "type": "int|string|sap.ui.unified.MenuItemBase",
              "optional": false,
              "description": "The item to remove or its index or id"
            }
          ],
          "description": "Removes a item from the aggregation {@link #getItems items}."
        },
        {
          "name": "setAriaDescription",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Menu",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sAriaDescription",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>ariaDescription</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getAriaDescription ariaDescription}.\n\nAccessible label / description of the menu for assistive technologies like screenreaders.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
          "deprecated": {
            "since": "1.27.0",
            "text": "replaced by <code>ariaLabelledBy</code> association"
          }
        },
        {
          "name": "setEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Menu",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnabled",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enabled</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnabled enabled}.\n\nWhen a menu is disabled none of its items can be selected by the user. The enabled property of an item (@link sap.ui.unified.MenuItemBase#getEnabled) has no effect when the menu of the item is disabled.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setMaxVisibleItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Menu",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iMaxVisibleItems",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>maxVisibleItems</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getMaxVisibleItems maxVisibleItems}.\n\nThe maximum number of items which are displayed before an overflow mechanism takes effect. A value smaller than 1 means an infinite number of visible items. The overall height of the menu is limited by the height of the screen. If the maximum possible height is reached, an overflow takes effect, even if the maximum number of visible items is not yet reached.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>0</code>."
        },
        {
          "name": "setPageSize",
          "visibility": "public",
          "since": "1.25.0",
          "returnValue": {
            "type": "sap.ui.unified.Menu",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "iPageSize",
              "type": "int",
              "optional": false,
              "description": "New value for property <code>pageSize</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getPageSize pageSize}.\n\nThe keyboard can be used to navigate through the items of a menu. Beside the arrow keys for single steps and the <i>Home</i> / <i>End</i> keys for jumping to the first / last item, the <i>Page Up</i> / <i>Page Down</i> keys can be used to jump an arbitrary number of items up or down. This number can be defined via the <code>pageSize</code> property. For values smaller than 1, paging behaves in a similar way to when using the <i>Home</i> / <i>End</i> keys. If the value equals 1, the paging behavior is similar to that of the arrow keys.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>5</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.MenuItem",
      "basename": "MenuItem",
      "resource": "sap/ui/unified/MenuItem.js",
      "module": "sap/ui/unified/MenuItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.21.0",
      "extends": "sap.ui.unified.MenuItemBase",
      "description": "Standard item to be used inside a menu. A menu item represents an action which can be selected by the user in the menu or it can provide a submenu to organize the actions hierarchically.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "text",
            "type": "string",
            "defaultValue": "",
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines the text which should be displayed on the item.",
            "methods": ["getText", "setText"]
          },
          {
            "name": "icon",
            "type": "sap.ui.core.URI",
            "defaultValue": "",
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines the icon of the {@link sap.ui.core.IconPool sap.ui.core.IconPool} or an image which should be displayed on the item.",
            "methods": ["getIcon", "setIcon"]
          }
        ],
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "Id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new MenuItem element.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.MenuItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.MenuItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.unified.MenuItemBase.extend}."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>icon</code>"
          },
          "description": "Gets current value of property {@link #getIcon icon}.\n\nDefines the icon of the {@link sap.ui.core.IconPool sap.ui.core.IconPool} or an image which should be displayed on the item.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.MenuItem."
        },
        {
          "name": "getText",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>text</code>"
          },
          "description": "Gets current value of property {@link #getText text}.\n\nDefines the text which should be displayed on the item.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.MenuItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIcon",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>icon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIcon icon}.\n\nDefines the icon of the {@link sap.ui.core.IconPool sap.ui.core.IconPool} or an image which should be displayed on the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "setText",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.MenuItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sText",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>text</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getText text}.\n\nDefines the text which should be displayed on the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.MenuItemBase",
      "basename": "MenuItemBase",
      "resource": "sap/ui/unified/MenuItemBase.js",
      "module": "sap/ui/unified/MenuItemBase",
      "export": "",
      "abstract": true,
      "static": true,
      "visibility": "public",
      "since": "1.21.0",
      "extends": "sap.ui.core.Element",
      "description": "Abstract base class for menu item which provides common properties and events for all concrete item implementations.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "enabled",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "When an item is disabled the item can not be selected by the user. The enabled property of the item has no effect when the menu of the item is disabled ({@link sap.ui.unified.Menu#getEnabled Menu#getEnabled}).",
            "methods": ["getEnabled", "setEnabled"]
          },
          {
            "name": "visible",
            "type": "boolean",
            "defaultValue": true,
            "group": "Behavior",
            "visibility": "public",
            "description": "Invisible items do not appear in the menu.",
            "methods": ["getVisible", "setVisible"]
          },
          {
            "name": "startsSection",
            "type": "boolean",
            "defaultValue": false,
            "group": "Behavior",
            "visibility": "public",
            "description": "Defines whether a visual separator should be rendered before the item. <b>Note:</b> If an item is invisible also the separator of this item is not shown.",
            "methods": ["getStartsSection", "setStartsSection"]
          }
        ],
        "aggregations": [
          {
            "name": "submenu",
            "singularName": "submenu",
            "type": "sap.ui.unified.Menu",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "An optional submenu of the item which is opened when the item is selected by the user.",
            "methods": ["getSubmenu", "destroySubmenu", "setSubmenu"]
          }
        ],
        "defaultAggregation": "submenu",
        "events": [
          {
            "name": "select",
            "visibility": "public",
            "description": "Fired when the item is selected by the user. <b>Note:</b> The event is also available for items which have a submenu. In general, applications must not handle event in this case because the user selection opens the sub menu.",
            "parameters": {
              "item": {
                "name": "item",
                "type": "sap.ui.unified.MenuItemBase",
                "description": "The current item"
              }
            },
            "methods": ["attachSelect", "detachSelect", "fireSelect"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "Id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Abstract base class <code>MenuItemBase</code> for menu item elements. Please use concrete subclasses.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "select",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false,
                  "parameterProperties": {
                    "item": {
                      "name": "item",
                      "type": "sap.ui.unified.MenuItemBase",
                      "optional": false,
                      "description": "The current item"
                    }
                  }
                }
              }
            }
          ],
          "description": "Fired when the item is selected by the user. <b>Note:</b> The event is also available for items which have a submenu. In general, applications must not handle event in this case because the user selection opens the sub menu."
        }
      ],
      "methods": [
        {
          "name": "attachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.MenuItemBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.MenuItemBase</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:select select} event of this <code>sap.ui.unified.MenuItemBase</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.MenuItemBase</code> itself.\n\nFired when the item is selected by the user. <b>Note:</b> The event is also available for items which have a submenu. In general, applications must not handle event in this case because the user selection opens the sub menu."
        },
        {
          "name": "destroySubmenu",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.MenuItemBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the submenu in the aggregation {@link #getSubmenu submenu}."
        },
        {
          "name": "detachSelect",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.MenuItemBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:select select} event of this <code>sap.ui.unified.MenuItemBase</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.MenuItemBase with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "fireSelect",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.MenuItemBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "parameterProperties": {
                "item": {
                  "name": "item",
                  "type": "sap.ui.unified.MenuItemBase",
                  "optional": true,
                  "description": "The current item"
                }
              },
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:select select} to attached listeners."
        },
        {
          "name": "getEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>enabled</code>"
          },
          "description": "Gets current value of property {@link #getEnabled enabled}.\n\nWhen an item is disabled the item can not be selected by the user. The enabled property of the item has no effect when the menu of the item is disabled ({@link sap.ui.unified.Menu#getEnabled Menu#getEnabled}).\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.MenuItemBase."
        },
        {
          "name": "getStartsSection",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>startsSection</code>"
          },
          "description": "Gets current value of property {@link #getStartsSection startsSection}.\n\nDefines whether a visual separator should be rendered before the item. <b>Note:</b> If an item is invisible also the separator of this item is not shown.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getSubmenu",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.Menu" },
          "description": "Gets content of aggregation {@link #getSubmenu submenu}.\n\nAn optional submenu of the item which is opened when the item is selected by the user."
        },
        {
          "name": "getVisible",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>visible</code>"
          },
          "description": "Gets current value of property {@link #getVisible visible}.\n\nInvisible items do not appear in the menu.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "hover",
          "visibility": "protected",
          "parameters": [
            {
              "name": "bHovered",
              "type": "boolean",
              "optional": false,
              "description": "Specifies whether the item is currently hovered or not."
            },
            {
              "name": "oMenu",
              "type": "sap.ui.unified.Menu",
              "optional": false,
              "description": "The menu to which this item belongs"
            }
          ],
          "description": "Changes the visual hover state of the menu item.\n\nSubclasses may override this function."
        },
        {
          "name": "onAfterRendering",
          "visibility": "protected",
          "description": "Informs the item that the item HTML is now applied to the DOM.\n\nSubclasses may override this function."
        },
        {
          "name": "onSubmenuToggle",
          "visibility": "protected",
          "parameters": [
            {
              "name": "bOpened",
              "type": "boolean",
              "optional": false,
              "description": "Specifies whether the submenu of the item is opened or closed"
            }
          ],
          "description": "Event handler which is called whenever the submenu of the item is opened or closed.\n\nSubclasses may override this function."
        },
        {
          "name": "render",
          "visibility": "protected",
          "parameters": [
            {
              "name": "oRenderManager",
              "type": "sap.ui.core.RenderManager",
              "optional": false,
              "description": "The <code>RenderManager</code> that can be used for writing to the render-output-buffer"
            },
            {
              "name": "oItem",
              "type": "sap.ui.unified.MenuItemBase",
              "optional": false,
              "description": "The item which should be rendered"
            },
            {
              "name": "oMenu",
              "type": "sap.ui.unified.Menu",
              "optional": false,
              "description": "The menu to which this item belongs"
            }
          ],
          "description": "Produces the HTML of an item and writes it to render-output-buffer during the rendering of the corresponding menu.\n\nSubclasses may override this function."
        },
        {
          "name": "setEnabled",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.MenuItemBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bEnabled",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>enabled</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getEnabled enabled}.\n\nWhen an item is disabled the item can not be selected by the user. The enabled property of the item has no effect when the menu of the item is disabled ({@link sap.ui.unified.Menu#getEnabled Menu#getEnabled}).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setStartsSection",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.MenuItemBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bStartsSection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>startsSection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStartsSection startsSection}.\n\nDefines whether a visual separator should be rendered before the item. <b>Note:</b> If an item is invisible also the separator of this item is not shown.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setSubmenu",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.MenuItemBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSubmenu",
              "type": "sap.ui.unified.Menu",
              "optional": false,
              "description": "The submenu to set"
            }
          ],
          "description": "Sets the aggregated {@link #getSubmenu submenu}."
        },
        {
          "name": "setVisible",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.MenuItemBase",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bVisible",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>visible</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getVisible visible}.\n\nInvisible items do not appear in the menu.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.MenuTextFieldItem",
      "basename": "MenuTextFieldItem",
      "resource": "sap/ui/unified/MenuTextFieldItem.js",
      "module": "sap/ui/unified/MenuTextFieldItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.21.0",
      "extends": "sap.ui.unified.MenuItemBase",
      "description": "Special menu item which contains a label and a text field. This menu item is e.g. helpful for filter implementations. The aggregation <code>submenu</code> (inherited from parent class) is not supported for this type of menu item.",
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "label",
            "type": "string",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines the label of the text field of the item.",
            "methods": ["getLabel", "setLabel"]
          },
          {
            "name": "icon",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines the icon of the {@link sap.ui.core.IconPool sap.ui.core.IconPool} or an image which should be displayed on the item.",
            "methods": ["getIcon", "setIcon"]
          },
          {
            "name": "value",
            "type": "string",
            "defaultValue": null,
            "group": "Misc",
            "visibility": "public",
            "description": "Defines the value of the text field of the item.",
            "methods": ["getValue", "setValue"]
          },
          {
            "name": "valueState",
            "type": "sap.ui.core.ValueState",
            "defaultValue": "None",
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines the value state of the text field of the item. This allows you to visualize e.g. warnings or errors.",
            "methods": ["getValueState", "setValueState"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "Id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "Initial settings for the new control"
          }
        ],
        "description": "Constructor for a new MenuTextFieldItem element.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "destroySubmenu",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.MenuTextFieldItem",
            "description": "<code>this</code> to allow method chaining"
          },
          "description": "The aggregation <code>submenu</code> (inherited from parent class) is not supported for this type of menu item.",
          "deprecated": {
            "since": "1.21",
            "text": "the aggregation <code>submenu</code> (inherited from parent class) is not supported for this type of menu item."
          }
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.MenuTextFieldItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.unified.MenuItemBase.extend}."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>icon</code>"
          },
          "description": "Gets current value of property {@link #getIcon icon}.\n\nDefines the icon of the {@link sap.ui.core.IconPool sap.ui.core.IconPool} or an image which should be displayed on the item."
        },
        {
          "name": "getLabel",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>label</code>"
          },
          "description": "Gets current value of property {@link #getLabel label}.\n\nDefines the label of the text field of the item."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.MenuTextFieldItem."
        },
        {
          "name": "getSubmenu",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.Menu" },
          "description": "The aggregation <code>submenu</code> (inherited from parent class) is not supported for this type of menu item.",
          "deprecated": {
            "since": "1.21",
            "text": "the aggregation <code>submenu</code> (inherited from parent class) is not supported for this type of menu item."
          }
        },
        {
          "name": "getValue",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>value</code>"
          },
          "description": "Gets current value of property {@link #getValue value}.\n\nDefines the value of the text field of the item."
        },
        {
          "name": "getValueState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ValueState",
            "description": "Value of property <code>valueState</code>"
          },
          "description": "Gets current value of property {@link #getValueState valueState}.\n\nDefines the value state of the text field of the item. This allows you to visualize e.g. warnings or errors.\n\nDefault value is <code>None</code>."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.MenuTextFieldItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIcon",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>icon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIcon icon}.\n\nDefines the icon of the {@link sap.ui.core.IconPool sap.ui.core.IconPool} or an image which should be displayed on the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setLabel",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.MenuTextFieldItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sLabel",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>label</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getLabel label}.\n\nDefines the label of the text field of the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSubmenu",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.MenuTextFieldItem",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "oMenu",
              "type": "sap.ui.unified.Menu",
              "optional": false,
              "description": "The menu to which the sap.ui.unified.Submenu should be set"
            }
          ],
          "description": "The aggregation <code>submenu</code> (inherited from parent class) is not supported for this type of menu item.",
          "deprecated": {
            "since": "1.21",
            "text": "the aggregation <code>submenu</code> (inherited from parent class) is not supported for this type of menu item."
          }
        },
        {
          "name": "setValue",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.MenuTextFieldItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValue",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>value</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValue value}.\n\nDefines the value of the text field of the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setValueState",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.MenuTextFieldItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sValueState",
              "type": "sap.ui.core.ValueState",
              "optional": false,
              "description": "New value for property <code>valueState</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getValueState valueState}.\n\nDefines the value state of the text field of the item. This allows you to visualize e.g. warnings or errors.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>None</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.Shell",
      "basename": "Shell",
      "resource": "sap/ui/unified/Shell.js",
      "module": "sap/ui/unified/Shell",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.15.1",
      "extends": "sap.ui.unified.ShellLayout",
      "description": "The shell control is meant as root control (full-screen) of an application. It was build as root control of the Fiori Launchpad application and provides the basic capabilities for this purpose. Do not use this control within applications which run inside the Fiori Lauchpad and do not use it for other scenarios than the root control usecase.",
      "deprecated": { "since": "1.44.0" },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "icon",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "The application icon. If a custom header is set this property has no effect.",
            "methods": ["getIcon", "setIcon"]
          },
          {
            "name": "showCurtain",
            "type": "boolean",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Shows / Hides the curtain.",
            "deprecated": {
              "since": "1.16.3",
              "text": "Curtain is deprecated and replaced by ShellOverlay mechanism."
            },
            "methods": ["getShowCurtain", "setShowCurtain"]
          },
          {
            "name": "showCurtainPane",
            "type": "boolean",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Shows / Hides the side pane on the curtain.",
            "deprecated": {
              "since": "1.16.3",
              "text": "Curtain is deprecated and replaced by ShellOverlay mechanism."
            },
            "methods": ["getShowCurtainPane", "setShowCurtainPane"]
          },
          {
            "name": "searchVisible",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.18",
            "description": "If set to false, the search area (aggregation 'search') is hidden. If a custom header is set this property has no effect.",
            "methods": ["getSearchVisible", "setSearchVisible"]
          }
        ],
        "aggregations": [
          {
            "name": "curtainContent",
            "singularName": "curtainContent",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The content to appear in the curtain area.",
            "methods": [
              "getCurtainContent",
              "destroyCurtainContent",
              "insertCurtainContent",
              "addCurtainContent",
              "removeCurtainContent",
              "indexOfCurtainContent",
              "removeAllCurtainContent"
            ]
          },
          {
            "name": "curtainPaneContent",
            "singularName": "curtainPaneContent",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The content to appear in the pane area of the curtain.",
            "methods": [
              "getCurtainPaneContent",
              "destroyCurtainPaneContent",
              "insertCurtainPaneContent",
              "addCurtainPaneContent",
              "removeCurtainPaneContent",
              "indexOfCurtainPaneContent",
              "removeAllCurtainPaneContent"
            ]
          },
          {
            "name": "headItems",
            "singularName": "headItem",
            "type": "sap.ui.unified.ShellHeadItem",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The buttons shown in the begin (left in left-to-right case) of the Shell header. Currently max. 3 visible buttons are supported. If a custom header is set this aggregation has no effect.",
            "methods": [
              "getHeadItems",
              "destroyHeadItems",
              "insertHeadItem",
              "addHeadItem",
              "removeHeadItem",
              "indexOfHeadItem",
              "removeAllHeadItems"
            ]
          },
          {
            "name": "headEndItems",
            "singularName": "headEndItem",
            "type": "sap.ui.unified.ShellHeadItem",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The buttons shown in the end (right in left-to-right case) of the Shell header. Currently max. 3 visible buttons are supported (when user is set only 1). If a custom header is set this aggregation has no effect.",
            "methods": [
              "getHeadEndItems",
              "destroyHeadEndItems",
              "insertHeadEndItem",
              "addHeadEndItem",
              "removeHeadEndItem",
              "indexOfHeadEndItem",
              "removeAllHeadEndItems"
            ]
          },
          {
            "name": "search",
            "singularName": "search",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Experimental (This aggregation might change in future!): The search control which should be displayed in the shell header. If a custom header is set this aggregation has no effect.",
            "methods": ["getSearch", "destroySearch", "setSearch"]
          },
          {
            "name": "user",
            "singularName": "user",
            "type": "sap.ui.unified.ShellHeadUserItem",
            "cardinality": "0..1",
            "visibility": "public",
            "since": "1.22.0",
            "description": "The user item which is rendered in the shell header beside the items. If a custom header is set this aggregation has no effect.",
            "methods": ["getUser", "destroyUser", "setUser"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new Shell.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addCurtainContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCurtainContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The curtainContent to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some curtainContent to the aggregation {@link #getCurtainContent curtainContent}."
        },
        {
          "name": "addCurtainPaneContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCurtainPaneContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The curtainPaneContent to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some curtainPaneContent to the aggregation {@link #getCurtainPaneContent curtainPaneContent}."
        },
        {
          "name": "addHeadEndItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oHeadEndItem",
              "type": "sap.ui.unified.ShellHeadItem",
              "optional": false,
              "description": "The headEndItem to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some headEndItem to the aggregation {@link #getHeadEndItems headEndItems}."
        },
        {
          "name": "addHeadItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oHeadItem",
              "type": "sap.ui.unified.ShellHeadItem",
              "optional": false,
              "description": "The headItem to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some headItem to the aggregation {@link #getHeadItems headItems}."
        },
        {
          "name": "destroyCurtainContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the curtainContent in the aggregation {@link #getCurtainContent curtainContent}."
        },
        {
          "name": "destroyCurtainPaneContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the curtainPaneContent in the aggregation {@link #getCurtainPaneContent curtainPaneContent}."
        },
        {
          "name": "destroyHeadEndItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the headEndItems in the aggregation {@link #getHeadEndItems headEndItems}."
        },
        {
          "name": "destroyHeader",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "<code>this</code> to allow method chaining"
          },
          "description": "Destroys the header in the aggregation named <code>header</code>, but only if a custom header is set. The default header can not be destroyed."
        },
        {
          "name": "destroyHeadItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the headItems in the aggregation {@link #getHeadItems headItems}."
        },
        {
          "name": "destroySearch",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the search in the aggregation {@link #getSearch search}."
        },
        {
          "name": "destroyUser",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the user in the aggregation {@link #getUser user}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.Shell with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.unified.ShellLayout.extend}."
        },
        {
          "name": "getCurtainContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getCurtainContent curtainContent}.\n\nThe content to appear in the curtain area."
        },
        {
          "name": "getCurtainPaneContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getCurtainPaneContent curtainPaneContent}.\n\nThe content to appear in the pane area of the curtain."
        },
        {
          "name": "getHeadEndItems",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.ShellHeadItem[]" },
          "description": "Gets content of aggregation {@link #getHeadEndItems headEndItems}.\n\nThe buttons shown in the end (right in left-to-right case) of the Shell header. Currently max. 3 visible buttons are supported (when user is set only 1). If a custom header is set this aggregation has no effect."
        },
        {
          "name": "getHeadItems",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.unified.ShellHeadItem[]" },
          "description": "Gets content of aggregation {@link #getHeadItems headItems}.\n\nThe buttons shown in the begin (left in left-to-right case) of the Shell header. Currently max. 3 visible buttons are supported. If a custom header is set this aggregation has no effect."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>icon</code>"
          },
          "description": "Gets current value of property {@link #getIcon icon}.\n\nThe application icon. If a custom header is set this property has no effect."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.Shell."
        },
        {
          "name": "getSearch",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getSearch search}.\n\nExperimental (This aggregation might change in future!): The search control which should be displayed in the shell header. If a custom header is set this aggregation has no effect."
        },
        {
          "name": "getSearchVisible",
          "visibility": "public",
          "since": "1.18",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>searchVisible</code>"
          },
          "description": "Gets current value of property {@link #getSearchVisible searchVisible}.\n\nIf set to false, the search area (aggregation 'search') is hidden. If a custom header is set this property has no effect.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getShowCurtain",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showCurtain</code>"
          },
          "description": "Gets current value of property {@link #getShowCurtain showCurtain}.\n\nShows / Hides the curtain.",
          "deprecated": {
            "since": "1.16.3",
            "text": "Curtain is deprecated and replaced by ShellOverlay mechanism."
          }
        },
        {
          "name": "getShowCurtainPane",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showCurtainPane</code>"
          },
          "description": "Gets current value of property {@link #getShowCurtainPane showCurtainPane}.\n\nShows / Hides the side pane on the curtain.",
          "deprecated": {
            "since": "1.16.3",
            "text": "Curtain is deprecated and replaced by ShellOverlay mechanism."
          }
        },
        {
          "name": "getUser",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": { "type": "sap.ui.unified.ShellHeadUserItem" },
          "description": "Gets content of aggregation {@link #getUser user}.\n\nThe user item which is rendered in the shell header beside the items. If a custom header is set this aggregation has no effect."
        },
        {
          "name": "indexOfCurtainContent",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oCurtainContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The curtainContent whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getCurtainContent curtainContent}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfCurtainPaneContent",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oCurtainPaneContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The curtainPaneContent whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getCurtainPaneContent curtainPaneContent}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfHeadEndItem",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oHeadEndItem",
              "type": "sap.ui.unified.ShellHeadItem",
              "optional": false,
              "description": "The headEndItem whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.ShellHeadItem</code> in the aggregation {@link #getHeadEndItems headEndItems}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfHeadItem",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oHeadItem",
              "type": "sap.ui.unified.ShellHeadItem",
              "optional": false,
              "description": "The headItem whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.unified.ShellHeadItem</code> in the aggregation {@link #getHeadItems headItems}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertCurtainContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCurtainContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The curtainContent to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the curtainContent should be inserted at; for a negative value of <code>iIndex</code>, the curtainContent is inserted at position 0; for a value greater than the current size of the aggregation, the curtainContent is inserted at the last position"
            }
          ],
          "description": "Inserts a curtainContent into the aggregation {@link #getCurtainContent curtainContent}."
        },
        {
          "name": "insertCurtainPaneContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oCurtainPaneContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The curtainPaneContent to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the curtainPaneContent should be inserted at; for a negative value of <code>iIndex</code>, the curtainPaneContent is inserted at position 0; for a value greater than the current size of the aggregation, the curtainPaneContent is inserted at the last position"
            }
          ],
          "description": "Inserts a curtainPaneContent into the aggregation {@link #getCurtainPaneContent curtainPaneContent}."
        },
        {
          "name": "insertHeadEndItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oHeadEndItem",
              "type": "sap.ui.unified.ShellHeadItem",
              "optional": false,
              "description": "The headEndItem to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the headEndItem should be inserted at; for a negative value of <code>iIndex</code>, the headEndItem is inserted at position 0; for a value greater than the current size of the aggregation, the headEndItem is inserted at the last position"
            }
          ],
          "description": "Inserts a headEndItem into the aggregation {@link #getHeadEndItems headEndItems}."
        },
        {
          "name": "insertHeadItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oHeadItem",
              "type": "sap.ui.unified.ShellHeadItem",
              "optional": false,
              "description": "The headItem to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the headItem should be inserted at; for a negative value of <code>iIndex</code>, the headItem is inserted at position 0; for a value greater than the current size of the aggregation, the headItem is inserted at the last position"
            }
          ],
          "description": "Inserts a headItem into the aggregation {@link #getHeadItems headItems}."
        },
        {
          "name": "removeAllCurtainContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getCurtainContent curtainContent}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllCurtainPaneContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getCurtainPaneContent curtainPaneContent}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllHeadEndItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getHeadEndItems headEndItems}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllHeadItems",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadItem[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getHeadItems headItems}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeCurtainContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed curtainContent or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vCurtainContent",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The curtainContent to remove or its index or id"
            }
          ],
          "description": "Removes a curtainContent from the aggregation {@link #getCurtainContent curtainContent}."
        },
        {
          "name": "removeCurtainPaneContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed curtainPaneContent or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vCurtainPaneContent",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The curtainPaneContent to remove or its index or id"
            }
          ],
          "description": "Removes a curtainPaneContent from the aggregation {@link #getCurtainPaneContent curtainPaneContent}."
        },
        {
          "name": "removeHeadEndItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadItem",
            "description": "The removed headEndItem or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vHeadEndItem",
              "type": "int|string|sap.ui.unified.ShellHeadItem",
              "optional": false,
              "description": "The headEndItem to remove or its index or id"
            }
          ],
          "description": "Removes a headEndItem from the aggregation {@link #getHeadEndItems headEndItems}."
        },
        {
          "name": "removeHeadItem",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadItem",
            "description": "The removed headItem or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vHeadItem",
              "type": "int|string|sap.ui.unified.ShellHeadItem",
              "optional": false,
              "description": "The headItem to remove or its index or id"
            }
          ],
          "description": "Removes a headItem from the aggregation {@link #getHeadItems headItems}."
        },
        {
          "name": "setHeader",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "<code>this</code> to allow method chaining"
          },
          "parameters": [
            {
              "name": "oHeader",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The Control which should be rendered within the Shell header or <code>null</code> to render the default Shell header."
            }
          ],
          "description": "Setter for the aggregated <code>header</code>."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIcon",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>icon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIcon icon}.\n\nThe application icon. If a custom header is set this property has no effect.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSearch",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSearch",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The search to set"
            }
          ],
          "description": "Sets the aggregated {@link #getSearch search}."
        },
        {
          "name": "setSearchVisible",
          "visibility": "public",
          "since": "1.18",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSearchVisible",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>searchVisible</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSearchVisible searchVisible}.\n\nIf set to false, the search area (aggregation 'search') is hidden. If a custom header is set this property has no effect.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowCurtain",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowCurtain",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showCurtain</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowCurtain showCurtain}.\n\nShows / Hides the curtain.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
          "deprecated": {
            "since": "1.16.3",
            "text": "Curtain is deprecated and replaced by ShellOverlay mechanism."
          }
        },
        {
          "name": "setShowCurtainPane",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowCurtainPane",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showCurtainPane</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowCurtainPane showCurtainPane}.\n\nShows / Hides the side pane on the curtain.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
          "deprecated": {
            "since": "1.16.3",
            "text": "Curtain is deprecated and replaced by ShellOverlay mechanism."
          }
        },
        {
          "name": "setUser",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.unified.Shell",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oUser",
              "type": "sap.ui.unified.ShellHeadUserItem",
              "optional": false,
              "description": "The user to set"
            }
          ],
          "description": "Sets the aggregated {@link #getUser user}."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.ShellHeadItem",
      "basename": "ShellHeadItem",
      "resource": "sap/ui/unified/ShellHeadItem.js",
      "module": "sap/ui/unified/ShellHeadItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.15.1",
      "extends": "sap.ui.core.Element",
      "description": "Header Action item of the Shell.",
      "deprecated": { "since": "1.44.0" },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "startsSection",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "If set to true, a divider is displayed before the item.",
            "deprecated": {
              "since": "1.18",
              "text": "Dividers are not supported anymore."
            },
            "methods": ["getStartsSection", "setStartsSection"]
          },
          {
            "name": "showSeparator",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.22.5",
            "description": "If set to true, a separator is displayed after the item.",
            "methods": ["getShowSeparator", "setShowSeparator"]
          },
          {
            "name": "selected",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "Defines the toggle state in case the item represents a toggle button (see also property <code>toggleEnabled</code>).",
            "methods": ["getSelected", "setSelected"]
          },
          {
            "name": "toggleEnabled",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.34.3",
            "description": "If set to true, the item represents a toggle button. The <code>selected</code> property can the be used to define the toggle state. Otherwise the item is displayed as action button. In this case the <code>selected</code> property is ignored.",
            "methods": ["getToggleEnabled", "setToggleEnabled"]
          },
          {
            "name": "showMarker",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "If set to true, a theme dependent marker is shown on the item.",
            "deprecated": {
              "since": "1.18",
              "text": "Markers should not be used anymore."
            },
            "methods": ["getShowMarker", "setShowMarker"]
          },
          {
            "name": "icon",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "The icon of the item, either defined in the sap.ui.core.IconPool or a URI to a custom image. An icon must be set.",
            "methods": ["getIcon", "setIcon"]
          },
          {
            "name": "visible",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "since": "1.18",
            "description": "Invisible items are not shown on the UI.",
            "methods": ["getVisible", "setVisible"]
          }
        ],
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "Event is fired when the user presses the item.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ShellHeadItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Event is fired when the user presses the item."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.ShellHeadItem</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.ui.unified.ShellHeadItem</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.ShellHeadItem</code> itself.\n\nEvent is fired when the user presses the item."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.ui.unified.ShellHeadItem</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.ShellHeadItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>icon</code>"
          },
          "description": "Gets current value of property {@link #getIcon icon}.\n\nThe icon of the item, either defined in the sap.ui.core.IconPool or a URI to a custom image. An icon must be set."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.ShellHeadItem."
        },
        {
          "name": "getSelected",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>selected</code>"
          },
          "description": "Gets current value of property {@link #getSelected selected}.\n\nDefines the toggle state in case the item represents a toggle button (see also property <code>toggleEnabled</code>).\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getShowMarker",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showMarker</code>"
          },
          "description": "Gets current value of property {@link #getShowMarker showMarker}.\n\nIf set to true, a theme dependent marker is shown on the item.\n\nDefault value is <code>false</code>.",
          "deprecated": {
            "since": "1.18",
            "text": "Markers should not be used anymore."
          }
        },
        {
          "name": "getShowSeparator",
          "visibility": "public",
          "since": "1.22.5",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showSeparator</code>"
          },
          "description": "Gets current value of property {@link #getShowSeparator showSeparator}.\n\nIf set to true, a separator is displayed after the item.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getStartsSection",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>startsSection</code>"
          },
          "description": "Gets current value of property {@link #getStartsSection startsSection}.\n\nIf set to true, a divider is displayed before the item.\n\nDefault value is <code>false</code>.",
          "deprecated": {
            "since": "1.18",
            "text": "Dividers are not supported anymore."
          }
        },
        {
          "name": "getToggleEnabled",
          "visibility": "public",
          "since": "1.34.3",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>toggleEnabled</code>"
          },
          "description": "Gets current value of property {@link #getToggleEnabled toggleEnabled}.\n\nIf set to true, the item represents a toggle button. The <code>selected</code> property can the be used to define the toggle state. Otherwise the item is displayed as action button. In this case the <code>selected</code> property is ignored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getVisible",
          "visibility": "public",
          "since": "1.18",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>visible</code>"
          },
          "description": "Gets current value of property {@link #getVisible visible}.\n\nInvisible items are not shown on the UI.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "setIcon",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sIcon",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>icon</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getIcon icon}.\n\nThe icon of the item, either defined in the sap.ui.core.IconPool or a URI to a custom image. An icon must be set.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setSelected",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bSelected",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>selected</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSelected selected}.\n\nDefines the toggle state in case the item represents a toggle button (see also property <code>toggleEnabled</code>).\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setShowMarker",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowMarker",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showMarker</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowMarker showMarker}.\n\nIf set to true, a theme dependent marker is shown on the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
          "deprecated": {
            "since": "1.18",
            "text": "Markers should not be used anymore."
          }
        },
        {
          "name": "setShowSeparator",
          "visibility": "public",
          "since": "1.22.5",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowSeparator",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showSeparator</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowSeparator showSeparator}.\n\nIf set to true, a separator is displayed after the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setStartsSection",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bStartsSection",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>startsSection</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getStartsSection startsSection}.\n\nIf set to true, a divider is displayed before the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
          "deprecated": {
            "since": "1.18",
            "text": "Dividers are not supported anymore."
          }
        },
        {
          "name": "setToggleEnabled",
          "visibility": "public",
          "since": "1.34.3",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bToggleEnabled",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>toggleEnabled</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getToggleEnabled toggleEnabled}.\n\nIf set to true, the item represents a toggle button. The <code>selected</code> property can the be used to define the toggle state. Otherwise the item is displayed as action button. In this case the <code>selected</code> property is ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setVisible",
          "visibility": "public",
          "since": "1.18",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bVisible",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>visible</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getVisible visible}.\n\nInvisible items are not shown on the UI.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.ShellHeadUserItem",
      "basename": "ShellHeadUserItem",
      "resource": "sap/ui/unified/ShellHeadUserItem.js",
      "module": "sap/ui/unified/ShellHeadUserItem",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.22.0",
      "extends": "sap.ui.core.Element",
      "description": "User Header Action Item of the Shell.",
      "deprecated": { "since": "1.44.0" },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "element",
        "properties": [
          {
            "name": "username",
            "type": "string",
            "defaultValue": "",
            "group": "Appearance",
            "visibility": "public",
            "description": "The name of the user.",
            "methods": ["getUsername", "setUsername"]
          },
          {
            "name": "showPopupIndicator",
            "type": "boolean",
            "defaultValue": true,
            "group": "Accessibility",
            "visibility": "public",
            "since": "1.27.0",
            "description": "The user item is intended to be used for user settings. Normally these settings are done via a Menu or Dialog. If this property is set to true an indicator for such a popup mechanismn is shown in the item.",
            "methods": ["getShowPopupIndicator", "setShowPopupIndicator"]
          },
          {
            "name": "image",
            "type": "sap.ui.core.URI",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "An image of the user, normally a URI to an image but also an icon from the sap.ui.core.IconPool is possible.",
            "methods": ["getImage", "setImage"]
          }
        ],
        "associations": [
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "press",
            "visibility": "public",
            "description": "Event is fired when the user presses the button.",
            "methods": ["attachPress", "detachPress", "firePress"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ShellHeadUserItem.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "press",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Event is fired when the user presses the button."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadUserItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "attachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadUserItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.ShellHeadUserItem</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:press press} event of this <code>sap.ui.unified.ShellHeadUserItem</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.ShellHeadUserItem</code> itself.\n\nEvent is fired when the user presses the button."
        },
        {
          "name": "detachPress",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadUserItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:press press} event of this <code>sap.ui.unified.ShellHeadUserItem</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.ShellHeadUserItem with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
        },
        {
          "name": "firePress",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadUserItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:press press} to attached listeners."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getImage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.URI",
            "description": "Value of property <code>image</code>"
          },
          "description": "Gets current value of property {@link #getImage image}.\n\nAn image of the user, normally a URI to an image but also an icon from the sap.ui.core.IconPool is possible."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.ShellHeadUserItem."
        },
        {
          "name": "getShowPopupIndicator",
          "visibility": "public",
          "since": "1.27.0",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showPopupIndicator</code>"
          },
          "description": "Gets current value of property {@link #getShowPopupIndicator showPopupIndicator}.\n\nThe user item is intended to be used for user settings. Normally these settings are done via a Menu or Dialog. If this property is set to true an indicator for such a popup mechanismn is shown in the item.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getUsername",
          "visibility": "public",
          "returnValue": {
            "type": "string",
            "description": "Value of property <code>username</code>"
          },
          "description": "Gets current value of property {@link #getUsername username}.\n\nThe name of the user.\n\nDefault value is <code>empty string</code>."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "setImage",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadUserItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sImage",
              "type": "sap.ui.core.URI",
              "optional": false,
              "description": "New value for property <code>image</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getImage image}.\n\nAn image of the user, normally a URI to an image but also an icon from the sap.ui.core.IconPool is possible.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        },
        {
          "name": "setShowPopupIndicator",
          "visibility": "public",
          "since": "1.27.0",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadUserItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowPopupIndicator",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showPopupIndicator</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowPopupIndicator showPopupIndicator}.\n\nThe user item is intended to be used for user settings. Normally these settings are done via a Menu or Dialog. If this property is set to true an indicator for such a popup mechanismn is shown in the item.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setUsername",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellHeadUserItem",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sUsername",
              "type": "string",
              "optional": false,
              "description": "New value for property <code>username</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getUsername username}.\n\nThe name of the user.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>empty string</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.ShellLayout",
      "basename": "ShellLayout",
      "resource": "sap/ui/unified/ShellLayout.js",
      "module": "sap/ui/unified/ShellLayout",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.25.0",
      "extends": "sap.ui.core.Control",
      "description": "The shell layout is the base for the shell control which is meant as root control (full-screen) of an application. It was build as root control of the Fiori Launchpad application and provides the basic capabilities for this purpose. Do not use this control within applications which run inside the Fiori Lauchpad and do not use it for other scenarios than the root control usecase.",
      "deprecated": { "since": "1.44.0" },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "showPane",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "Shows / Hides the side pane.",
            "methods": ["getShowPane", "setShowPane"]
          },
          {
            "name": "headerHiding",
            "type": "boolean",
            "defaultValue": false,
            "group": "Appearance",
            "visibility": "public",
            "description": "Whether the header can be hidden (manually or automatically). This feature is only available when touch events are supported.",
            "methods": ["getHeaderHiding", "setHeaderHiding"]
          },
          {
            "name": "headerVisible",
            "type": "boolean",
            "defaultValue": true,
            "group": "Appearance",
            "visibility": "public",
            "description": "If set to false, no header (and no items, search, ...) is shown.",
            "methods": ["getHeaderVisible", "setHeaderVisible"]
          }
        ],
        "aggregations": [
          {
            "name": "content",
            "singularName": "content",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The content to appear in the main canvas.",
            "methods": [
              "getContent",
              "destroyContent",
              "insertContent",
              "addContent",
              "removeContent",
              "indexOfContent",
              "removeAllContent"
            ]
          },
          {
            "name": "paneContent",
            "singularName": "paneContent",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The content to appear in the pane area.",
            "methods": [
              "getPaneContent",
              "destroyPaneContent",
              "insertPaneContent",
              "addPaneContent",
              "removePaneContent",
              "indexOfPaneContent",
              "removeAllPaneContent"
            ]
          },
          {
            "name": "header",
            "singularName": "header",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "The control to appear in the header area.",
            "methods": ["getHeader", "destroyHeader", "setHeader"]
          },
          {
            "name": "canvasSplitContainer",
            "singularName": "canvasSplitContainer",
            "type": "sap.ui.unified.SplitContainer",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "Private storage for the internal split container for the canvas.",
            "methods": [
              "getCanvasSplitContainer",
              "destroyCanvasSplitContainer",
              "setCanvasSplitContainer"
            ]
          },
          {
            "name": "curtainSplitContainer",
            "singularName": "curtainSplitContainer",
            "type": "sap.ui.unified.SplitContainer",
            "cardinality": "0..1",
            "visibility": "hidden",
            "description": "Private storage for the internal split container for the curtain.",
            "methods": [
              "getCurtainSplitContainer",
              "destroyCurtainSplitContainer",
              "setCurtainSplitContainer"
            ]
          }
        ],
        "defaultAggregation": "content"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ShellLayout.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some content to the aggregation {@link #getContent content}."
        },
        {
          "name": "addPaneContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPaneContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The paneContent to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some paneContent to the aggregation {@link #getPaneContent paneContent}."
        },
        {
          "name": "destroyContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the content in the aggregation {@link #getContent content}."
        },
        {
          "name": "destroyHeader",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the header in the aggregation {@link #getHeader header}."
        },
        {
          "name": "destroyPaneContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the paneContent in the aggregation {@link #getPaneContent paneContent}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.ShellLayout with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getContent content}.\n\nThe content to appear in the main canvas."
        },
        {
          "name": "getHeader",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getHeader header}.\n\nThe control to appear in the header area."
        },
        {
          "name": "getHeaderHiding",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>headerHiding</code>"
          },
          "description": "Gets current value of property {@link #getHeaderHiding headerHiding}.\n\nWhether the header can be hidden (manually or automatically). This feature is only available when touch events are supported.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "getHeaderVisible",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>headerVisible</code>"
          },
          "description": "Gets current value of property {@link #getHeaderVisible headerVisible}.\n\nIf set to false, no header (and no items, search, ...) is shown.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.ShellLayout."
        },
        {
          "name": "getPaneContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getPaneContent paneContent}.\n\nThe content to appear in the pane area."
        },
        {
          "name": "getShowPane",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showPane</code>"
          },
          "description": "Gets current value of property {@link #getShowPane showPane}.\n\nShows / Hides the side pane.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "indexOfContent",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfPaneContent",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oPaneContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The paneContent whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getPaneContent paneContent}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the content should be inserted at; for a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"
            }
          ],
          "description": "Inserts a content into the aggregation {@link #getContent content}."
        },
        {
          "name": "insertPaneContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oPaneContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The paneContent to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the paneContent should be inserted at; for a negative value of <code>iIndex</code>, the paneContent is inserted at position 0; for a value greater than the current size of the aggregation, the paneContent is inserted at the last position"
            }
          ],
          "description": "Inserts a paneContent into the aggregation {@link #getPaneContent paneContent}."
        },
        {
          "name": "removeAllContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllPaneContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getPaneContent paneContent}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed content or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vContent",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The content to remove or its index or id"
            }
          ],
          "description": "Removes a content from the aggregation {@link #getContent content}."
        },
        {
          "name": "removePaneContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed paneContent or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vPaneContent",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The paneContent to remove or its index or id"
            }
          ],
          "description": "Removes a paneContent from the aggregation {@link #getPaneContent paneContent}."
        },
        {
          "name": "setHeader",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oHeader",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The header to set"
            }
          ],
          "description": "Sets the aggregated {@link #getHeader header}."
        },
        {
          "name": "setHeaderHiding",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bHeaderHiding",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>headerHiding</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeaderHiding headerHiding}.\n\nWhether the header can be hidden (manually or automatically). This feature is only available when touch events are supported.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        },
        {
          "name": "setHeaderVisible",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bHeaderVisible",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>headerVisible</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getHeaderVisible headerVisible}.\n\nIf set to false, no header (and no items, search, ...) is shown.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
        },
        {
          "name": "setShowPane",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellLayout",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowPane",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showPane</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowPane showPane}.\n\nShows / Hides the side pane.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.ShellOverlay",
      "basename": "ShellOverlay",
      "resource": "sap/ui/unified/ShellOverlay.js",
      "module": "sap/ui/unified/ShellOverlay",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.16.3",
      "extends": "sap.ui.core.Control",
      "description": "ShellOverlay to be opened in front of an sap.ui.unified.Shell",
      "deprecated": { "since": "1.44.0" },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "aggregations": [
          {
            "name": "content",
            "singularName": "content",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The content to appear in the overlay.",
            "methods": [
              "getContent",
              "destroyContent",
              "insertContent",
              "addContent",
              "removeContent",
              "indexOfContent",
              "removeAllContent"
            ]
          },
          {
            "name": "search",
            "singularName": "search",
            "type": "sap.ui.core.Control",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Experimental (This aggregation might change in future!): The search control which should be displayed in the overlay header.",
            "methods": ["getSearch", "destroySearch", "setSearch"]
          }
        ],
        "defaultAggregation": "content",
        "associations": [
          {
            "name": "shell",
            "singularName": "shell",
            "type": "sap.ui.unified.ShellLayout",
            "cardinality": "0..1",
            "visibility": "public",
            "description": "Reference to the sap.ui.unified.Shell or sap.ui.unified.ShellLayout control.",
            "methods": ["getShell", "setShell"]
          },
          {
            "name": "ariaLabelledBy",
            "singularName": "ariaLabelledBy",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
            "methods": [
              "getAriaLabelledBy",
              "addAriaLabelledBy",
              "removeAriaLabelledBy",
              "removeAllAriaLabelledBy"
            ]
          }
        ],
        "events": [
          {
            "name": "closed",
            "visibility": "public",
            "description": "Fired when the overlay was closed.",
            "methods": ["attachClosed", "detachClosed", "fireClosed"]
          }
        ]
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new ShellOverlay.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "events": [
        {
          "name": "closed",
          "visibility": "public",
          "parameters": [
            {
              "name": "oControlEvent",
              "type": "sap.ui.base.Event",
              "parameterProperties": {
                "getSource": {
                  "name": "getSource",
                  "type": "sap.ui.base.EventProvider",
                  "optional": false
                },
                "getParameters": {
                  "name": "getParameters",
                  "type": "object",
                  "optional": false
                }
              }
            }
          ],
          "description": "Fired when the overlay was closed."
        }
      ],
      "methods": [
        {
          "name": "addAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellOverlay",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "addContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellOverlay",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some content to the aggregation {@link #getContent content}."
        },
        {
          "name": "attachClosed",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellOverlay",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oData",
              "type": "object",
              "optional": true,
              "description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
            },
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object to call the event handler with. Defaults to this <code>sap.ui.unified.ShellOverlay</code> itself"
            }
          ],
          "description": "Attaches event handler <code>fnFunction</code> to the {@link #event:closed closed} event of this <code>sap.ui.unified.ShellOverlay</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.unified.ShellOverlay</code> itself.\n\nFired when the overlay was closed."
        },
        {
          "name": "close",
          "visibility": "public",
          "description": "Closes the ShellOverlay."
        },
        {
          "name": "destroyContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellOverlay",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the content in the aggregation {@link #getContent content}."
        },
        {
          "name": "destroySearch",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellOverlay",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys the search in the aggregation {@link #getSearch search}."
        },
        {
          "name": "detachClosed",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellOverlay",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "fnFunction",
              "type": "function",
              "optional": false,
              "description": "The function to be called, when the event occurs"
            },
            {
              "name": "oListener",
              "type": "object",
              "optional": true,
              "description": "Context object on which the given function had to be called"
            }
          ],
          "description": "Detaches event handler <code>fnFunction</code> from the {@link #event:closed closed} event of this <code>sap.ui.unified.ShellOverlay</code>.\n\nThe passed function and listener object must match the ones used for event registration."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.ShellOverlay with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "fireClosed",
          "visibility": "protected",
          "returnValue": {
            "type": "sap.ui.unified.ShellOverlay",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "mParameters",
              "type": "object",
              "optional": true,
              "description": "Parameters to pass along with the event"
            }
          ],
          "description": "Fires event {@link #event:closed closed} to attached listeners."
        },
        {
          "name": "getAriaLabelledBy",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID[]" },
          "description": "Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "getContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getContent content}.\n\nThe content to appear in the overlay."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.ShellOverlay."
        },
        {
          "name": "getSearch",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control" },
          "description": "Gets content of aggregation {@link #getSearch search}.\n\nExperimental (This aggregation might change in future!): The search control which should be displayed in the overlay header."
        },
        {
          "name": "getShell",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.ID" },
          "description": "ID of the element which is the current target of the association {@link #getShell shell}, or <code>null</code>."
        },
        {
          "name": "indexOfContent",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellOverlay",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the content should be inserted at; for a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"
            }
          ],
          "description": "Inserts a content into the aggregation {@link #getContent content}."
        },
        {
          "name": "open",
          "visibility": "public",
          "description": "Opens the ShellOverlay."
        },
        {
          "name": "removeAllAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeAllContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAriaLabelledBy",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.ID",
            "description": "The removed ariaLabelledBy or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vAriaLabelledBy",
              "type": "int|sap.ui.core.ID|sap.ui.core.Control",
              "optional": false,
              "description": "The ariaLabelledBy to be removed or its index or ID"
            }
          ],
          "description": "Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}."
        },
        {
          "name": "removeContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed content or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vContent",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The content to remove or its index or id"
            }
          ],
          "description": "Removes a content from the aggregation {@link #getContent content}."
        },
        {
          "name": "setSearch",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellOverlay",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSearch",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The search to set"
            }
          ],
          "description": "Sets the aggregated {@link #getSearch search}."
        },
        {
          "name": "setShell",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.ShellOverlay",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oShell",
              "type": "sap.ui.core.ID|sap.ui.unified.ShellLayout",
              "optional": false,
              "description": "ID of an element which becomes the new target of this shell association; alternatively, an element instance may be given"
            }
          ],
          "description": "Sets the associated {@link #getShell shell}."
        }
      ]
    },
    {
      "kind": "class",
      "name": "sap.ui.unified.SplitContainer",
      "basename": "SplitContainer",
      "resource": "sap/ui/unified/SplitContainer.js",
      "module": "sap/ui/unified/SplitContainer",
      "export": "",
      "static": true,
      "visibility": "public",
      "since": "1.15.0",
      "extends": "sap.ui.core.Control",
      "description": "Provides a main content and a secondary content area",
      "experimental": {
        "since": "1.15.0",
        "text": "API is not yet finished and might change completely"
      },
      "deprecated": { "since": "1.44.0" },
      "ui5-metamodel": true,
      "ui5-metadata": {
        "stereotype": "control",
        "properties": [
          {
            "name": "showSecondaryContent",
            "type": "boolean",
            "defaultValue": null,
            "group": "Appearance",
            "visibility": "public",
            "description": "Shows / Hides the secondary area.",
            "methods": ["getShowSecondaryContent", "setShowSecondaryContent"]
          },
          {
            "name": "secondaryContentSize",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "250px",
            "group": "Appearance",
            "visibility": "public",
            "description": "The width if the secondary content. The height is always 100%.",
            "methods": ["getSecondaryContentSize", "setSecondaryContentSize"]
          },
          {
            "name": "secondaryContentWidth",
            "type": "sap.ui.core.CSSSize",
            "defaultValue": "250px",
            "group": "Appearance",
            "visibility": "public",
            "description": "Do not use. Use secondaryContentSize instead.",
            "deprecated": {
              "since": "1.22",
              "text": "Only available for backwards compatibility."
            },
            "methods": ["getSecondaryContentWidth", "setSecondaryContentWidth"]
          },
          {
            "name": "orientation",
            "type": "sap.ui.core.Orientation",
            "defaultValue": "Horizontal",
            "group": "Appearance",
            "visibility": "public",
            "since": "1.22.0",
            "description": "Whether to show the secondary content on the left (\"Horizontal\", default) or on the top (\"Vertical\").",
            "methods": ["getOrientation", "setOrientation"]
          }
        ],
        "aggregations": [
          {
            "name": "content",
            "singularName": "content",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The content to appear in the main area.",
            "methods": [
              "getContent",
              "destroyContent",
              "insertContent",
              "addContent",
              "removeContent",
              "indexOfContent",
              "removeAllContent"
            ]
          },
          {
            "name": "secondaryContent",
            "singularName": "secondaryContent",
            "type": "sap.ui.core.Control",
            "cardinality": "0..n",
            "visibility": "public",
            "description": "The content to appear in the secondary area.",
            "methods": [
              "getSecondaryContent",
              "destroySecondaryContent",
              "insertSecondaryContent",
              "addSecondaryContent",
              "removeSecondaryContent",
              "indexOfSecondaryContent",
              "removeAllSecondaryContent"
            ]
          }
        ],
        "defaultAggregation": "content"
      },
      "constructor": {
        "visibility": "public",
        "parameters": [
          {
            "name": "sId",
            "type": "string",
            "optional": true,
            "description": "id for the new control, generated automatically if no id is given"
          },
          {
            "name": "mSettings",
            "type": "object",
            "optional": true,
            "description": "initial settings for the new control"
          }
        ],
        "description": "Constructor for a new SplitContainer.\n\nAccepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
      },
      "methods": [
        {
          "name": "addContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.SplitContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some content to the aggregation {@link #getContent content}."
        },
        {
          "name": "addSecondaryContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.SplitContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSecondaryContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The secondaryContent to add; if empty, nothing is inserted"
            }
          ],
          "description": "Adds some secondaryContent to the aggregation {@link #getSecondaryContent secondaryContent}."
        },
        {
          "name": "destroyContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.SplitContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the content in the aggregation {@link #getContent content}."
        },
        {
          "name": "destroySecondaryContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.SplitContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "description": "Destroys all the secondaryContent in the aggregation {@link #getSecondaryContent secondaryContent}."
        },
        {
          "name": "extend",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "function",
            "description": "Created class / constructor function"
          },
          "parameters": [
            {
              "name": "sClassName",
              "type": "string",
              "optional": false,
              "description": "Name of the class being created"
            },
            {
              "name": "oClassInfo",
              "type": "object",
              "optional": true,
              "description": "Object literal with information about the class"
            },
            {
              "name": "FNMetaImpl",
              "type": "function",
              "optional": true,
              "description": "Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"
            }
          ],
          "description": "Creates a new subclass of class sap.ui.unified.SplitContainer with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
        },
        {
          "name": "getContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getContent content}.\n\nThe content to appear in the main area."
        },
        {
          "name": "getMetadata",
          "visibility": "public",
          "static": true,
          "returnValue": {
            "type": "sap.ui.core.ElementMetadata",
            "description": "Metadata object describing this class"
          },
          "description": "Returns a metadata object for class sap.ui.unified.SplitContainer."
        },
        {
          "name": "getOrientation",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.core.Orientation",
            "description": "Value of property <code>orientation</code>"
          },
          "description": "Gets current value of property {@link #getOrientation orientation}.\n\nWhether to show the secondary content on the left (\"Horizontal\", default) or on the top (\"Vertical\").\n\nDefault value is <code>Horizontal</code>."
        },
        {
          "name": "getSecondaryContent",
          "visibility": "public",
          "returnValue": { "type": "sap.ui.core.Control[]" },
          "description": "Gets content of aggregation {@link #getSecondaryContent secondaryContent}.\n\nThe content to appear in the secondary area."
        },
        {
          "name": "getSecondaryContentSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>secondaryContentSize</code>"
          },
          "description": "Gets current value of property {@link #getSecondaryContentSize secondaryContentSize}.\n\nThe width if the secondary content. The height is always 100%.\n\nDefault value is <code>250px</code>."
        },
        {
          "name": "getSecondaryContentWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.CSSSize",
            "description": "Value of property <code>secondaryContentWidth</code>"
          },
          "description": "Gets current value of property {@link #getSecondaryContentWidth secondaryContentWidth}.\n\nDo not use. Use secondaryContentSize instead.\n\nDefault value is <code>250px</code>.",
          "deprecated": {
            "since": "1.22",
            "text": "Only available for backwards compatibility."
          }
        },
        {
          "name": "getShowSecondaryContent",
          "visibility": "public",
          "returnValue": {
            "type": "boolean",
            "description": "Value of property <code>showSecondaryContent</code>"
          },
          "description": "Gets current value of property {@link #getShowSecondaryContent showSecondaryContent}.\n\nShows / Hides the secondary area."
        },
        {
          "name": "indexOfContent",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "indexOfSecondaryContent",
          "visibility": "public",
          "returnValue": {
            "type": "int",
            "description": "The index of the provided control in the aggregation if found, or -1 otherwise"
          },
          "parameters": [
            {
              "name": "oSecondaryContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The secondaryContent whose index is looked for"
            }
          ],
          "description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation {@link #getSecondaryContent secondaryContent}. and returns its index if found or -1 otherwise."
        },
        {
          "name": "insertContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.SplitContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The content to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the content should be inserted at; for a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"
            }
          ],
          "description": "Inserts a content into the aggregation {@link #getContent content}."
        },
        {
          "name": "insertSecondaryContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.SplitContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "oSecondaryContent",
              "type": "sap.ui.core.Control",
              "optional": false,
              "description": "The secondaryContent to insert; if empty, nothing is inserted"
            },
            {
              "name": "iIndex",
              "type": "int",
              "optional": false,
              "description": "The <code>0</code>-based index the secondaryContent should be inserted at; for a negative value of <code>iIndex</code>, the secondaryContent is inserted at position 0; for a value greater than the current size of the aggregation, the secondaryContent is inserted at the last position"
            }
          ],
          "description": "Inserts a secondaryContent into the aggregation {@link #getSecondaryContent secondaryContent}."
        },
        {
          "name": "removeAllContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeAllSecondaryContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control[]",
            "description": "An array of the removed elements (might be empty)"
          },
          "description": "Removes all the controls from the aggregation {@link #getSecondaryContent secondaryContent}.\n\nAdditionally, it unregisters them from the hosting UIArea."
        },
        {
          "name": "removeContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed content or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vContent",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The content to remove or its index or id"
            }
          ],
          "description": "Removes a content from the aggregation {@link #getContent content}."
        },
        {
          "name": "removeSecondaryContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.core.Control",
            "description": "The removed secondaryContent or <code>null</code>"
          },
          "parameters": [
            {
              "name": "vSecondaryContent",
              "type": "int|string|sap.ui.core.Control",
              "optional": false,
              "description": "The secondaryContent to remove or its index or id"
            }
          ],
          "description": "Removes a secondaryContent from the aggregation {@link #getSecondaryContent secondaryContent}."
        },
        {
          "name": "setOrientation",
          "visibility": "public",
          "since": "1.22.0",
          "returnValue": {
            "type": "sap.ui.unified.SplitContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sOrientation",
              "type": "sap.ui.core.Orientation",
              "optional": false,
              "description": "New value for property <code>orientation</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getOrientation orientation}.\n\nWhether to show the secondary content on the left (\"Horizontal\", default) or on the top (\"Vertical\").\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>Horizontal</code>."
        },
        {
          "name": "setSecondaryContentSize",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.SplitContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSecondaryContentSize",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>secondaryContentSize</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSecondaryContentSize secondaryContentSize}.\n\nThe width if the secondary content. The height is always 100%.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>250px</code>."
        },
        {
          "name": "setSecondaryContentWidth",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.SplitContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "sSecondaryContentWidth",
              "type": "sap.ui.core.CSSSize",
              "optional": false,
              "description": "New value for property <code>secondaryContentWidth</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getSecondaryContentWidth secondaryContentWidth}.\n\nDo not use. Use secondaryContentSize instead.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>250px</code>.",
          "deprecated": {
            "since": "1.22",
            "text": "Only available for backwards compatibility."
          }
        },
        {
          "name": "setShowSecondaryContent",
          "visibility": "public",
          "returnValue": {
            "type": "sap.ui.unified.SplitContainer",
            "description": "Reference to <code>this</code> in order to allow method chaining"
          },
          "parameters": [
            {
              "name": "bShowSecondaryContent",
              "type": "boolean",
              "optional": false,
              "description": "New value for property <code>showSecondaryContent</code>"
            }
          ],
          "description": "Sets a new value for property {@link #getShowSecondaryContent showSecondaryContent}.\n\nShows / Hides the secondary area.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
        }
      ]
    },
    {
      "kind": "enum",
      "name": "sap.ui.unified.StandardCalendarLegendItem",
      "basename": "StandardCalendarLegendItem",
      "resource": "sap/ui/unified/library.js",
      "module": "sap/ui/unified/library",
      "export": "StandardCalendarLegendItem",
      "static": true,
      "visibility": "public",
      "since": "1.50",
      "description": "Standard day types visualized in a {@link sap.m.PlanningCalendarLegend}, which correspond to days in a {@link sap.ui.unified.Calendar}.",
      "ui5-metamodel": true,
      "ui5-metadata": { "stereotype": "enum" },
      "properties": [
        {
          "name": "NonWorkingDay",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Type used for visualization of the non-working days."
        },
        {
          "name": "Selected",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Type used for visualization of the currently selected day."
        },
        {
          "name": "Today",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Type used for visualization of the current date."
        },
        {
          "name": "WorkingDay",
          "visibility": "public",
          "static": true,
          "type": "string",
          "description": "Type used for visualization of the regular work days."
        }
      ]
    }
  ]
}
